{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/BaseQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { t } from '../../localization';\nimport { validateField, getErrorMessage } from '../../utils/validation';\n\n/**\n * Determines if a question has validation errors\n * @param {Object} question - The question object containing validation rules\n * @param {*} value - The current value of the question\n * @param {boolean} shouldValidate - Whether validation should be performed (e.g., form submitted)\n * @returns {Object} - { hasError: boolean, errorMessage: string }\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const isError = (question, value, shouldValidate = false, language) => {\n  if (!shouldValidate || !question) return {\n    hasError: false,\n    errorMessage: null\n  };\n  const validationRules = {\n    ...(question.validation || {}),\n    required: question.required\n  };\n  const validationResult = validateField(value, validationRules);\n  if (!validationResult.isValid) {\n    const errorMessage = getErrorMessage(validationResult.errorType, language, validationResult.param);\n    return {\n      hasError: true,\n      errorMessage\n    };\n  }\n  return {\n    hasError: false,\n    errorMessage: null\n  };\n};\nconst BaseQuestion = ({\n  question,\n  shouldValidate = false,\n  children,\n  language,\n  value,\n  customErrorMessage\n}) => {\n  _s();\n  const {\n    id,\n    label,\n    required,\n    info,\n    hint\n  } = question;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipWidth, setTooltipWidth] = useState(0);\n  const tooltipRef = useRef(null);\n  const textMeasureRef = useRef(null);\n  const {\n    hasError,\n    errorMessage\n  } = isError(question, value, shouldValidate, language);\n  const labelClass = hasError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n  useEffect(() => {\n    if (showTooltip && info && textMeasureRef.current) {\n      const span = document.createElement('span');\n      span.style.visibility = 'hidden';\n      span.style.position = 'absolute';\n      span.style.whiteSpace = 'nowrap';\n      span.style.fontSize = '0.875rem';\n      span.style.padding = '0.5rem';\n      span.textContent = info;\n      document.body.appendChild(span);\n      const textWidth = span.offsetWidth + 16;\n      document.body.removeChild(span);\n      setTooltipWidth(textWidth);\n    }\n  }, [showTooltip, info]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\n        setShowTooltip(false);\n      }\n    };\n    if (showTooltip) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTooltip]);\n  const requiredMark = required ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-red-600 ml-1\",\n    children: \"*\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 35\n  }, this) : null;\n  const infoIcon = info ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"ml-1 inline-block relative\",\n    ref: tooltipRef,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"w-5 h-5 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-pointer hover:bg-gray-300\",\n      onClick: () => setShowTooltip(!showTooltip),\n      \"aria-label\": showTooltip ? t('hideInfo', language) : t('showInfo', language),\n      children: t('infoIconLabel', language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: textMeasureRef,\n      style: {\n        width: `${tooltipWidth}px`\n      },\n      className: \"absolute left-0 top-full mt-1 p-2 bg-gray-800 text-white text-sm rounded shadow-lg z-10 max-w-[calc(50vw-2rem)] whitespace-normal\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this) : null;\n  const hintElement = hint ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-xs text-gray-500 mt-1\",\n    children: hint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this) : null;\n  const errorMessageElement = hasError ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-xs text-red-600 mt-1\",\n    children: customErrorMessage || errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: labelClass,\n      children: [label, requiredMark, infoIcon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), hintElement, errorMessageElement]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseQuestion, \"WUKUE2UsD94cHIsaEcSHqteE/Ww=\");\n_c = BaseQuestion;\nexport default BaseQuestion;\nvar _c;\n$RefreshReg$(_c, \"BaseQuestion\");","map":{"version":3,"names":["React","useState","useRef","useEffect","t","validateField","getErrorMessage","jsxDEV","_jsxDEV","isError","question","value","shouldValidate","language","hasError","errorMessage","validationRules","validation","required","validationResult","isValid","errorType","param","BaseQuestion","children","customErrorMessage","_s","id","label","info","hint","showTooltip","setShowTooltip","tooltipWidth","setTooltipWidth","tooltipRef","textMeasureRef","labelClass","current","span","document","createElement","style","visibility","position","whiteSpace","fontSize","padding","textContent","body","appendChild","textWidth","offsetWidth","removeChild","handleClickOutside","event","contains","target","addEventListener","removeEventListener","requiredMark","className","fileName","_jsxFileName","lineNumber","columnNumber","infoIcon","ref","onClick","width","hintElement","errorMessageElement","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/BaseQuestion.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { t } from '../../localization';\nimport { validateField, getErrorMessage } from '../../utils/validation';\n\n/**\n * Determines if a question has validation errors\n * @param {Object} question - The question object containing validation rules\n * @param {*} value - The current value of the question\n * @param {boolean} shouldValidate - Whether validation should be performed (e.g., form submitted)\n * @returns {Object} - { hasError: boolean, errorMessage: string }\n */\nexport const isError = (question, value, shouldValidate = false, language) => {\n  if (!shouldValidate || !question) return { hasError: false, errorMessage: null };\n  \n  const validationRules = {\n    ...(question.validation || {}),\n    required: question.required\n  };\n  \n  const validationResult = validateField(value, validationRules);\n  \n  if (!validationResult.isValid) {\n    const errorMessage = getErrorMessage(validationResult.errorType, language, validationResult.param);\n    return { hasError: true, errorMessage };\n  }\n  \n  return { hasError: false, errorMessage: null };\n};\n\nconst BaseQuestion = ({ \n  question, \n  shouldValidate = false,\n  children, \n  language,\n  value,\n  customErrorMessage,\n}) => {\n  const { id, label, required, info, hint } = question;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipWidth, setTooltipWidth] = useState(0);\n  const tooltipRef = useRef(null);\n  const textMeasureRef = useRef(null);\n  \n  const { hasError, errorMessage } = isError(question, value, shouldValidate, language);\n  \n  const labelClass = hasError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n  \n  useEffect(() => {\n    if (showTooltip && info && textMeasureRef.current) {\n      const span = document.createElement('span');\n      span.style.visibility = 'hidden';\n      span.style.position = 'absolute';\n      span.style.whiteSpace = 'nowrap';\n      span.style.fontSize = '0.875rem'; \n      span.style.padding = '0.5rem'; \n      span.textContent = info;\n      document.body.appendChild(span);\n      \n      const textWidth = span.offsetWidth + 16;\n      document.body.removeChild(span);\n      \n      setTooltipWidth(textWidth);\n    }\n  }, [showTooltip, info]);\n  \n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\n        setShowTooltip(false);\n      }\n    };\n\n    if (showTooltip) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTooltip]);\n  \n  const requiredMark = required ? <span className=\"text-red-600 ml-1\">*</span> : null;\n  \n  const infoIcon = info ? (\n    <span className=\"ml-1 inline-block relative\" ref={tooltipRef}>\n      <span \n        className=\"w-5 h-5 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-pointer hover:bg-gray-300\"\n        onClick={() => setShowTooltip(!showTooltip)}\n        aria-label={showTooltip ? t('hideInfo', language) : t('showInfo', language)}\n      >\n        {t('infoIconLabel', language)}\n      </span>\n      {showTooltip && (\n        <span \n          ref={textMeasureRef}\n          style={{ width: `${tooltipWidth}px` }}\n          className=\"absolute left-0 top-full mt-1 p-2 bg-gray-800 text-white text-sm rounded shadow-lg z-10 max-w-[calc(50vw-2rem)] whitespace-normal\"\n        >\n          {info}\n        </span>\n      )}\n    </span>\n  ) : null;\n\n  const hintElement = hint ? (\n    <p className=\"text-xs text-gray-500 mt-1\">{hint}</p>\n  ) : null;\n\n  const errorMessageElement = hasError ? (\n    <p className=\"text-xs text-red-600 mt-1\">\n      {customErrorMessage || errorMessage}\n    </p>\n  ) : null;\n\n  return (\n    <div className=\"mb-8\" key={id}>\n      {label && (\n        <label className={labelClass}>\n          {label}\n          {requiredMark}\n          {infoIcon}\n        </label>\n      )}\n      <div className=\"mt-2\">\n        {children}\n      </div>\n      {hintElement}\n      {errorMessageElement}\n    </div>\n  );\n};\n\nexport default BaseQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}