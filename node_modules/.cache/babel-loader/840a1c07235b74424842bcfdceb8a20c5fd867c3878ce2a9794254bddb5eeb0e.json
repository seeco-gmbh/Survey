{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/MultiselectQuestion.js\";\nimport React from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiselectQuestion = ({\n  question,\n  isError,\n  value = [],\n  onChange,\n  language,\n  errorStyles\n}) => {\n  const handleMultiSelect = (option, checked) => {\n    if (checked) {\n      onChange(question.id, [...value, option]);\n    } else {\n      onChange(question.id, value.filter(item => item !== option));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    value: value,\n    children: [question.maxSelect && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-gray-500 text-xs mb-2 block\",\n      children: [\"(max. \", question.maxSelect, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: errorStyles ? errorStyles.container('space-y-3 p-4') : '',\n      \"aria-invalid\": isError,\n      children: question.options.map(option => {\n        const isChecked = value.includes(option);\n        const isDisabled = question.maxSelect && value.length >= question.maxSelect && !isChecked;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `${question.id}-${option}`,\n            checked: isChecked,\n            disabled: isDisabled,\n            onChange: e => handleMultiSelect(option, e.target.checked),\n            className: \"mr-3 h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `${question.id}-${option}`,\n            className: isDisabled ? \"text-gray-400\" : \"\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = MultiselectQuestion;\nexport default MultiselectQuestion;\nvar _c;\n$RefreshReg$(_c, \"MultiselectQuestion\");","map":{"version":3,"names":["React","BaseQuestion","jsxDEV","_jsxDEV","MultiselectQuestion","question","isError","value","onChange","language","errorStyles","handleMultiSelect","option","checked","id","filter","item","children","maxSelect","className","fileName","_jsxFileName","lineNumber","columnNumber","container","options","map","isChecked","includes","isDisabled","length","type","disabled","e","target","htmlFor","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/MultiselectQuestion.js"],"sourcesContent":["import React from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst MultiselectQuestion = ({ \n  question, \n  isError, \n  value = [], \n  onChange, \n  language,\n  errorStyles\n}) => {\n  const handleMultiSelect = (option, checked) => {\n    if (checked) {\n      onChange(question.id, [...value, option]);\n    } else {\n      onChange(question.id, value.filter(item => item !== option));\n    }\n  };\n\n  return (\n    <BaseQuestion question={question} isError={isError} language={language} value={value}>\n      {question.maxSelect && (\n        <span className=\"text-gray-500 text-xs mb-2 block\">(max. {question.maxSelect})</span>\n      )}\n      <div \n        className={errorStyles ? errorStyles.container('space-y-3 p-4') : ''}\n        aria-invalid={isError}\n      >\n        {question.options.map((option) => {\n          const isChecked = value.includes(option);\n          const isDisabled = question.maxSelect && \n                          value.length >= question.maxSelect && \n                          !isChecked;\n          \n          return (\n            <div key={option} className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id={`${question.id}-${option}`}\n                checked={isChecked}\n                disabled={isDisabled}\n                onChange={(e) => handleMultiSelect(option, e.target.checked)}\n                className=\"mr-3 h-5 w-5\"\n              />\n              <label \n                htmlFor={`${question.id}-${option}`} \n                className={isDisabled ? \"text-gray-400\" : \"\"}\n              >\n                {option}\n              </label>\n            </div>\n          );\n        })}\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default MultiselectQuestion; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,mBAAmB,GAAGA,CAAC;EAC3BC,QAAQ;EACRC,OAAO;EACPC,KAAK,GAAG,EAAE;EACVC,QAAQ;EACRC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,OAAO,KAAK;IAC7C,IAAIA,OAAO,EAAE;MACXL,QAAQ,CAACH,QAAQ,CAACS,EAAE,EAAE,CAAC,GAAGP,KAAK,EAAEK,MAAM,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLJ,QAAQ,CAACH,QAAQ,CAACS,EAAE,EAAEP,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKJ,MAAM,CAAC,CAAC;IAC9D;EACF,CAAC;EAED,oBACET,OAAA,CAACF,YAAY;IAACI,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA,QAAS;IAACF,KAAK,EAAEA,KAAM;IAAAU,QAAA,GAClFZ,QAAQ,CAACa,SAAS,iBACjBf,OAAA;MAAMgB,SAAS,EAAC,kCAAkC;MAAAF,QAAA,GAAC,QAAM,EAACZ,QAAQ,CAACa,SAAS,EAAC,GAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACrF,eACDpB,OAAA;MACEgB,SAAS,EAAET,WAAW,GAAGA,WAAW,CAACc,SAAS,CAAC,eAAe,CAAC,GAAG,EAAG;MACrE,gBAAclB,OAAQ;MAAAW,QAAA,EAErBZ,QAAQ,CAACoB,OAAO,CAACC,GAAG,CAAEd,MAAM,IAAK;QAChC,MAAMe,SAAS,GAAGpB,KAAK,CAACqB,QAAQ,CAAChB,MAAM,CAAC;QACxC,MAAMiB,UAAU,GAAGxB,QAAQ,CAACa,SAAS,IACrBX,KAAK,CAACuB,MAAM,IAAIzB,QAAQ,CAACa,SAAS,IAClC,CAACS,SAAS;QAE1B,oBACExB,OAAA;UAAkBgB,SAAS,EAAC,mBAAmB;UAAAF,QAAA,gBAC7Cd,OAAA;YACE4B,IAAI,EAAC,UAAU;YACfjB,EAAE,EAAE,GAAGT,QAAQ,CAACS,EAAE,IAAIF,MAAM,EAAG;YAC/BC,OAAO,EAAEc,SAAU;YACnBK,QAAQ,EAAEH,UAAW;YACrBrB,QAAQ,EAAGyB,CAAC,IAAKtB,iBAAiB,CAACC,MAAM,EAAEqB,CAAC,CAACC,MAAM,CAACrB,OAAO,CAAE;YAC7DM,SAAS,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACFpB,OAAA;YACEgC,OAAO,EAAE,GAAG9B,QAAQ,CAACS,EAAE,IAAIF,MAAM,EAAG;YACpCO,SAAS,EAAEU,UAAU,GAAG,eAAe,GAAG,EAAG;YAAAZ,QAAA,EAE5CL;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA,GAdAX,MAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeX,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAACa,EAAA,GArDIhC,mBAAmB;AAuDzB,eAAeA,mBAAmB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}