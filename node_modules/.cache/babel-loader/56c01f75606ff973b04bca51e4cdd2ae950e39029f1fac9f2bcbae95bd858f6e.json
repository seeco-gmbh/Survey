{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js\";\nimport React from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  isError,\n  value,\n  onChange,\n  language\n}) => {\n  // Default to min value if no value is provided\n  const currentValue = value !== undefined ? value : question.min;\n  return /*#__PURE__*/_jsxDEV(QuestionElement, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-medium ml-2\",\n        children: currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: question.min,\n        max: question.max,\n        value: currentValue,\n        onChange: e => onChange(question.id, parseInt(e.target.value)),\n        className: `w-full ${isError ? 'accent-red-500' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs mt-1\",\n        children: Object.entries(question.marks).map(([value, label]) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center\",\n          style: {\n            width: `${100 / (Object.keys(question.marks).length - 1)}%`\n          },\n          children: label\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","BaseQuestion","jsxDEV","_jsxDEV","SliderQuestion","question","isError","value","onChange","language","currentValue","undefined","min","QuestionElement","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","max","e","id","parseInt","target","Object","entries","marks","map","label","style","width","keys","length","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js"],"sourcesContent":["import React from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  isError, \n  value, \n  onChange, \n  language \n}) => {\n  // Default to min value if no value is provided\n  const currentValue = value !== undefined ? value : question.min;\n  \n  return (\n    <QuestionElement question={question} isError={isError} language={language}>\n      <div>\n        <span className=\"text-lg font-medium ml-2\">{currentValue}</span>\n        <input\n          type=\"range\"\n          min={question.min}\n          max={question.max}\n          value={currentValue}\n          onChange={(e) => onChange(question.id, parseInt(e.target.value))}\n          className={`w-full ${isError ? 'accent-red-500' : ''}`}\n        />\n        <div className=\"flex justify-between text-xs mt-1\">\n          {Object.entries(question.marks).map(([value, label]) => (\n            <span key={value} className=\"text-center\" style={{width: `${100/(Object.keys(question.marks).length-1)}%`}}>\n              {label}\n            </span>\n          ))}\n        </div>\n      </div>\n    </QuestionElement>\n  );\n};\n\nexport default SliderQuestion; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EACtBC,QAAQ;EACRC,OAAO;EACPC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,YAAY,GAAGH,KAAK,KAAKI,SAAS,GAAGJ,KAAK,GAAGF,QAAQ,CAACO,GAAG;EAE/D,oBACET,OAAA,CAACU,eAAe;IAACR,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA,QAAS;IAAAK,QAAA,eACxEX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAMY,SAAS,EAAC,0BAA0B;QAAAD,QAAA,EAAEJ;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChEhB,OAAA;QACEiB,IAAI,EAAC,OAAO;QACZR,GAAG,EAAEP,QAAQ,CAACO,GAAI;QAClBS,GAAG,EAAEhB,QAAQ,CAACgB,GAAI;QAClBd,KAAK,EAAEG,YAAa;QACpBF,QAAQ,EAAGc,CAAC,IAAKd,QAAQ,CAACH,QAAQ,CAACkB,EAAE,EAAEC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAClB,KAAK,CAAC,CAAE;QACjEQ,SAAS,EAAE,UAAUT,OAAO,GAAG,gBAAgB,GAAG,EAAE;MAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACFhB,OAAA;QAAKY,SAAS,EAAC,mCAAmC;QAAAD,QAAA,EAC/CY,MAAM,CAACC,OAAO,CAACtB,QAAQ,CAACuB,KAAK,CAAC,CAACC,GAAG,CAAC,CAAC,CAACtB,KAAK,EAAEuB,KAAK,CAAC,kBACjD3B,OAAA;UAAkBY,SAAS,EAAC,aAAa;UAACgB,KAAK,EAAE;YAACC,KAAK,EAAE,GAAG,GAAG,IAAEN,MAAM,CAACO,IAAI,CAAC5B,QAAQ,CAACuB,KAAK,CAAC,CAACM,MAAM,GAAC,CAAC,CAAC;UAAG,CAAE;UAAApB,QAAA,EACxGgB;QAAK,GADGvB,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB,CAAC;AAACgB,EAAA,GAhCI/B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}