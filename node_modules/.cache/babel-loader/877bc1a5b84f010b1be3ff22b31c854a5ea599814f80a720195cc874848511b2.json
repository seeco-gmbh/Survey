{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/TextareaQuestion.js\";\nimport React from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { getInputClass } from './utils/errorStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextareaQuestion = ({\n  question,\n  isError,\n  value = '',\n  onChange,\n  language\n}) => {\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: `h-32 ${getInputClass(isError)}`,\n      value: value,\n      onChange: e => onChange(question.id, e.target.value),\n      placeholder: question.placeholder || '',\n      \"aria-invalid\": isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = TextareaQuestion;\nexport default TextareaQuestion;\nvar _c;\n$RefreshReg$(_c, \"TextareaQuestion\");","map":{"version":3,"names":["React","BaseQuestion","getInputClass","jsxDEV","_jsxDEV","TextareaQuestion","question","isError","value","onChange","language","children","className","e","id","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/TextareaQuestion.js"],"sourcesContent":["import React from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { getInputClass } from './utils/errorStyles';\n\nconst TextareaQuestion = ({ \n  question, \n  isError, \n  value = '', \n  onChange, \n  language \n}) => {\n  return (\n    <BaseQuestion question={question} isError={isError} language={language} value={value}>\n      <textarea\n        className={`h-32 ${getInputClass(isError)}`}\n        value={value}\n        onChange={(e) => onChange(question.id, e.target.value)}\n        placeholder={question.placeholder || ''}\n        aria-invalid={isError}\n      />\n    </BaseQuestion>\n  );\n};\n\nexport default TextareaQuestion; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,QAAQ;EACRC,OAAO;EACPC,KAAK,GAAG,EAAE;EACVC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,oBACEN,OAAA,CAACH,YAAY;IAACK,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA,QAAS;IAACF,KAAK,EAAEA,KAAM;IAAAG,QAAA,eACnFP,OAAA;MACEQ,SAAS,EAAE,QAAQV,aAAa,CAACK,OAAO,CAAC,EAAG;MAC5CC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAGI,CAAC,IAAKJ,QAAQ,CAACH,QAAQ,CAACQ,EAAE,EAAED,CAAC,CAACE,MAAM,CAACP,KAAK,CAAE;MACvDQ,WAAW,EAAEV,QAAQ,CAACU,WAAW,IAAI,EAAG;MACxC,gBAAcT;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACC,EAAA,GAlBIhB,gBAAgB;AAoBtB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}