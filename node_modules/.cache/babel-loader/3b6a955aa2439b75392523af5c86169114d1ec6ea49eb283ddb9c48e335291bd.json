{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/InteractiveSurvey.js\";\nimport React from 'react';\nimport { t, languages, defaultLanguage } from '../localization';\nimport { getSurveyData } from '../data/surveyData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass InteractiveSurvey extends React.Component {\n  constructor(props) {\n    super(props);\n    // Change language\n    this.changeLanguage = language => {\n      if (languages[language]) {\n        const surveyData = getSurveyData(language);\n        console.log('Change Language - Language:', language);\n        console.log('Change Language - Survey Data:', surveyData);\n        this.setState({\n          language,\n          surveyData: surveyData\n        });\n      }\n    };\n    // Proceed after language selection\n    this.proceedWithLanguage = () => {\n      this.setState({\n        languageSelected: true\n      });\n    };\n    // Save answers\n    this.saveAnswer = (questionId, value, isUserAction = false) => {\n      this.setState(prevState => {\n        const newAnswers = {\n          ...prevState.answers,\n          [questionId]: value\n        };\n\n        // If this is a user action for a ranked question, mark it as modified\n        if (isUserAction) {\n          newAnswers[`${questionId}_modified`] = true;\n        }\n        return {\n          answers: newAnswers\n        };\n      });\n    };\n    // Handle multiple answers\n    this.handleMultiSelect = (questionId, option, checked) => {\n      const currentSelections = this.state.answers[questionId] || [];\n      if (checked) {\n        this.saveAnswer(questionId, [...currentSelections, option]);\n      } else {\n        this.saveAnswer(questionId, currentSelections.filter(item => item !== option));\n      }\n    };\n    // Handle ranking updates\n    this.handleRankingChange = (questionId, newOrder) => {\n      // Always mark as a user action when ranking changes\n      this.saveAnswer(questionId, newOrder, true);\n    };\n    // Next section\n    this.nextSection = () => {\n      // Validate required fields\n      if (!this.validateRequiredFields()) {\n        return;\n      }\n      this.setState(prevState => {\n        // If not the last section, go to next section\n        if (this.state.currentSection < this.state.surveyData.length - 1) {\n          // Scroll to top after state update\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n          return {\n            currentSection: prevState.currentSection + 1,\n            validationError: false,\n            missingFields: [],\n            progress: Math.round((prevState.currentSection + 1) / (this.state.surveyData.length - 1) * 100)\n          };\n        } else {\n          // If last section, submit the form\n          this.handleSubmit();\n          return null;\n        }\n      });\n    };\n    // Previous section\n    this.prevSection = () => {\n      this.setState(prevState => {\n        // Scroll to top after state update\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        return {\n          currentSection: prevState.currentSection - 1,\n          validationError: false,\n          missingFields: [],\n          progress: Math.round((prevState.currentSection - 1) / (this.state.surveyData.length - 1) * 100)\n        };\n      });\n    };\n    // Validate required fields\n    this.validateRequiredFields = () => {\n      const currentSectionQuestions = this.state.surveyData[this.state.currentSection].questions;\n      const missingFields = [];\n      const requiredQuestions = currentSectionQuestions.filter(q => q.required && this.shouldShowQuestion(q));\n      requiredQuestions.forEach(q => {\n        const answer = this.state.answers[q.id];\n        if (answer === undefined || answer === '' || Array.isArray(answer) && answer.length === 0) {\n          missingFields.push(q.id);\n        }\n      });\n      if (missingFields.length > 0) {\n        this.setState({\n          validationError: true,\n          missingFields\n        });\n        return false;\n      }\n      this.setState({\n        validationError: false,\n        missingFields: []\n      });\n      return true;\n    };\n    // Save to tiiny.host with JSONBin\n    this.saveToTiinyHost = data => {\n      // Option 1: Use JSONBin for public storage\n      fetch('https://api.jsonbin.io/v3/b', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Master-Key': '$2a$10$d/tjFfo2wRCJsPoPs307DO2097IW8VsfNdz9xmCcuXQ4IscWPYj1a',\n          'X-Bin-Name': this.state.surveyId\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Saved to JSONBin:', data);\n        // Save ID in localStorage\n        localStorage.setItem('lastSurveyId', data.metadata.id);\n      }).catch(error => {\n        console.error('Error saving to JSONBin:', error);\n        // Fallback: Save to localStorage\n        this.saveToLocalStorage(data);\n      });\n    };\n    // Save to localStorage\n    this.saveToLocalStorage = data => {\n      try {\n        // Get existing data\n        const existingData = JSON.parse(localStorage.getItem('surveyResponses') || '[]');\n        // Add new data\n        existingData.push({\n          id: this.state.surveyId,\n          timestamp: new Date().toISOString(),\n          data: data\n        });\n        // Save back to localStorage\n        localStorage.setItem('surveyResponses', JSON.stringify(existingData));\n        console.log('Saved to localStorage as fallback');\n      } catch (e) {\n        console.error('Error saving to localStorage:', e);\n      }\n    };\n    // Submit survey\n    this.handleSubmit = () => {\n      console.log(\"Answers:\", this.state.answers);\n\n      // Prepare data for submission\n      const submissionData = {\n        surveyId: this.state.surveyId,\n        answers: this.state.answers,\n        submittedAt: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        screenSize: `${window.innerWidth}x${window.innerHeight}`\n      };\n\n      // Save to tiiny.host with JSONBin or similar service\n      this.saveToTiinyHost(submissionData);\n      this.setState({\n        submitted: true\n      });\n    };\n    // Check if a question should be displayed based on conditional logic\n    this.shouldShowQuestion = question => {\n      if (!question.condition) return true;\n      const {\n        dependsOn,\n        value\n      } = question.condition;\n      const answer = this.state.answers[dependsOn];\n\n      // If answer is undefined, the condition is not met\n      if (answer === undefined) return false;\n\n      // Handle array values (for multiselect)\n      if (Array.isArray(answer)) {\n        // If value is also an array, check if any value matches\n        if (Array.isArray(value)) {\n          return value.some(v => answer.includes(v));\n        }\n        // If value is a string, check if it's included in the answer array\n        return answer.includes(value);\n      }\n\n      // Handle boolean values (for checkbox)\n      if (typeof answer === 'boolean') {\n        return answer === value;\n      }\n\n      // Handle function conditions\n      if (typeof value === 'function') {\n        return value(answer);\n      }\n\n      // Default case: direct comparison\n      return answer === value;\n    };\n    // Render function for question types\n    this.renderQuestion = question => {\n      var _this$state3, _this$state4;\n      if (!this.shouldShowQuestion(question)) return null;\n      const isRequired = question.required;\n      const isError = this.state.validationError && this.state.missingFields.includes(question.id);\n      const labelClass = isError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n      const inputClass = isError ? \"w-full p-2 border border-red-500 rounded\" : \"w-full p-2 border rounded\";\n\n      // Required field asterisk\n      const requiredMark = isRequired ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-600 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 39\n      }, this) : null;\n\n      // Info icon for questions with additional information\n      const infoIcon = question.info ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 inline-block relative group\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-help\",\n          children: t('infoIconLabel', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute left-0 bottom-full mb-2 w-64 p-2 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity z-10\",\n          children: question.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this) : null;\n\n      // Hint element to be rendered below each question\n      const hintElement = question.hint ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 mt-1\",\n        children: question.hint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }, this) : null;\n      let questionElement;\n      switch (question.type) {\n        case 'text':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: inputClass,\n              value: this.state.answers[question.id] || '',\n              onChange: e => this.saveAnswer(question.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'email':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: inputClass,\n              value: this.state.answers[question.id] || '',\n              onChange: e => this.saveAnswer(question.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'textarea':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `h-24 ${inputClass}`,\n              value: this.state.answers[question.id] || '',\n              onChange: e => this.saveAnswer(question.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'select':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: `bg-white ${inputClass}`,\n              value: this.state.answers[question.id] || '',\n              onChange: e => this.saveAnswer(question.id, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: t('selectPlaceholder', this.state.language)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 15\n              }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'multiselect':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon, question.maxSelect && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 text-xs ml-1\",\n                children: [\"(max. \", question.maxSelect, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `space-y-2 p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'}`,\n              children: question.options.map(option => {\n                const currentSelections = this.state.answers[question.id] || [];\n                const isChecked = currentSelections.includes(option);\n                const isDisabled = question.maxSelect && currentSelections.length >= question.maxSelect && !isChecked;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `${question.id}-${option}`,\n                    checked: isChecked,\n                    disabled: isDisabled,\n                    onChange: e => this.handleMultiSelect(question.id, option, e.target.checked),\n                    className: \"mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `${question.id}-${option}`,\n                    className: isDisabled ? \"text-gray-400\" : \"\",\n                    children: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 21\n                  }, this)]\n                }, option, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'checkbox':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center p-2 rounded ${isError ? 'bg-red-50' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: question.id,\n                checked: this.state.answers[question.id] || false,\n                onChange: e => this.saveAnswer(question.id, e.target.checked),\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: question.id,\n                className: isError ? \"text-red-600\" : \"\",\n                children: [question.label, requiredMark, infoIcon]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 13\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'range':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, \": \", this.state.answers[question.id] || 0, \"%\", requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.min,\n              max: question.max,\n              step: question.step,\n              value: this.state.answers[question.id] || 0,\n              onChange: e => this.saveAnswer(question.id, parseInt(e.target.value)),\n              className: `w-full ${isError ? 'accent-red-500' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between text-xs mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [question.min, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [question.max, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'slider':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, \": \", this.state.answers[question.id] || question.min, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.min,\n              max: question.max,\n              value: this.state.answers[question.id] || question.min,\n              onChange: e => this.saveAnswer(question.id, parseInt(e.target.value)),\n              className: `w-full ${isError ? 'accent-red-500' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between text-xs mt-1\",\n              children: Object.entries(question.marks).map(([value, label]) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-center\",\n                style: {\n                  width: `${100 / (Object.keys(question.marks).length - 1)}%`\n                },\n                children: label\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'number':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: inputClass,\n              value: this.state.answers[question.id] || '',\n              onChange: e => this.saveAnswer(question.id, e.target.value === '' ? '' : Number(e.target.value)),\n              min: question.min !== undefined ? question.min : undefined,\n              max: question.max !== undefined ? question.max : undefined,\n              step: question.step !== undefined ? question.step : 1,\n              placeholder: question.placeholder || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'date':\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: inputClass,\n              value: this.state.answers[question.id] || '',\n              onChange: e => this.saveAnswer(question.id, e.target.value),\n              min: question.minDate || undefined,\n              max: question.maxDate || undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 11\n          }, this);\n          break;\n        case 'ranked':\n          if (!this.state.answers[question.id]) {\n            this.saveAnswer(question.id, [...question.options]);\n          }\n          const currentRanking = this.state.answers[question.id] || [...question.options];\n          const hasUserModified = this.state.answers[`${question.id}_modified`] === true;\n\n          // Track drag indicator position in component state if not already present\n          if (!this.state[`dragIndicator_${question.id}`]) {\n            this.state[`dragIndicator_${question.id}`] = {\n              visible: false,\n              position: -1\n            };\n          }\n          questionElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: labelClass,\n              children: [question.label, requiredMark, infoIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'} relative`,\n              onDragOver: e => {\n                // Only handle if we're dragging a ranked item from this question\n                const dragData = e.dataTransfer.getData('text/plain');\n                if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                  return;\n                }\n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'move';\n\n                // Show indicator at the end if appropriate\n                const rect = e.currentTarget.getBoundingClientRect();\n                const mouseY = e.clientY;\n                const bottomThreshold = rect.bottom - 10;\n                if (mouseY > bottomThreshold) {\n                  this.setState({\n                    [`dragIndicator_${question.id}`]: {\n                      visible: true,\n                      position: currentRanking.length\n                    }\n                  });\n                }\n              },\n              onDrop: e => {\n                // Only handle if we're dragging a ranked item from this question\n                const dragData = e.dataTransfer.getData('text/plain');\n                if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                  return;\n                }\n                e.preventDefault();\n\n                // Get the source index\n                const sourceIndex = parseInt(dragData.split('_')[2]);\n                const targetIndex = currentRanking.length; // Drop at the end\n\n                // Reorder the items\n                if (sourceIndex !== targetIndex) {\n                  const newRanking = [...currentRanking];\n                  const [movedItem] = newRanking.splice(sourceIndex, 1);\n                  newRanking.splice(targetIndex, 0, movedItem);\n                  this.handleRankingChange(question.id, newRanking);\n                }\n\n                // Hide the drag indicator\n                this.setState({\n                  [`dragIndicator_${question.id}`]: {\n                    visible: false,\n                    position: -1\n                  }\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [currentRanking.map((item, index) => {\n                  var _this$state, _this$state2;\n                  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [((_this$state = this.state[`dragIndicator_${question.id}`]) === null || _this$state === void 0 ? void 0 : _this$state.visible) && ((_this$state2 = this.state[`dragIndicator_${question.id}`]) === null || _this$state2 === void 0 ? void 0 : _this$state2.position) === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"h-1 bg-blue-500 rounded-full my-1 transition-all duration-200\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center p-2 bg-white border rounded cursor-move hover:bg-gray-50\",\n                      draggable: true,\n                      onDragStart: e => {\n                        // Use a custom format that includes the question ID and index\n                        e.dataTransfer.setData('text/plain', `ranked_${question.id}_${index}`);\n                        e.currentTarget.classList.add('bg-gray-100', 'opacity-50');\n                        e.dataTransfer.effectAllowed = 'move';\n                      },\n                      onDragEnd: e => {\n                        e.currentTarget.classList.remove('bg-gray-100', 'opacity-50');\n\n                        // Hide the drag indicator\n                        this.setState({\n                          [`dragIndicator_${question.id}`]: {\n                            visible: false,\n                            position: -1\n                          }\n                        });\n                      },\n                      onDragOver: e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // Get the source index from the drag data\n                        const dragData = e.dataTransfer.getData('text/plain');\n                        if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                          return;\n                        }\n                        const sourceIndex = parseInt(dragData.split('_')[2]);\n\n                        // Don't show indicator if dragging onto self\n                        if (sourceIndex === index) {\n                          return;\n                        }\n\n                        // Determine if we should show the indicator above or below this item\n                        const rect = e.currentTarget.getBoundingClientRect();\n                        const mouseY = e.clientY;\n                        const threshold = rect.top + rect.height / 2;\n                        if (mouseY < threshold) {\n                          // Show indicator above this item\n                          this.setState({\n                            [`dragIndicator_${question.id}`]: {\n                              visible: true,\n                              position: index\n                            }\n                          });\n                        } else {\n                          // Show indicator below this item\n                          this.setState({\n                            [`dragIndicator_${question.id}`]: {\n                              visible: true,\n                              position: index + 1\n                            }\n                          });\n                        }\n                        e.dataTransfer.dropEffect = 'move';\n                      },\n                      onDragLeave: e => {\n                        // Only hide if we're leaving this element (not entering a child)\n                        if (!e.currentTarget.contains(e.relatedTarget)) {\n                          // Don't hide the indicator here, as it might be needed for other items\n                        }\n                      },\n                      onDrop: e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // Get the source index from the drag data\n                        const dragData = e.dataTransfer.getData('text/plain');\n                        if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                          return;\n                        }\n                        const sourceIndex = parseInt(dragData.split('_')[2]);\n\n                        // Determine if we should drop above or below this item\n                        const rect = e.currentTarget.getBoundingClientRect();\n                        const mouseY = e.clientY;\n                        const threshold = rect.top + rect.height / 2;\n                        let targetIndex;\n                        if (mouseY < threshold) {\n                          // Drop above this item\n                          targetIndex = index;\n                        } else {\n                          // Drop below this item\n                          targetIndex = index + 1;\n                        }\n\n                        // Don't do anything if dropping onto self\n                        if (sourceIndex === targetIndex || sourceIndex === targetIndex - 1) {\n                          return;\n                        }\n\n                        // Reorder the items\n                        const newRanking = [...currentRanking];\n                        const [movedItem] = newRanking.splice(sourceIndex, 1);\n\n                        // Adjust target index if needed\n                        if (sourceIndex < targetIndex) {\n                          targetIndex--;\n                        }\n                        newRanking.splice(targetIndex, 0, movedItem);\n\n                        // Update the state\n                        this.handleRankingChange(question.id, newRanking);\n\n                        // Hide the drag indicator\n                        this.setState({\n                          [`dragIndicator_${question.id}`]: {\n                            visible: false,\n                            position: -1\n                          }\n                        });\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-shrink-0 mr-2 text-gray-400\",\n                        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                          xmlns: \"http://www.w3.org/2000/svg\",\n                          className: \"h-5 w-5\",\n                          fill: \"none\",\n                          viewBox: \"0 0 24 24\",\n                          stroke: \"currentColor\",\n                          children: /*#__PURE__*/_jsxDEV(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M4 6h16M4 12h16M4 18h16\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 724,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 723,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 722,\n                        columnNumber: 23\n                      }, this), hasUserModified && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-2\",\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 728,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 732,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 21\n                    }, this)]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 19\n                  }, this);\n                }), ((_this$state3 = this.state[`dragIndicator_${question.id}`]) === null || _this$state3 === void 0 ? void 0 : _this$state3.visible) && ((_this$state4 = this.state[`dragIndicator_${question.id}`]) === null || _this$state4 === void 0 ? void 0 : _this$state4.position) === currentRanking.length && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-1 bg-blue-500 rounded-full my-1 transition-all duration-200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 13\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 11\n          }, this);\n          break;\n        default:\n          return null;\n      }\n\n      // If there's a hint, add it to the question element by cloning and adding the hint\n      if (hintElement) {\n        // Clone the question element and add the hint as a child\n        return /*#__PURE__*/React.cloneElement(questionElement, {}, ...React.Children.toArray(questionElement.props.children), hintElement);\n      }\n      return questionElement;\n    };\n    this.renderCurrentSection = () => {\n      if (!this.state.surveyData || !Array.isArray(this.state.surveyData) || !this.state.surveyData[this.state.currentSection]) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading section data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 9\n        }, this);\n      }\n      const section = this.state.surveyData[this.state.currentSection];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2\",\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: section.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 9\n        }, this), this.state.validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-50 border border-red-300 rounded text-red-700 text-sm\",\n          children: t('validationError', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), section.questions.map(question => this.renderQuestion(question)), this.state.currentSection === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 p-3 bg-blue-50 border border-blue-200 rounded text-blue-800 text-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: t('anonymityNote', this.state.language)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 7\n      }, this);\n    };\n    this.renderResults = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: t('thankYouTitle', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: t('thankYouMessage', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 bg-green-50 border border-green-200 rounded-lg max-w-md mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-16 h-16 mx-auto mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              className: \"text-green-600\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-800\",\n            children: t('thankYouMessage', this.state.language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-gray-600\",\n            children: [t('surveyIdLabel', this.state.language), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-mono bg-gray-100 px-2 py-1 rounded\",\n              children: this.state.surveyId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 7\n      }, this);\n    };\n    this.renderLanguageSelectionScreen = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center min-h-[400px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-8\",\n          children: t('welcomeToSurvey', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg mb-4\",\n            children: t('pleaseSelectLanguage', this.state.language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative inline-block w-64\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: this.state.language,\n              onChange: e => this.changeLanguage(e.target.value),\n              className: \"block w-full appearance-none bg-white border border-gray-300 hover:border-gray-400 px-4 py-3 pr-8 rounded-lg shadow leading-tight focus:outline-none focus:shadow-outline text-lg\",\n              children: Object.entries(languages).map(([code, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: code,\n                children: name\n              }, code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"fill-current h-5 w-5\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.proceedWithLanguage,\n          className: \"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-lg font-medium\",\n          children: t('proceedToSurvey', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 7\n      }, this);\n    };\n    const _language = props.language || defaultLanguage;\n    const _surveyData = getSurveyData(_language);\n    console.log('Constructor - Language:', _language);\n    console.log('Constructor - Survey Data:', _surveyData);\n    this.state = {\n      currentSection: 0,\n      answers: {},\n      progress: 0,\n      submitted: false,\n      validationError: false,\n      missingFields: [],\n      surveyId: 'survey_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),\n      language: _language,\n      surveyData: _surveyData,\n      languageSelected: false\n    };\n  }\n  // Remove the global drag handlers since we're handling everything within the component\n  componentDidMount() {\n    // We don't need global handlers anymore\n  }\n  componentWillUnmount() {\n    // No global handlers to clean up\n  }\n  render() {\n    console.log('Render - Survey Data:', this.state.surveyData);\n    if (!this.state.surveyData || !Array.isArray(this.state.surveyData)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading survey data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow\",\n      children: !this.state.languageSelected ?\n      // Show language selection screen if language not yet selected\n      this.renderLanguageSelectionScreen() : !this.state.submitted ?\n      /*#__PURE__*/\n      // Show survey if language selected and not yet submitted\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-6\",\n          children: t('surveyTitle', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-200 rounded-full h-2.5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 h-2.5 rounded-full transition-all duration-300\",\n              style: {\n                width: `${this.state.progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mt-1 text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: t('startLabel', this.state.language)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [this.state.progress, t('progressLabel', this.state.language)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 13\n        }, this), this.renderCurrentSection(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.prevSection,\n            disabled: this.state.currentSection === 0,\n            className: `px-4 py-2 rounded transition-colors ${this.state.currentSection === 0 ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: t('prevButton', this.state.language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.nextSection,\n            className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors\",\n            children: this.state.currentSection === this.state.surveyData.length - 1 ? t('submitButton', this.state.language) : t('nextButton', this.state.language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : this.renderResults()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default InteractiveSurvey;","map":{"version":3,"names":["React","t","languages","defaultLanguage","getSurveyData","jsxDEV","_jsxDEV","Fragment","_Fragment","InteractiveSurvey","Component","constructor","props","changeLanguage","language","surveyData","console","log","setState","proceedWithLanguage","languageSelected","saveAnswer","questionId","value","isUserAction","prevState","newAnswers","answers","handleMultiSelect","option","checked","currentSelections","state","filter","item","handleRankingChange","newOrder","nextSection","validateRequiredFields","currentSection","length","window","scrollTo","top","behavior","validationError","missingFields","progress","Math","round","handleSubmit","prevSection","currentSectionQuestions","questions","requiredQuestions","q","required","shouldShowQuestion","forEach","answer","id","undefined","Array","isArray","push","saveToTiinyHost","data","fetch","method","headers","surveyId","body","JSON","stringify","then","response","json","localStorage","setItem","metadata","catch","error","saveToLocalStorage","existingData","parse","getItem","timestamp","Date","toISOString","e","submissionData","submittedAt","userAgent","navigator","screenSize","innerWidth","innerHeight","submitted","question","condition","dependsOn","some","v","includes","renderQuestion","_this$state3","_this$state4","isRequired","isError","labelClass","inputClass","requiredMark","className","children","fileName","_jsxFileName","lineNumber","columnNumber","infoIcon","info","hintElement","hint","questionElement","type","label","onChange","target","options","map","maxSelect","isChecked","isDisabled","disabled","htmlFor","min","max","step","parseInt","Object","entries","marks","style","width","keys","Number","placeholder","minDate","maxDate","currentRanking","hasUserModified","visible","position","onDragOver","dragData","dataTransfer","getData","startsWith","preventDefault","dropEffect","rect","currentTarget","getBoundingClientRect","mouseY","clientY","bottomThreshold","bottom","onDrop","sourceIndex","split","targetIndex","newRanking","movedItem","splice","index","_this$state","_this$state2","draggable","onDragStart","setData","classList","add","effectAllowed","onDragEnd","remove","stopPropagation","threshold","height","onDragLeave","contains","relatedTarget","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","cloneElement","Children","toArray","renderCurrentSection","section","title","description","renderResults","fillRule","clipRule","renderLanguageSelectionScreen","code","name","onClick","now","random","toString","substr","componentDidMount","componentWillUnmount","render"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/InteractiveSurvey.js"],"sourcesContent":["import React from 'react';\nimport { t, languages, defaultLanguage } from '../localization';\nimport { getSurveyData } from '../data/surveyData';\n\nclass InteractiveSurvey extends React.Component {\n  constructor(props) {\n    super(props);\n    const language = props.language || defaultLanguage;\n    const surveyData = getSurveyData(language);\n    console.log('Constructor - Language:', language);\n    console.log('Constructor - Survey Data:', surveyData);\n    \n    this.state = {\n      currentSection: 0,\n      answers: {},\n      progress: 0,\n      submitted: false,\n      validationError: false,\n      missingFields: [],\n      surveyId: 'survey_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),\n      language: language,\n      surveyData: surveyData,\n      languageSelected: false\n    };\n  }\n\n  // Change language\n  changeLanguage = (language) => {\n    if (languages[language]) {\n      const surveyData = getSurveyData(language);\n      console.log('Change Language - Language:', language);\n      console.log('Change Language - Survey Data:', surveyData);\n      \n      this.setState({ \n        language,\n        surveyData: surveyData\n      });\n    }\n  }\n\n  // Proceed after language selection\n  proceedWithLanguage = () => {\n    this.setState({ languageSelected: true });\n  }\n\n  // Save answers\n  saveAnswer = (questionId, value, isUserAction = false) => {\n    this.setState(prevState => {\n      const newAnswers = {\n        ...prevState.answers,\n        [questionId]: value\n      };\n      \n      // If this is a user action for a ranked question, mark it as modified\n      if (isUserAction) {\n        newAnswers[`${questionId}_modified`] = true;\n      }\n      \n      return { answers: newAnswers };\n    });\n  };\n\n  // Handle multiple answers\n  handleMultiSelect = (questionId, option, checked) => {\n    const currentSelections = this.state.answers[questionId] || [];\n    \n    if (checked) {\n      this.saveAnswer(questionId, [...currentSelections, option]);\n    } else {\n      this.saveAnswer(questionId, currentSelections.filter(item => item !== option));\n    }\n  };\n\n  // Handle ranking updates\n  handleRankingChange = (questionId, newOrder) => {\n    // Always mark as a user action when ranking changes\n    this.saveAnswer(questionId, newOrder, true);\n  };\n\n  // Next section\n  nextSection = () => {\n    // Validate required fields\n    if (!this.validateRequiredFields()) {\n      return;\n    }\n    \n    this.setState(prevState => {\n      // If not the last section, go to next section\n      if (this.state.currentSection < this.state.surveyData.length - 1) {\n        // Scroll to top after state update\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n        \n        return {\n          currentSection: prevState.currentSection + 1,\n          validationError: false,\n          missingFields: [],\n          progress: Math.round(((prevState.currentSection + 1) / (this.state.surveyData.length - 1)) * 100)\n        };\n      } else {\n        // If last section, submit the form\n        this.handleSubmit();\n        return null;\n      }\n    });\n  };\n\n  // Previous section\n  prevSection = () => {\n    this.setState(prevState => {\n      // Scroll to top after state update\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      \n      return {\n        currentSection: prevState.currentSection - 1,\n        validationError: false,\n        missingFields: [],\n        progress: Math.round(((prevState.currentSection - 1) / (this.state.surveyData.length - 1)) * 100)\n      };\n    });\n  };\n\n  // Validate required fields\n  validateRequiredFields = () => {\n    const currentSectionQuestions = this.state.surveyData[this.state.currentSection].questions;\n    const missingFields = [];\n    \n    const requiredQuestions = currentSectionQuestions.filter(q => q.required && this.shouldShowQuestion(q));\n    \n    requiredQuestions.forEach(q => {\n      const answer = this.state.answers[q.id];\n      if (answer === undefined || answer === '' || (Array.isArray(answer) && answer.length === 0)) {\n        missingFields.push(q.id);\n      }\n    });\n    \n    if (missingFields.length > 0) {\n      this.setState({\n        validationError: true,\n        missingFields\n      });\n      return false;\n    }\n    \n    this.setState({\n      validationError: false,\n      missingFields: []\n    });\n    return true;\n  };\n\n  // Save to tiiny.host with JSONBin\n  saveToTiinyHost = (data) => {\n    // Option 1: Use JSONBin for public storage\n    fetch('https://api.jsonbin.io/v3/b', {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json',\n        'X-Master-Key': '$2a$10$d/tjFfo2wRCJsPoPs307DO2097IW8VsfNdz9xmCcuXQ4IscWPYj1a',\n        'X-Bin-Name': this.state.surveyId\n      },\n      body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Saved to JSONBin:', data);\n      // Save ID in localStorage\n      localStorage.setItem('lastSurveyId', data.metadata.id);\n    })\n    .catch(error => {\n      console.error('Error saving to JSONBin:', error);\n      // Fallback: Save to localStorage\n      this.saveToLocalStorage(data);\n    });\n  };\n  \n  // Save to localStorage\n  saveToLocalStorage = (data) => {\n    try {\n      // Get existing data\n      const existingData = JSON.parse(localStorage.getItem('surveyResponses') || '[]');\n      // Add new data\n      existingData.push({\n        id: this.state.surveyId,\n        timestamp: new Date().toISOString(),\n        data: data\n      });\n      // Save back to localStorage\n      localStorage.setItem('surveyResponses', JSON.stringify(existingData));\n      console.log('Saved to localStorage as fallback');\n    } catch (e) {\n      console.error('Error saving to localStorage:', e);\n    }\n  };\n\n  // Submit survey\n  handleSubmit = () => {\n    console.log(\"Answers:\", this.state.answers);\n    \n    // Prepare data for submission\n    const submissionData = {\n      surveyId: this.state.surveyId,\n      answers: this.state.answers,\n      submittedAt: new Date().toISOString(),\n      userAgent: navigator.userAgent,\n      screenSize: `${window.innerWidth}x${window.innerHeight}`\n    };\n    \n    // Save to tiiny.host with JSONBin or similar service\n    this.saveToTiinyHost(submissionData);\n    \n    this.setState({ submitted: true });\n  };\n\n  // Check if a question should be displayed based on conditional logic\n  shouldShowQuestion = (question) => {\n    if (!question.condition) return true;\n    \n    const { dependsOn, value } = question.condition;\n    const answer = this.state.answers[dependsOn];\n    \n    // If answer is undefined, the condition is not met\n    if (answer === undefined) return false;\n    \n    // Handle array values (for multiselect)\n    if (Array.isArray(answer)) {\n      // If value is also an array, check if any value matches\n      if (Array.isArray(value)) {\n        return value.some(v => answer.includes(v));\n      }\n      // If value is a string, check if it's included in the answer array\n      return answer.includes(value);\n    }\n    \n    // Handle boolean values (for checkbox)\n    if (typeof answer === 'boolean') {\n      return answer === value;\n    }\n    \n    // Handle function conditions\n    if (typeof value === 'function') {\n      return value(answer);\n    }\n    \n    // Default case: direct comparison\n    return answer === value;\n  };\n\n  // Render function for question types\n  renderQuestion = (question) => {\n    if (!this.shouldShowQuestion(question)) return null;\n    \n    const isRequired = question.required;\n    const isError = this.state.validationError && this.state.missingFields.includes(question.id);\n    const labelClass = isError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n    const inputClass = isError ? \"w-full p-2 border border-red-500 rounded\" : \"w-full p-2 border rounded\";\n    \n    // Required field asterisk\n    const requiredMark = isRequired ? <span className=\"text-red-600 ml-1\">*</span> : null;\n    \n    // Info icon for questions with additional information\n    const infoIcon = question.info ? (\n      <span className=\"ml-1 inline-block relative group\">\n        <span className=\"w-4 h-4 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-help\">{t('infoIconLabel', this.state.language)}</span>\n        <span className=\"absolute left-0 bottom-full mb-2 w-64 p-2 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity z-10\">\n          {question.info}\n        </span>\n      </span>\n    ) : null;\n\n    // Hint element to be rendered below each question\n    const hintElement = question.hint ? (\n      <p className=\"text-xs text-gray-500 mt-1\">{question.hint}</p>\n    ) : null;\n\n    let questionElement;\n    \n    switch (question.type) {\n      case 'text':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <input\n              type=\"text\"\n              className={inputClass}\n              value={this.state.answers[question.id] || ''}\n              onChange={(e) => this.saveAnswer(question.id, e.target.value)}\n            />\n          </div>\n        );\n        break;\n      \n      case 'email':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <input\n              type=\"email\"\n              className={inputClass}\n              value={this.state.answers[question.id] || ''}\n              onChange={(e) => this.saveAnswer(question.id, e.target.value)}\n            />\n          </div>\n        );\n        break;\n        \n      case 'textarea':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <textarea\n              className={`h-24 ${inputClass}`}\n              value={this.state.answers[question.id] || ''}\n              onChange={(e) => this.saveAnswer(question.id, e.target.value)}\n            />\n          </div>\n        );\n        break;\n        \n      case 'select':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <select\n              className={`bg-white ${inputClass}`}\n              value={this.state.answers[question.id] || ''}\n              onChange={(e) => this.saveAnswer(question.id, e.target.value)}\n            >\n              <option value=\"\">{t('selectPlaceholder', this.state.language)}</option>\n              {question.options.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n        );\n        break;\n        \n      case 'multiselect':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n              {question.maxSelect && <span className=\"text-gray-500 text-xs ml-1\">(max. {question.maxSelect})</span>}\n            </label>\n            <div className={`space-y-2 p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'}`}>\n              {question.options.map((option) => {\n                const currentSelections = this.state.answers[question.id] || [];\n                const isChecked = currentSelections.includes(option);\n                const isDisabled = question.maxSelect && \n                                 currentSelections.length >= question.maxSelect && \n                                 !isChecked;\n                \n                return (\n                  <div key={option} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      id={`${question.id}-${option}`}\n                      checked={isChecked}\n                      disabled={isDisabled}\n                      onChange={(e) => this.handleMultiSelect(question.id, option, e.target.checked)}\n                      className=\"mr-2\"\n                    />\n                    <label htmlFor={`${question.id}-${option}`} className={isDisabled ? \"text-gray-400\" : \"\"}>\n                      {option}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n        break;\n        \n      case 'checkbox':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <div className={`flex items-center p-2 rounded ${isError ? 'bg-red-50' : ''}`}>\n              <input\n                type=\"checkbox\"\n                id={question.id}\n                checked={this.state.answers[question.id] || false}\n                onChange={(e) => this.saveAnswer(question.id, e.target.checked)}\n                className=\"mr-2\"\n              />\n              <label htmlFor={question.id} className={isError ? \"text-red-600\" : \"\"}>\n                {question.label}\n                {requiredMark}\n                {infoIcon}\n              </label>\n            </div>\n          </div>\n        );\n        break;\n        \n      case 'range':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}: {this.state.answers[question.id] || 0}%\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <input\n              type=\"range\"\n              min={question.min}\n              max={question.max}\n              step={question.step}\n              value={this.state.answers[question.id] || 0}\n              onChange={(e) => this.saveAnswer(question.id, parseInt(e.target.value))}\n              className={`w-full ${isError ? 'accent-red-500' : ''}`}\n            />\n            <div className=\"flex justify-between text-xs mt-1\">\n              <span>{question.min}%</span>\n              <span>{question.max}%</span>\n            </div>\n          </div>\n        );\n        break;\n        \n      case 'slider':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}: {this.state.answers[question.id] || question.min}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <input\n              type=\"range\"\n              min={question.min}\n              max={question.max}\n              value={this.state.answers[question.id] || question.min}\n              onChange={(e) => this.saveAnswer(question.id, parseInt(e.target.value))}\n              className={`w-full ${isError ? 'accent-red-500' : ''}`}\n            />\n            <div className=\"flex justify-between text-xs mt-1\">\n              {Object.entries(question.marks).map(([value, label]) => (\n                <span key={value} className=\"text-center\" style={{width: `${100/(Object.keys(question.marks).length-1)}%`}}>\n                  {label}\n                </span>\n              ))}\n            </div>\n          </div>\n        );\n        break;\n        \n      case 'number':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <input\n              type=\"number\"\n              className={inputClass}\n              value={this.state.answers[question.id] || ''}\n              onChange={(e) => this.saveAnswer(question.id, e.target.value === '' ? '' : Number(e.target.value))}\n              min={question.min !== undefined ? question.min : undefined}\n              max={question.max !== undefined ? question.max : undefined}\n              step={question.step !== undefined ? question.step : 1}\n              placeholder={question.placeholder || ''}\n            />\n          </div>\n        );\n        break;\n        \n      case 'date':\n        questionElement = (\n          <div className=\"mb-4\" key={question.id}>\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            <input\n              type=\"date\"\n              className={inputClass}\n              value={this.state.answers[question.id] || ''}\n              onChange={(e) => this.saveAnswer(question.id, e.target.value)}\n              min={question.minDate || undefined}\n              max={question.maxDate || undefined}\n            />\n          </div>\n        );\n        break;\n        \n      case 'ranked':\n        if (!this.state.answers[question.id]) {\n          this.saveAnswer(question.id, [...question.options]);\n        }\n        \n        const currentRanking = this.state.answers[question.id] || [...question.options];\n        const hasUserModified = this.state.answers[`${question.id}_modified`] === true;\n        \n        // Track drag indicator position in component state if not already present\n        if (!this.state[`dragIndicator_${question.id}`]) {\n          this.state[`dragIndicator_${question.id}`] = {\n            visible: false,\n            position: -1\n          };\n        }\n        \n        questionElement = (\n          <div \n            className=\"mb-4\" \n            key={question.id}\n          >\n            <label className={labelClass}>\n              {question.label}\n              {requiredMark}\n              {infoIcon}\n            </label>\n            \n            <div \n              className={`p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'} relative`}\n              onDragOver={(e) => {\n                // Only handle if we're dragging a ranked item from this question\n                const dragData = e.dataTransfer.getData('text/plain');\n                if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                  return;\n                }\n                \n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'move';\n                \n                // Show indicator at the end if appropriate\n                const rect = e.currentTarget.getBoundingClientRect();\n                const mouseY = e.clientY;\n                const bottomThreshold = rect.bottom - 10;\n                \n                if (mouseY > bottomThreshold) {\n                  this.setState({\n                    [`dragIndicator_${question.id}`]: {\n                      visible: true,\n                      position: currentRanking.length\n                    }\n                  });\n                }\n              }}\n              onDrop={(e) => {\n                // Only handle if we're dragging a ranked item from this question\n                const dragData = e.dataTransfer.getData('text/plain');\n                if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                  return;\n                }\n                \n                e.preventDefault();\n                \n                // Get the source index\n                const sourceIndex = parseInt(dragData.split('_')[2]);\n                const targetIndex = currentRanking.length; // Drop at the end\n                \n                // Reorder the items\n                if (sourceIndex !== targetIndex) {\n                  const newRanking = [...currentRanking];\n                  const [movedItem] = newRanking.splice(sourceIndex, 1);\n                  newRanking.splice(targetIndex, 0, movedItem);\n                  this.handleRankingChange(question.id, newRanking);\n                }\n                \n                // Hide the drag indicator\n                this.setState({\n                  [`dragIndicator_${question.id}`]: {\n                    visible: false,\n                    position: -1\n                  }\n                });\n              }}\n            >\n              <div className=\"space-y-2\">\n                {currentRanking.map((item, index) => (\n                  <React.Fragment key={item}>\n                    {/* Drag indicator line */}\n                    {this.state[`dragIndicator_${question.id}`]?.visible && \n                     this.state[`dragIndicator_${question.id}`]?.position === index && (\n                      <div className=\"h-1 bg-blue-500 rounded-full my-1 transition-all duration-200\"></div>\n                    )}\n                    \n                    <div \n                      className=\"flex items-center p-2 bg-white border rounded cursor-move hover:bg-gray-50\"\n                      draggable\n                      onDragStart={(e) => {\n                        // Use a custom format that includes the question ID and index\n                        e.dataTransfer.setData('text/plain', `ranked_${question.id}_${index}`);\n                        e.currentTarget.classList.add('bg-gray-100', 'opacity-50');\n                        e.dataTransfer.effectAllowed = 'move';\n                      }}\n                      onDragEnd={(e) => {\n                        e.currentTarget.classList.remove('bg-gray-100', 'opacity-50');\n                        \n                        // Hide the drag indicator\n                        this.setState({\n                          [`dragIndicator_${question.id}`]: {\n                            visible: false,\n                            position: -1\n                          }\n                        });\n                      }}\n                      onDragOver={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        \n                        // Get the source index from the drag data\n                        const dragData = e.dataTransfer.getData('text/plain');\n                        if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                          return;\n                        }\n                        \n                        const sourceIndex = parseInt(dragData.split('_')[2]);\n                        \n                        // Don't show indicator if dragging onto self\n                        if (sourceIndex === index) {\n                          return;\n                        }\n                        \n                        // Determine if we should show the indicator above or below this item\n                        const rect = e.currentTarget.getBoundingClientRect();\n                        const mouseY = e.clientY;\n                        const threshold = rect.top + rect.height / 2;\n                        \n                        if (mouseY < threshold) {\n                          // Show indicator above this item\n                          this.setState({\n                            [`dragIndicator_${question.id}`]: {\n                              visible: true,\n                              position: index\n                            }\n                          });\n                        } else {\n                          // Show indicator below this item\n                          this.setState({\n                            [`dragIndicator_${question.id}`]: {\n                              visible: true,\n                              position: index + 1\n                            }\n                          });\n                        }\n                        \n                        e.dataTransfer.dropEffect = 'move';\n                      }}\n                      onDragLeave={(e) => {\n                        // Only hide if we're leaving this element (not entering a child)\n                        if (!e.currentTarget.contains(e.relatedTarget)) {\n                          // Don't hide the indicator here, as it might be needed for other items\n                        }\n                      }}\n                      onDrop={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        \n                        // Get the source index from the drag data\n                        const dragData = e.dataTransfer.getData('text/plain');\n                        if (!dragData || !dragData.startsWith(`ranked_${question.id}_`)) {\n                          return;\n                        }\n                        \n                        const sourceIndex = parseInt(dragData.split('_')[2]);\n                        \n                        // Determine if we should drop above or below this item\n                        const rect = e.currentTarget.getBoundingClientRect();\n                        const mouseY = e.clientY;\n                        const threshold = rect.top + rect.height / 2;\n                        \n                        let targetIndex;\n                        if (mouseY < threshold) {\n                          // Drop above this item\n                          targetIndex = index;\n                        } else {\n                          // Drop below this item\n                          targetIndex = index + 1;\n                        }\n                        \n                        // Don't do anything if dropping onto self\n                        if (sourceIndex === targetIndex || sourceIndex === targetIndex - 1) {\n                          return;\n                        }\n                        \n                        // Reorder the items\n                        const newRanking = [...currentRanking];\n                        const [movedItem] = newRanking.splice(sourceIndex, 1);\n                        \n                        // Adjust target index if needed\n                        if (sourceIndex < targetIndex) {\n                          targetIndex--;\n                        }\n                        \n                        newRanking.splice(targetIndex, 0, movedItem);\n                        \n                        // Update the state\n                        this.handleRankingChange(question.id, newRanking);\n                        \n                        // Hide the drag indicator\n                        this.setState({\n                          [`dragIndicator_${question.id}`]: {\n                            visible: false,\n                            position: -1\n                          }\n                        });\n                      }}\n                    >\n                      <div className=\"flex-shrink-0 mr-2 text-gray-400\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                        </svg>\n                      </div>\n                      {hasUserModified && (\n                        <div className=\"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-2\">\n                          {index + 1}\n                        </div>\n                      )}\n                      <div>{item}</div>\n                    </div>\n                  </React.Fragment>\n                ))}\n                \n                {/* Final drag indicator for the last position */}\n                {this.state[`dragIndicator_${question.id}`]?.visible && \n                 this.state[`dragIndicator_${question.id}`]?.position === currentRanking.length && (\n                  <div className=\"h-1 bg-blue-500 rounded-full my-1 transition-all duration-200\"></div>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n        break;\n        \n      default:\n        return null;\n    }\n\n    // If there's a hint, add it to the question element by cloning and adding the hint\n    if (hintElement) {\n      // Clone the question element and add the hint as a child\n      return React.cloneElement(\n        questionElement,\n        {},\n        ...React.Children.toArray(questionElement.props.children),\n        hintElement\n      );\n    }\n    \n    return questionElement;\n  };\n\n  renderCurrentSection = () => {\n    if (!this.state.surveyData || !Array.isArray(this.state.surveyData) || !this.state.surveyData[this.state.currentSection]) {\n      return (\n        <div>\n          <p>Loading section data...</p>\n        </div>\n      );\n    }\n    \n    const section = this.state.surveyData[this.state.currentSection];\n    \n    return (\n      <div>\n        <h2 className=\"text-xl font-bold mb-2\">{section.title}</h2>\n        <p className=\"text-gray-600 mb-6\">{section.description}</p>\n        \n        {this.state.validationError && (\n          <div className=\"mb-4 p-3 bg-red-50 border border-red-300 rounded text-red-700 text-sm\">\n            {t('validationError', this.state.language)}\n          </div>\n        )}\n        \n        {section.questions.map(question => this.renderQuestion(question))}\n        \n        {this.state.currentSection === 0 && (\n          <div className=\"mt-6 p-3 bg-blue-50 border border-blue-200 rounded text-blue-800 text-sm\">\n            <p><strong>{t('anonymityNote', this.state.language)}</strong></p>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  renderResults = () => {\n    return (\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold mb-4\">{t('thankYouTitle', this.state.language)}</h2>\n        <p className=\"mb-6\">{t('thankYouMessage', this.state.language)}</p>\n        \n        <div className=\"p-6 bg-green-50 border border-green-200 rounded-lg max-w-md mx-auto\">\n          <div className=\"w-16 h-16 mx-auto mb-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"text-green-600\">\n              <path fillRule=\"evenodd\" d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <p className=\"text-green-800\">\n            {t('thankYouMessage', this.state.language)}\n          </p>\n          <p className=\"mt-4 text-sm text-gray-600\">\n            {t('surveyIdLabel', this.state.language)} <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">{this.state.surveyId}</span>\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  renderLanguageSelectionScreen = () => {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[400px]\">\n        <h1 className=\"text-3xl font-bold mb-8\">{t('welcomeToSurvey', this.state.language)}</h1>\n        \n        <div className=\"mb-8 text-center\">\n          <p className=\"text-lg mb-4\">{t('pleaseSelectLanguage', this.state.language)}</p>\n          \n          <div className=\"relative inline-block w-64\">\n            <select\n              value={this.state.language}\n              onChange={(e) => this.changeLanguage(e.target.value)}\n              className=\"block w-full appearance-none bg-white border border-gray-300 hover:border-gray-400 px-4 py-3 pr-8 rounded-lg shadow leading-tight focus:outline-none focus:shadow-outline text-lg\"\n            >\n              {Object.entries(languages).map(([code, name]) => (\n                <option key={code} value={code}>\n                  {name}\n                </option>\n              ))}\n            </select>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n              <svg className=\"fill-current h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n        \n        <button\n          onClick={this.proceedWithLanguage}\n          className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-lg font-medium\"\n        >\n          {t('proceedToSurvey', this.state.language)}\n        </button>\n      </div>\n    );\n  }\n\n  // Remove the global drag handlers since we're handling everything within the component\n  componentDidMount() {\n    // We don't need global handlers anymore\n  }\n\n  componentWillUnmount() {\n    // No global handlers to clean up\n  }\n\n  render() {\n    console.log('Render - Survey Data:', this.state.surveyData);\n    \n    if (!this.state.surveyData || !Array.isArray(this.state.surveyData)) {\n      return (\n        <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow\">\n          <p>Loading survey data...</p>\n        </div>\n      );\n    }\n    \n    return (\n        <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow\">\n            \n        {!this.state.languageSelected ? (\n          // Show language selection screen if language not yet selected\n          this.renderLanguageSelectionScreen()\n        ) : !this.state.submitted ? (\n          // Show survey if language selected and not yet submitted\n          <>\n            <h1 className=\"text-2xl font-bold mb-6\">{t('surveyTitle', this.state.language)}</h1>\n            \n            {/* Fortschrittsbalken */}\n            <div className=\"mb-8\">\n              <div className=\"bg-gray-200 rounded-full h-2.5\">\n                <div \n                  className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300\" \n                  style={{ width: `${this.state.progress}%` }}\n                ></div>\n              </div>\n              <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n                <span>{t('startLabel', this.state.language)}</span>\n                <span>{this.state.progress}{t('progressLabel', this.state.language)}</span>\n              </div>\n            </div>\n            \n            {this.renderCurrentSection()}\n            \n            <div className=\"mt-8 flex justify-between\">\n              <button\n                onClick={this.prevSection}\n                disabled={this.state.currentSection === 0}\n                className={`px-4 py-2 rounded transition-colors ${\n                  this.state.currentSection === 0 ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-gray-200 hover:bg-gray-300'\n                }`}\n              >\n                {t('prevButton', this.state.language)}\n              </button>\n              \n              <button\n                onClick={this.nextSection}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors\"\n              >\n                {this.state.currentSection === this.state.surveyData.length - 1 ? t('submitButton', this.state.language) : t('nextButton', this.state.language)}\n              </button>\n            </div>\n          </>\n        ) : (\n          this.renderResults()\n        )}\n      </div>\n    );\n  }\n}\n\nexport default InteractiveSurvey; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}