{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport BaseQuestion, { isError } from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  shouldValidate = false,\n  value,\n  onChange,\n  language\n}) => {\n  _s();\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min || 0);\n  const sliderRef = useRef(null);\n  const isDefaultValue = currentValue === (question.min || 0);\n  const {\n    hasError\n  } = isError(question, value, shouldValidate, language);\n  const calculateStepSize = () => {\n    if (question.marks) {\n      const markEntries = Object.entries(question.marks);\n      return 100 / (markEntries.length - 1);\n    }\n    return question.step || 1;\n  };\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n      if (value !== (question.min || 0)) {\n        setUserInteracted(true);\n      }\n    }\n  }, [value, question.min]);\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    setUserInteracted(true);\n    onChange(question.id, newValue);\n  };\n  const showError = hasError && question.required && (isDefaultValue || !userInteracted);\n  const renderMarksAsColumns = () => {\n    if (!question.marks) return null;\n    const markEntries = Object.entries(question.marks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-marks\",\n      children: markEntries.map(([markValue, label], index) => {\n        // Calculate the position as a percentage of the slider width\n        const position = index / (markEntries.length - 1) * 100;\n        let textAlignment = \"text-center\";\n        let translateX = `-50%`;\n        if (index > Math.floor(markEntries.length / 2)) {\n          translateX = `-60%`;\n        } else if (index < Math.floor(markEntries.length / 2)) {\n          translateX = `-40%`;\n        }\n        if (index === 0) {\n          textAlignment = \"text-left\";\n          translateX = '5%';\n        } else if (index === markEntries.length - 1) {\n          textAlignment = \"text-right\";\n          translateX = '-105%';\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slider-mark ${textAlignment}`,\n          style: {\n            left: `${position}%`,\n            transform: `translateX(${translateX})`,\n            width: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `slider-mark-value ${showError ? 'text-red-600' : ''}`,\n            children: markValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `slider-mark-label ${showError ? 'text-red-600' : ''}`,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, `mark-${markValue}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n  const unit = question.unit || '';\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    shouldValidate: shouldValidate,\n    language: language,\n    value: currentValue,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [!question.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-lg font-medium ${showError ? 'text-red-600' : ''}`,\n          children: [currentValue, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: sliderRef,\n        type: \"range\",\n        className: `slider-input ${showError ? 'slider-input-error' : ''}`,\n        min: question.min || 0,\n        max: question.max || 100,\n        step: calculateStepSize(),\n        value: currentValue,\n        onChange: handleSliderChange,\n        \"aria-invalid\": showError,\n        \"data-testid\": `slider-${question.id}`,\n        style: {\n          accentColor: showError ? '#ef4444' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), !question.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`,\n          children: [question.min || 0, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`,\n          children: [question.max || 100, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), question.marks && renderMarksAsColumns()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderQuestion, \"F5Wgz2UkGrlCSB3YrCZyH2tH8Sg=\");\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","useRef","BaseQuestion","isError","jsxDEV","_jsxDEV","SliderQuestion","question","shouldValidate","value","onChange","language","_s","userInteracted","setUserInteracted","currentValue","setCurrentValue","undefined","min","sliderRef","isDefaultValue","hasError","calculateStepSize","marks","markEntries","Object","entries","length","step","handleSliderChange","e","newValue","parseInt","target","id","showError","required","renderMarksAsColumns","className","children","map","markValue","label","index","position","textAlignment","translateX","Math","floor","style","left","transform","width","fileName","_jsxFileName","lineNumber","columnNumber","unit","ref","type","max","accentColor","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport BaseQuestion, { isError } from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  shouldValidate = false, \n  value, \n  onChange, \n  language\n}) => {\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : (question.min || 0));\n  const sliderRef = useRef(null);\n  const isDefaultValue = currentValue === (question.min || 0);\n  const { hasError } = isError(question, value, shouldValidate, language);\n  \n  const calculateStepSize = () => {\n    if (question.marks) {\n      const markEntries = Object.entries(question.marks);\n      return 100 / (markEntries.length - 1);\n    }\n    return question.step || 1;\n  };\n  \n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n      if (value !== (question.min || 0)) {\n        setUserInteracted(true);\n      }\n    }\n  }, [value, question.min]);\n  \n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    setUserInteracted(true);\n    onChange(question.id, newValue);\n  };\n\n  const showError = hasError && question.required && (isDefaultValue || !userInteracted);\n\n  const renderMarksAsColumns = () => {\n    if (!question.marks) return null;\n    \n    const markEntries = Object.entries(question.marks);\n\n    return (\n      <div className=\"slider-marks\">\n        {markEntries.map(([markValue, label], index) => {\n          // Calculate the position as a percentage of the slider width\n          const position = (index / (markEntries.length - 1)) * 100;\n          \n          let textAlignment = \"text-center\";\n          let translateX = `-50%`;\n          if (index > Math.floor(markEntries.length / 2)) {\n            translateX = `-60%`;\n          } else if (index < Math.floor(markEntries.length / 2)) {\n            translateX = `-40%`;\n          }\n          \n          if (index === 0) {\n            textAlignment = \"text-left\";\n            translateX = '5%';\n          } else if (index === markEntries.length - 1) {\n            textAlignment = \"text-right\";\n            translateX = '-105%';\n          }\n\n          return (\n            <div\n              key={`mark-${markValue}`}\n              className={`slider-mark ${textAlignment}`}\n              style={{ \n                left: `${position}%`,\n                transform: `translateX(${translateX})`,\n                width: '60px'\n              }}\n            >\n              <span className={`slider-mark-value ${showError ? 'text-red-600' : ''}`}>\n                {markValue}\n              </span>\n              <span className={`slider-mark-label ${showError ? 'text-red-600' : ''}`}>\n                {label}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n  \n  const unit = question.unit || '';\n  \n  return (\n    <BaseQuestion \n      question={question} \n      shouldValidate={shouldValidate} \n      language={language}\n      value={currentValue}\n    >\n      <div className=\"slider-container\">\n        {!question.marks && (\n          <div className=\"flex justify-between\">\n            <span className={`text-lg font-medium ${showError ? 'text-red-600' : ''}`}>\n              {currentValue}{unit}\n            </span>\n          </div>\n        )}\n        \n        <input\n          ref={sliderRef}\n          type=\"range\"\n          className={`slider-input ${showError ? 'slider-input-error' : ''}`}\n          min={question.min || 0}\n          max={question.max || 100}\n          step={calculateStepSize()}\n          value={currentValue}\n          onChange={handleSliderChange}\n          aria-invalid={showError}\n          data-testid={`slider-${question.id}`}\n          style={{\n            accentColor: showError ? '#ef4444' : '',\n          }}\n        />\n        \n        {!question.marks && (\n          <div className=\"flex justify-between\">\n            <span className={`text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`}>\n              {question.min || 0}{unit}\n            </span>\n            <span className={`text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`}>\n              {question.max || 100}{unit}\n            </span>\n          </div>\n        )}\n        \n        {question.marks && renderMarksAsColumns()}\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default SliderQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}