{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/MarksSliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  isError,\n  value,\n  onChange,\n  language\n}) => {\n  _s();\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n\n  // Calculate the step size based on mark quantity\n  const calculateStepSize = () => {\n    const markEntries = Object.entries(question.marks);\n    return 100 / (markEntries.length - 1);\n  };\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n  const renderMarksAsColumns = () => {\n    const markEntries = Object.entries(question.marks);\n    const minMark = 0;\n    const maxMark = 100;\n    const range = maxMark - minMark;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full\",\n      style: {\n        position: 'relative',\n        width: '100%'\n      },\n      children: markEntries.map(([markValue, label], index) => {\n        const positionPercent = index / (markEntries.length - 1) * 100;\n        let textAlignment = \"text-center\";\n        let transformStyle = 'translateX(-50%)';\n        if (index === 0) {\n          textAlignment = \"text-left\";\n          transformStyle = 'translateX(0)';\n        } else if (index === markEntries.length - 1) {\n          textAlignment = \"text-right\";\n          transformStyle = 'translateX(-100%)';\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute ${textAlignment}`,\n          style: {\n            left: `${positionPercent}%`,\n            transform: transformStyle\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-xs text-gray-600 break-words\",\n            children: markValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-xs text-gray-600 break-words\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, markValue, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-1 pb-8 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range_\",\n        min: 0,\n        max: 100,\n        step: calculateStepSize(),\n        value: currentValue,\n        onChange: handleSliderChange,\n        className: `w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`,\n        style: {\n          touchAction: 'manipulation'\n        },\n        \"aria-valuenow\": currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), renderMarksAsColumns()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderQuestion, \"tVvdVRJf1SXGV8aKwR0WcKNq9dc=\");\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","BaseQuestion","jsxDEV","_jsxDEV","SliderQuestion","question","isError","value","onChange","language","_s","currentValue","setCurrentValue","undefined","min","calculateStepSize","markEntries","Object","entries","marks","length","handleSliderChange","e","newValue","parseInt","target","id","renderMarksAsColumns","minMark","maxMark","range","className","style","position","width","children","map","markValue","label","index","positionPercent","textAlignment","transformStyle","left","transform","fileName","_jsxFileName","lineNumber","columnNumber","type","max","step","touchAction","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/MarksSliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  isError, \n  value, \n  onChange, \n  language \n}) => {\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n  \n  // Calculate the step size based on mark quantity\n  const calculateStepSize = () => {\n    const markEntries = Object.entries(question.marks);\n    return 100 / (markEntries.length - 1);\n  };\n  \n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  \n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n\n  const renderMarksAsColumns = () => {\n    const markEntries = Object.entries(question.marks);\n    const minMark = 0; \n    const maxMark = 100;\n    const range = maxMark - minMark;\n    \n    return (\n      <div className=\"relative w-full\" style={{ position: 'relative', width: '100%' }}>\n        {markEntries.map(([markValue, label], index) => {\n          const positionPercent = (index / (markEntries.length - 1)) * 100;\n          let textAlignment = \"text-center\";\n          let transformStyle = 'translateX(-50%)';\n          if (index === 0) {\n            textAlignment = \"text-left\";\n            transformStyle = 'translateX(0)';\n          } else if (index === markEntries.length - 1) {\n            textAlignment = \"text-right\";\n            transformStyle = 'translateX(-100%)';\n          }\n\n          return (\n            <div\n              key={markValue}\n              className={`absolute ${textAlignment}`}\n              style={{ left: `${positionPercent}%`, transform: transformStyle }}\n            >\n              <span className=\"block text-xs text-gray-600 break-words\">{markValue}</span>\n              <span className=\"block text-xs text-gray-600 break-words\">{label}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n  \n  return (\n    <BaseQuestion question={question} isError={isError} language={language}>\n      <div className=\"pt-1 pb-8 relative\">\n        <input\n          type=\"range_\"\n          min={0}\n          max={100}\n          step={calculateStepSize()}\n          value={currentValue}\n          onChange={handleSliderChange}\n          className={`w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`}\n          style={{ touchAction: 'manipulation' }}\n          aria-valuenow={currentValue}\n        />\n        \n        {renderMarksAsColumns()}\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default SliderQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}