{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  isError,\n  value,\n  onChange,\n  language\n}) => {\n  _s();\n  // Default to min value if no value is provided, or use the provided value\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n  const renderMarksAsColumns = () => {};\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-1 pb-4 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg font-medium\",\n          children: currentValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), question.unit && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          children: question.unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: question.min,\n        max: question.max,\n        step: question.step || 1,\n        value: currentValue,\n        onChange: handleSliderChange,\n        className: `w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`,\n        style: {\n          touchAction: 'manipulation'\n        },\n        \"aria-valuemin\": question.min,\n        \"aria-valuemax\": question.max,\n        \"aria-valuenow\": currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"const markEntries = Object.entries(question.marks);\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid mt-4\",\n        style: {\n          gridTemplateColumns: `repeat(${markEntries.length}, 1fr)`\n        },\n        children: markEntries.map(([markValue, label], index) => {\n          let textAlignment = \"text-center\";\n          if (index === 0) {\n            textAlignment = \"text-left\";\n          } else if (index === markEntries.length - 1) {\n            textAlignment = \"text-right\";\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-1 ${textAlignment}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"block text-xs text-gray-600 break-words\",\n              children: markValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"block text-xs text-gray-600 break-words\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, markValue, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderQuestion, \"tVvdVRJf1SXGV8aKwR0WcKNq9dc=\");\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","BaseQuestion","jsxDEV","_jsxDEV","SliderQuestion","question","isError","value","onChange","language","_s","currentValue","setCurrentValue","undefined","min","handleSliderChange","e","newValue","parseInt","target","id","renderMarksAsColumns","children","className","fileName","_jsxFileName","lineNumber","columnNumber","unit","type","max","step","style","touchAction","gridTemplateColumns","markEntries","length","map","markValue","label","index","textAlignment","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  isError, \n  value, \n  onChange, \n  language \n}) => {\n  // Default to min value if no value is provided, or use the provided value\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n  \n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  \n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n\n  const renderMarksAsColumns = () => {\n    \n  };\n  \n  return (\n    <BaseQuestion question={question} isError={isError} language={language}>\n      <div className=\"pt-1 pb-4 relative\">\n        {/* Current value display */}\n        <div className=\"flex justify-between m-2\">\n          <span className=\"text-lg font-medium\">{currentValue}</span>\n          {question.unit && <span className=\"text-sm text-gray-500\">{question.unit}</span>}\n        </div>\n        \n        {/* Slider input */}\n        <input\n          type=\"range\"\n          min={question.min}\n          max={question.max}\n          step={question.step || 1}\n          value={currentValue}\n          onChange={handleSliderChange}\n          className={`w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`}\n          style={{ touchAction: 'manipulation' }}\n          aria-valuemin={question.min}\n          aria-valuemax={question.max}\n          aria-valuenow={currentValue}\n        />\n        \n        const markEntries = Object.entries(question.marks);\n    \n\n      <div className=\"grid mt-4\" style={{ gridTemplateColumns: `repeat(${markEntries.length}, 1fr)` }}>\n        {markEntries.map(([markValue, label], index) => {\n          let textAlignment = \"text-center\"; \n          if (index === 0) {\n            textAlignment = \"text-left\"; \n          } else if (index === markEntries.length - 1) {\n            textAlignment = \"text-right\"; \n          }\n          \n          return (\n            <div key={markValue} className={`px-1 ${textAlignment}`}>\n              <span className=\"block text-xs text-gray-600 break-words\">{markValue}</span>\n              <span className=\"block text-xs text-gray-600 break-words\">{label}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default SliderQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}