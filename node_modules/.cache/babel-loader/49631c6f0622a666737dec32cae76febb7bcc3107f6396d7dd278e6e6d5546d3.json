{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  isError,\n  value,\n  onChange,\n  language\n}) => {\n  _s();\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min || 0);\n  const [isDragging, setIsDragging] = useState(false);\n  const sliderRef = useRef(null);\n  const thumbRef = useRef(null);\n  const trackRef = useRef(null);\n  const isDefaultValue = currentValue === (question.min || 0);\n  const min = question.min || 0;\n  const max = question.max || 100;\n  const step = question.step || 1;\n  const unit = question.unit || '';\n\n  // Calculate the percentage position for the thumb\n  const getPercentage = value => {\n    return (value - min) / (max - min) * 100;\n  };\n  const thumbPosition = getPercentage(currentValue);\n\n  // Calculate step size for marks\n  const calculateStepSize = () => {\n    if (question.marks) {\n      const markEntries = Object.entries(question.marks);\n      return (max - min) / (markEntries.length - 1);\n    }\n    return step;\n  };\n  const stepSize = calculateStepSize();\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n      if (value !== min) {\n        setUserInteracted(true);\n      }\n    }\n  }, [value, min]);\n\n  // Handle mouse/touch events for custom slider\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    updateValueFromPosition(e);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('touchmove', handleMouseMove);\n    document.addEventListener('touchend', handleMouseUp);\n  };\n  const handleMouseMove = e => {\n    if (isDragging) {\n      updateValueFromPosition(e);\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n    document.removeEventListener('touchmove', handleMouseMove);\n    document.removeEventListener('touchend', handleMouseUp);\n  };\n  const updateValueFromPosition = e => {\n    if (!trackRef.current) return;\n    const trackRect = trackRef.current.getBoundingClientRect();\n    const clientX = e.clientX || e.touches && e.touches[0].clientX || 0;\n\n    // Calculate position relative to track\n    let position = (clientX - trackRect.left) / trackRect.width;\n    position = Math.max(0, Math.min(position, 1)); // Clamp between 0 and 1\n\n    // Convert to value\n    let newValue = min + position * (max - min);\n\n    // Snap to step\n    newValue = Math.round(newValue / stepSize) * stepSize;\n\n    // Ensure value is within bounds\n    newValue = Math.max(min, Math.min(newValue, max));\n\n    // Update state\n    setCurrentValue(newValue);\n    setUserInteracted(true);\n    onChange(question.id, newValue);\n  };\n\n  // Handle keyboard navigation\n  const handleKeyDown = e => {\n    let newValue = currentValue;\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowUp':\n        newValue = Math.min(max, currentValue + stepSize);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        newValue = Math.max(min, currentValue - stepSize);\n        break;\n      case 'Home':\n        newValue = min;\n        break;\n      case 'End':\n        newValue = max;\n        break;\n      default:\n        return;\n    }\n    setCurrentValue(newValue);\n    setUserInteracted(true);\n    onChange(question.id, newValue);\n    e.preventDefault();\n  };\n  const showError = isError && question.required && (isDefaultValue || !userInteracted);\n  const renderMarksAsColumns = () => {\n    if (!question.marks) return null;\n    const markEntries = Object.entries(question.marks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mt-2\",\n      style: {\n        position: 'relative',\n        height: '40px'\n      },\n      children: markEntries.map(([markValue, label], index) => {\n        // Calculate the position as a percentage of the slider width\n        const position = index / (markEntries.length - 1) * 100;\n        let textAlignment = \"text-center\";\n        let translateX = `-50%`;\n        if (index > Math.floor(markEntries.length / 2)) {\n          translateX = `-60%`;\n        } else if (index < Math.floor(markEntries.length / 2)) {\n          translateX = `-40%`;\n        }\n        if (index === 0) {\n          textAlignment = \"text-left\";\n          translateX = '5%';\n        } else if (index === markEntries.length - 1) {\n          textAlignment = \"text-right\";\n          translateX = '-105%';\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute ${textAlignment}`,\n          style: {\n            left: `${position}%`,\n            transform: `translateX(${translateX})`,\n            width: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `block text-xs font-medium ${showError ? 'text-red-600' : 'text-gray-700'}`,\n              children: markValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `block text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`,\n              style: {\n                lineHeight: '1.2',\n                maxWidth: '100%',\n                wordWrap: 'break-word',\n                hyphens: 'auto'\n              },\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, `mark-${markValue}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Create a question object with proper validation state\n  const questionWithValidation = {\n    ...question,\n    validation: {\n      ...(question.validation || {}),\n      required: question.required\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: questionWithValidation,\n    isError: showError,\n    language: language,\n    value: currentValue,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-2\",\n      children: [!question.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-lg font-medium ${showError ? 'text-red-600' : ''}`,\n          children: [currentValue, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full h-6 flex items-center cursor-pointer\",\n        ref: sliderRef,\n        role: \"slider\",\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": currentValue,\n        \"aria-invalid\": showError,\n        tabIndex: 0,\n        onKeyDown: handleKeyDown,\n        \"data-testid\": `slider-${question.id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: trackRef,\n          className: \"absolute w-full h-2\",\n          style: {\n            top: '50%',\n            transform: 'translateY(-50%)'\n          },\n          onMouseDown: handleMouseDown,\n          onTouchStart: handleMouseDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: thumbRef,\n          className: `absolute w-4 h-4 rounded-full shadow-md transform -translate-x-1/2 transition-transform duration-100 ${isDragging ? 'scale-110' : ''} ${showError ? 'bg-red-500 border-red-600' : 'bg-blue-500 border-blue-600'}`,\n          style: {\n            left: `${thumbPosition}%`,\n            top: '50%',\n            transform: `translateX(-50%) translateY(-50%) ${isDragging ? 'scale(1.1)' : ''}`,\n            cursor: 'grab',\n            border: '2px solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), !question.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`,\n          children: [min, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`,\n          children: [max, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), question.marks && renderMarksAsColumns()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderQuestion, \"G322PutvHdg0LCsH8HjDsuuAYXE=\");\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","useRef","BaseQuestion","jsxDEV","_jsxDEV","SliderQuestion","question","isError","value","onChange","language","_s","userInteracted","setUserInteracted","currentValue","setCurrentValue","undefined","min","isDragging","setIsDragging","sliderRef","thumbRef","trackRef","isDefaultValue","max","step","unit","getPercentage","thumbPosition","calculateStepSize","marks","markEntries","Object","entries","length","stepSize","handleMouseDown","e","updateValueFromPosition","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","current","trackRect","getBoundingClientRect","clientX","touches","position","left","width","Math","newValue","round","id","handleKeyDown","key","preventDefault","showError","required","renderMarksAsColumns","className","style","height","children","map","markValue","label","index","textAlignment","translateX","floor","transform","fileName","_jsxFileName","lineNumber","columnNumber","lineHeight","maxWidth","wordWrap","hyphens","questionWithValidation","validation","ref","role","tabIndex","onKeyDown","top","onMouseDown","onTouchStart","cursor","border","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  isError, \n  value, \n  onChange, \n  language \n}) => {\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : (question.min || 0));\n  const [isDragging, setIsDragging] = useState(false);\n  const sliderRef = useRef(null);\n  const thumbRef = useRef(null);\n  const trackRef = useRef(null);\n  const isDefaultValue = currentValue === (question.min || 0);\n  \n  const min = question.min || 0;\n  const max = question.max || 100;\n  const step = question.step || 1;\n  const unit = question.unit || '';\n  \n  // Calculate the percentage position for the thumb\n  const getPercentage = (value) => {\n    return ((value - min) / (max - min)) * 100;\n  };\n  \n  const thumbPosition = getPercentage(currentValue);\n  \n  // Calculate step size for marks\n  const calculateStepSize = () => {\n    if (question.marks) {\n      const markEntries = Object.entries(question.marks);\n      return (max - min) / (markEntries.length - 1);\n    }\n    return step;\n  };\n  \n  const stepSize = calculateStepSize();\n  \n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n      if (value !== min) {\n        setUserInteracted(true);\n      }\n    }\n  }, [value, min]);\n  \n  // Handle mouse/touch events for custom slider\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    updateValueFromPosition(e);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('touchmove', handleMouseMove);\n    document.addEventListener('touchend', handleMouseUp);\n  };\n  \n  const handleMouseMove = (e) => {\n    if (isDragging) {\n      updateValueFromPosition(e);\n    }\n  };\n  \n  const handleMouseUp = () => {\n    setIsDragging(false);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n    document.removeEventListener('touchmove', handleMouseMove);\n    document.removeEventListener('touchend', handleMouseUp);\n  };\n  \n  const updateValueFromPosition = (e) => {\n    if (!trackRef.current) return;\n    \n    const trackRect = trackRef.current.getBoundingClientRect();\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX) || 0;\n    \n    // Calculate position relative to track\n    let position = (clientX - trackRect.left) / trackRect.width;\n    position = Math.max(0, Math.min(position, 1)); // Clamp between 0 and 1\n    \n    // Convert to value\n    let newValue = min + position * (max - min);\n    \n    // Snap to step\n    newValue = Math.round(newValue / stepSize) * stepSize;\n    \n    // Ensure value is within bounds\n    newValue = Math.max(min, Math.min(newValue, max));\n    \n    // Update state\n    setCurrentValue(newValue);\n    setUserInteracted(true);\n    onChange(question.id, newValue);\n  };\n  \n  // Handle keyboard navigation\n  const handleKeyDown = (e) => {\n    let newValue = currentValue;\n    \n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowUp':\n        newValue = Math.min(max, currentValue + stepSize);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        newValue = Math.max(min, currentValue - stepSize);\n        break;\n      case 'Home':\n        newValue = min;\n        break;\n      case 'End':\n        newValue = max;\n        break;\n      default:\n        return;\n    }\n    \n    setCurrentValue(newValue);\n    setUserInteracted(true);\n    onChange(question.id, newValue);\n    e.preventDefault();\n  };\n\n  const showError = isError && question.required && (isDefaultValue || !userInteracted);\n\n  const renderMarksAsColumns = () => {\n    if (!question.marks) return null;\n    \n    const markEntries = Object.entries(question.marks);\n\n    return (\n      <div className=\"w-full mt-2\" style={{ position: 'relative', height: '40px' }}>\n        {markEntries.map(([markValue, label], index) => {\n          // Calculate the position as a percentage of the slider width\n          const position = (index / (markEntries.length - 1)) * 100;\n          \n          let textAlignment = \"text-center\";\n          let translateX = `-50%`;\n          if (index > Math.floor(markEntries.length / 2)) {\n            translateX = `-60%`;\n          } else if (index < Math.floor(markEntries.length / 2)) {\n            translateX = `-40%`;\n          }\n          \n          if (index === 0) {\n            textAlignment = \"text-left\";\n            translateX = '5%';\n          } else if (index === markEntries.length - 1) {\n            textAlignment = \"text-right\";\n            translateX = '-105%';\n          }\n\n          return (\n            <div\n              key={`mark-${markValue}`}\n              className={`absolute ${textAlignment}`}\n              style={{ \n                left: `${position}%`,\n                transform: `translateX(${translateX})`,\n                width: '60px'\n              }}\n            >\n              <div>\n                <span className={`block text-xs font-medium ${showError ? 'text-red-600' : 'text-gray-700'}`}>\n                  {markValue}\n                </span>\n              </div>\n              \n              <div>\n                <span className={`block text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`} style={{ \n                  lineHeight: '1.2',\n                  maxWidth: '100%',\n                  wordWrap: 'break-word',\n                  hyphens: 'auto'\n                }}>{label}</span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n  \n  // Create a question object with proper validation state\n  const questionWithValidation = {\n    ...question,\n    validation: {\n      ...(question.validation || {}),\n      required: question.required\n    }\n  };\n  \n  return (\n    <BaseQuestion \n      question={questionWithValidation}\n      isError={showError} \n      language={language} \n      value={currentValue}\n    >\n      <div className=\"flex flex-col space-y-2\">\n        {!question.marks && (\n          <div className=\"flex justify-between\">\n            <span className={`text-lg font-medium ${showError ? 'text-red-600' : ''}`}>\n              {currentValue}{unit}\n            </span>\n          </div>\n        )}\n        \n        {/* Custom slider implementation */}\n        <div \n          className=\"relative w-full h-6 flex items-center cursor-pointer\"\n          ref={sliderRef}\n          role=\"slider\"\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-valuenow={currentValue}\n          aria-invalid={showError}\n          tabIndex={0}\n          onKeyDown={handleKeyDown}\n          data-testid={`slider-${question.id}`}\n        >\n          {/* Invisible track for click/touch handling */}\n          <div \n            ref={trackRef}\n            className=\"absolute w-full h-2\"\n            style={{ top: '50%', transform: 'translateY(-50%)' }}\n            onMouseDown={handleMouseDown}\n            onTouchStart={handleMouseDown}\n          ></div>\n          \n          {/* Visible thumb */}\n          <div \n            ref={thumbRef}\n            className={`absolute w-4 h-4 rounded-full shadow-md transform -translate-x-1/2 transition-transform duration-100 ${\n              isDragging ? 'scale-110' : ''\n            } ${\n              showError ? 'bg-red-500 border-red-600' : 'bg-blue-500 border-blue-600'\n            }`}\n            style={{ \n              left: `${thumbPosition}%`,\n              top: '50%',\n              transform: `translateX(-50%) translateY(-50%) ${isDragging ? 'scale(1.1)' : ''}`,\n              cursor: 'grab',\n              border: '2px solid',\n            }}\n          ></div>\n        </div>\n        \n        {!question.marks && (\n          <div className=\"flex justify-between\">\n            <span className={`text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`}>\n              {min}{unit}\n            </span>\n            <span className={`text-xs ${showError ? 'text-red-600' : 'text-gray-600'}`}>\n              {max}{unit}\n            </span>\n          </div>\n        )}\n        \n        {question.marks && renderMarksAsColumns()}\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default SliderQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}