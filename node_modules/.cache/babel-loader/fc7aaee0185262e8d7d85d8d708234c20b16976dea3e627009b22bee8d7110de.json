{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RangeSliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport CustomSlider from '../common/CustomSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RangeSliderQuestion = ({\n  question,\n  isError,\n  value = 0,\n  onChange,\n  language\n}) => {\n  _s();\n  // Use local state to track the value\n  const [currentValue, setCurrentValue] = useState(value);\n\n  // Update local state when prop value changes\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  // Handle slider change\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n\n  // Get unit from question object or default to empty string\n  const unit = question.unit || '';\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg font-medium\",\n          children: [currentValue, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomSlider, {\n        type: \"range_slider\",\n        value: currentValue,\n        onChange: handleSliderChange,\n        min: question.min,\n        max: question.max,\n        step: question.step,\n        isError: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [question.min, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [question.max, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(RangeSliderQuestion, \"j5Oed6X0T7Cge/f5ej9FHv5vSpQ=\");\n_c = RangeSliderQuestion;\nexport default RangeSliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"RangeSliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","BaseQuestion","CustomSlider","jsxDEV","_jsxDEV","RangeSliderQuestion","question","isError","value","onChange","language","_s","currentValue","setCurrentValue","handleSliderChange","e","newValue","parseInt","target","id","unit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RangeSliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport CustomSlider from '../common/CustomSlider';\n\nconst RangeSliderQuestion = ({ \n  question, \n  isError, \n  value = 0, \n  onChange, \n  language\n}) => {\n  // Use local state to track the value\n  const [currentValue, setCurrentValue] = useState(value);\n  \n  // Update local state when prop value changes\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n  \n  // Handle slider change\n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n  \n  // Get unit from question object or default to empty string\n  const unit = question.unit || '';\n  \n  return (\n    <BaseQuestion question={question} isError={isError} language={language}>\n      <div className=\"relative\">\n        {/* Current value display */}\n        <div className=\"flex justify-between\">\n          <span className=\"text-lg font-medium\">{currentValue}{unit}</span>\n        </div>\n        \n        {/* Slider input */}\n        <CustomSlider\n          type=\"range_slider\"\n          value={currentValue}\n          onChange={handleSliderChange}\n          min={question.min}\n          max={question.max}\n          step={question.step}\n          isError={isError}\n        />\n        \n        {/* Min/Max labels */}\n        <div className=\"flex justify-between text-xs\">\n          <span>{question.min}{unit}</span>\n          <span>{question.max}{unit}</span>\n        </div>\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default RangeSliderQuestion; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,mBAAmB,GAAGA,CAAC;EAC3BC,QAAQ;EACRC,OAAO;EACPC,KAAK,GAAG,CAAC;EACTC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAACQ,KAAK,CAAC;;EAEvD;EACAT,SAAS,CAAC,MAAM;IACdc,eAAe,CAACL,KAAK,CAAC;EACxB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMM,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACV,KAAK,EAAE,EAAE,CAAC;IAC7CK,eAAe,CAACG,QAAQ,CAAC;IACzBP,QAAQ,CAACH,QAAQ,CAACa,EAAE,EAAEH,QAAQ,CAAC;EACjC,CAAC;;EAED;EACA,MAAMI,IAAI,GAAGd,QAAQ,CAACc,IAAI,IAAI,EAAE;EAEhC,oBACEhB,OAAA,CAACH,YAAY;IAACK,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA,QAAS;IAAAW,QAAA,eACrEjB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBAEvBjB,OAAA;QAAKkB,SAAS,EAAC,sBAAsB;QAAAD,QAAA,eACnCjB,OAAA;UAAMkB,SAAS,EAAC,qBAAqB;UAAAD,QAAA,GAAET,YAAY,EAAEQ,IAAI;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eAGNtB,OAAA,CAACF,YAAY;QACXyB,IAAI,EAAC,cAAc;QACnBnB,KAAK,EAAEI,YAAa;QACpBH,QAAQ,EAAEK,kBAAmB;QAC7Bc,GAAG,EAAEtB,QAAQ,CAACsB,GAAI;QAClBC,GAAG,EAAEvB,QAAQ,CAACuB,GAAI;QAClBC,IAAI,EAAExB,QAAQ,CAACwB,IAAK;QACpBvB,OAAO,EAAEA;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAGFtB,OAAA;QAAKkB,SAAS,EAAC,8BAA8B;QAAAD,QAAA,gBAC3CjB,OAAA;UAAAiB,QAAA,GAAOf,QAAQ,CAACsB,GAAG,EAAER,IAAI;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjCtB,OAAA;UAAAiB,QAAA,GAAOf,QAAQ,CAACuB,GAAG,EAAET,IAAI;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAACf,EAAA,CApDIN,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAsDzB,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}