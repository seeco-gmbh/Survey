{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/InteractiveSurvey.js\";\nimport React from 'react';\nimport { t, languages, defaultLanguage } from '../localization';\nimport { getSurveyData, getStartScreenData, getResultScreenData } from '../data/surveyData';\nimport { getQuestionComponentByType } from './questions';\nimport { validateField } from './questions/BaseQuestion';\n\n// Constants\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEYS = {\n  SURVEY_RESPONSES: 'surveyResponses',\n  LAST_SURVEY_ID: 'lastSurveyId'\n};\n\n// Helper functions\nconst generateSurveyId = () => 'survey_' + Date.now() + '_' + Math.random().toString(36).substring(2, 11);\nconst calculateProgress = (currentSection, totalSections) => Math.round(currentSection / (totalSections - 1) * 100);\nclass InteractiveSurvey extends React.Component {\n  constructor(props) {\n    super(props);\n    // Change language and update survey data\n    this.changeLanguage = language => {\n      if (languages[language]) {\n        const surveyData = getSurveyData(language);\n        this.setState({\n          language,\n          surveyData: surveyData.sections || surveyData,\n          startScreenData: getStartScreenData(language),\n          resultScreenData: getResultScreenData(language)\n        });\n      }\n    };\n    // Proceed after language selection\n    this.proceedWithLanguage = () => {\n      this.setState({\n        languageSelected: true\n      });\n    };\n    // Save answer and trigger validation\n    this.saveAnswer = (questionId, value) => {\n      this.setState(prevState => ({\n        answers: {\n          ...prevState.answers,\n          [questionId]: value,\n          [`${questionId}_modified`]: true\n        }\n      }), () => {\n        // Clear validation error for this field if it's now valid\n        if (this.state.missingFields.includes(questionId)) {\n          const question = this.getCurrentQuestionById(questionId);\n          if (question) {\n            const validationRules = {\n              ...(question.validation || {}),\n              required: question.required\n            };\n            const {\n              isValid\n            } = validateField(value, validationRules);\n            if (isValid) {\n              this.setState(prevState => ({\n                missingFields: prevState.missingFields.filter(id => id !== questionId),\n                validationError: prevState.missingFields.filter(id => id !== questionId).length > 0\n              }));\n            }\n          }\n        }\n      });\n    };\n    // Helper to get current question by ID\n    this.getCurrentQuestionById = questionId => {\n      const currentSection = this.state.surveyData[this.state.currentSection];\n      return currentSection === null || currentSection === void 0 ? void 0 : currentSection.questions.find(q => q.id === questionId);\n    };\n    // Handle multiple answers for multiselect questions\n    this.handleMultiSelect = (questionId, option, checked) => {\n      const currentSelections = this.state.answers[questionId] || [];\n      if (checked) {\n        this.saveAnswer(questionId, [...currentSelections, option]);\n      } else {\n        this.saveAnswer(questionId, currentSelections.filter(item => item !== option));\n      }\n    };\n    // Handle ranking updates - always mark as user action\n    this.handleRankingChange = (questionId, newOrder) => {\n      this.saveAnswer(questionId, newOrder, true);\n    };\n    // Navigate to next section or submit if on last section\n    this.nextSection = () => {\n      // Validate required fields\n      if (!this.validateRequiredFields()) {\n        return;\n      }\n\n      // If not the last section, go to next section\n      if (this.state.currentSection < this.state.surveyData.length - 1) {\n        // Scroll to top after state update\n        const nextSection = this.state.currentSection + 1;\n        this.setState({\n          currentSection: nextSection,\n          validationError: false,\n          missingFields: [],\n          progress: calculateProgress(nextSection, this.state.surveyData.length)\n        }, () => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n        });\n      } else {\n        // If last section, submit the form\n        this.handleSubmit();\n      }\n    };\n    // Navigate to previous section\n    this.prevSection = () => {\n      const prevSection = this.state.currentSection - 1;\n      this.setState({\n        currentSection: prevSection,\n        validationError: false,\n        missingFields: [],\n        progress: calculateProgress(prevSection, this.state.surveyData.length)\n      }, () => {\n        // Scroll to top after state update\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      });\n    };\n    // Validate required fields in current section\n    this.validateRequiredFields = () => {\n      const currentSectionQuestions = this.state.surveyData[this.state.currentSection].questions;\n      const missingFields = [];\n      const requiredQuestions = currentSectionQuestions.filter(q => q.required && this.shouldShowQuestion(q));\n      requiredQuestions.forEach(q => {\n        const answer = this.state.answers[q.id];\n        const validationRules = {\n          ...(q.validation || {}),\n          required: q.required\n        };\n        const {\n          isValid\n        } = validateField(answer, validationRules);\n        if (!isValid) {\n          missingFields.push(q.id);\n        }\n      });\n      if (missingFields.length > 0) {\n        this.setState({\n          validationError: true,\n          missingFields\n        });\n        return false;\n      }\n      this.setState({\n        validationError: false,\n        missingFields: []\n      });\n      return true;\n    };\n    // Save to JSONBin\n    this.saveToJsonBin = data => {\n      fetch('https://api.jsonbin.io/v3/b', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Master-Key': '$2a$10$d/tjFfo2wRCJsPoPs307DO2097IW8VsfNdz9xmCcuXQ4IscWPYj1a',\n          'X-Bin-Name': this.state.surveyId\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Saved to JSONBin:', data);\n        localStorage.setItem('lastSurveyId', data.metadata.id);\n      }).catch(error => {\n        console.error('Error saving to JSONBin:', error);\n        this.saveToLocalStorage(data);\n      });\n    };\n    this.saveToLocalStorage = data => {\n      try {\n        const existingData = JSON.parse(localStorage.getItem(STORAGE_KEYS.SURVEY_RESPONSES) || '[]');\n        existingData.push({\n          id: this.state.surveyId,\n          timestamp: new Date().toISOString(),\n          data: data\n        });\n        localStorage.setItem(STORAGE_KEYS.SURVEY_RESPONSES, JSON.stringify(existingData));\n      } catch (e) {\n        console.error('Error saving to localStorage:', e);\n      }\n    };\n    // Submit survey\n    this.handleSubmit = () => {\n      // Prepare data for submission\n      const submissionData = {\n        surveyId: this.state.surveyId,\n        answers: this.state.answers,\n        submittedAt: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        screenSize: `${window.innerWidth}x${window.innerHeight}`\n      };\n      this.saveToLocalStorage(submissionData);\n      this.setState({\n        submitted: true\n      });\n    };\n    // Check if a question should be displayed based on conditional logic\n    this.shouldShowQuestion = question => {\n      if (!question.condition) return true;\n      const {\n        dependsOn,\n        value\n      } = question.condition;\n      const answer = this.state.answers[dependsOn];\n\n      // If answer is undefined, the condition is not met\n      if (answer === undefined) return false;\n\n      // Handle array values (for multiselect)\n      if (Array.isArray(answer)) {\n        // If value is also an array, check if any value matches\n        if (Array.isArray(value)) {\n          return value.some(v => answer.includes(v));\n        }\n        // If value is a string, check if it's included in the answer array\n        return answer.includes(value);\n      }\n\n      // Handle boolean values (for checkbox)\n      if (typeof answer === 'boolean') {\n        return answer === value;\n      }\n\n      // Handle function conditions\n      if (typeof value === 'function') {\n        return value(answer);\n      }\n\n      // Default case: direct comparison\n      return answer === value;\n    };\n    // Render function for question types\n    this.renderQuestion = question => {\n      if (!this.shouldShowQuestion(question)) return null;\n      const isError = this.state.validationError && this.state.missingFields.includes(question.id);\n\n      // Get the component for this question type\n      const QuestionComponent = getQuestionComponentByType(question.type);\n      if (!QuestionComponent) {\n        console.warn(`Unknown question type: ${question.type}`);\n        return null;\n      }\n      const value = this.state.answers[question.id];\n      const isModified = this.state.answers[`${question.id}_modified`] === true;\n      return /*#__PURE__*/_jsxDEV(QuestionComponent, {\n        question: question,\n        isError: isError,\n        value: value,\n        onChange: this.saveAnswer,\n        language: this.state.language,\n        isModified: isModified\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }, this);\n    };\n    // Render the current section of the survey\n    this.renderCurrentSection = () => {\n      if (!this.state.surveyData || !Array.isArray(this.state.surveyData) || !this.state.surveyData[this.state.currentSection]) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading section data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 14\n        }, this);\n      }\n      const section = this.state.surveyData[this.state.currentSection];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2\",\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: section.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this), this.state.validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-50 border border-red-300 rounded text-red-700 text-sm\",\n          children: t('validationError', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), section.questions.map(question => this.renderQuestion(question))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }, this);\n    };\n    // Render the thank you page after submission\n    this.renderResults = () => {\n      const resultData = this.state.resultScreenData;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: resultData.title || t('thankYouTitle', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: resultData.description || t('thankYouMessage', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this), resultData.bulletPoints && resultData.bulletPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mb-6 list-disc list-inside text-left max-w-md mx-auto\",\n          children: resultData.bulletPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-2\",\n            children: point\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 bg-green-50 border border-green-200 rounded-lg max-w-md mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-16 h-16 mx-auto mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              className: \"text-green-600\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-800\",\n            children: resultData.description || t('thankYouMessage', this.state.language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-gray-600\",\n            children: [t('surveyIdLabel', this.state.language), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-mono bg-gray-100 px-2 py-1 rounded\",\n              children: this.state.surveyId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 11\n          }, this), resultData.contactInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-gray-600\",\n            children: resultData.contactInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }, this), resultData.ctaText && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.close(),\n          className: \"mt-6 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\",\n          children: resultData.ctaText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 7\n      }, this);\n    };\n    // Render start screen\n    this.renderStartScreen = () => {\n      const startData = this.state.startScreenData;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex flex-col items-center justify-center min-h-[600px] p-3 sm:p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl sm:text-3xl font-bold mb-4 sm:mb-6 text-center text-gray-800\",\n          children: startData.title || t('welcomeToSurvey', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), startData.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base sm:text-lg mb-6 sm:mb-8 text-center max-w-2xl mx-auto text-gray-600 leading-relaxed\",\n          children: startData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), startData.bulletPoints && startData.bulletPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mb-6 sm:mb-8 space-y-3 max-w-xl mx-auto px-2\",\n          children: startData.bulletPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-start space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5 text-blue-500 flex-shrink-0 mt-1\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-700\",\n              children: point\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 sm:mb-8 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base mb-3 sm:mb-4 text-gray-700\",\n            children: t('pleaseSelectLanguage', this.state.language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative inline-block w-full sm:w-64 max-w-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: this.state.language,\n              onChange: e => this.changeLanguage(e.target.value),\n              className: \"block w-full appearance-none bg-white border border-gray-300 hover:border-gray-400 px-4 py-2 pr-8 rounded-md shadow-sm text-base text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n              children: Object.entries(languages).map(([code, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: code,\n                className: \"py-1\",\n                children: name\n              }, code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"fill-current h-4 w-4\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.proceedWithLanguage,\n            className: \"inline-flex items-center px-4 sm:px-6 py-2 sm:py-3 bg-blue-600 text-white text-sm sm:text-base font-medium rounded-md hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: [startData.ctaText || t('proceedToSurvey', this.state.language), /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"ml-2 -mr-1 w-4 h-4 sm:w-5 sm:h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M13 7l5 5m0 0l-5 5m5-5H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }, this);\n    };\n    // Render progress bar\n    this.renderProgressBar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-200 rounded-full h-2.5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-2.5 rounded-full transition-all duration-300\",\n          style: {\n            width: `${this.state.progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-1 text-xs text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('startLabel', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [this.state.progress, t('progressLabel', this.state.language)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 5\n    }, this);\n    // Render navigation buttons\n    this.renderNavigationButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.prevSection,\n        disabled: this.state.currentSection === 0,\n        className: `px-3 sm:px-4 py-2 rounded transition-colors text-sm sm:text-base ${this.state.currentSection === 0 ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-gray-200 hover:bg-gray-300'}`,\n        \"aria-label\": t('prevButton', this.state.language),\n        children: t('prevButton', this.state.language)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.nextSection,\n        className: \"bg-blue-600 text-white px-3 sm:px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm sm:text-base\",\n        \"aria-label\": this.state.currentSection === this.state.surveyData.length - 1 ? t('submitButton', this.state.language) : t('nextButton', this.state.language),\n        children: this.state.currentSection === this.state.surveyData.length - 1 ? t('submitButton', this.state.language) : t('nextButton', this.state.language)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 5\n    }, this);\n    const _language = props.language || defaultLanguage;\n    const _surveyData = getSurveyData(_language);\n    this.state = {\n      currentSection: 0,\n      answers: {},\n      progress: 0,\n      submitted: false,\n      validationError: false,\n      missingFields: [],\n      surveyId: generateSurveyId(),\n      language: _language,\n      surveyData: _surveyData.sections || _surveyData,\n      startScreenData: getStartScreenData(_language),\n      resultScreenData: getResultScreenData(_language),\n      languageSelected: false\n    };\n  }\n  // Add animation keyframes to the head of the document\n  componentDidMount() {\n    if (!document.getElementById('survey-animations')) {\n      const style = document.createElement('style');\n      style.id = 'survey-animations';\n      style.innerHTML = `\n        @keyframes float {\n          0% { transform: translateY(0px); }\n          50% { transform: translateY(-10px); }\n          100% { transform: translateY(0px); }\n        }\n        .animate-float {\n          animation: float 3s ease-in-out infinite;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n  render() {\n    if (!this.state.surveyData || !Array.isArray(this.state.surveyData)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto p-3 sm:p-6 bg-white rounded-lg shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading survey data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-3 sm:p-6 bg-white rounded-lg shadow\",\n      children: !this.state.languageSelected ? this.renderStartScreen() : !this.state.submitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl sm:text-2xl font-bold mb-4 sm:mb-6\",\n          children: t('surveyTitle', this.state.language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), this.renderProgressBar(), this.renderCurrentSection(), this.renderNavigationButtons()]\n      }, void 0, true) : this.renderResults()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default InteractiveSurvey;","map":{"version":3,"names":["React","t","languages","defaultLanguage","getSurveyData","getStartScreenData","getResultScreenData","getQuestionComponentByType","validateField","jsxDEV","_jsxDEV","Fragment","_Fragment","STORAGE_KEYS","SURVEY_RESPONSES","LAST_SURVEY_ID","generateSurveyId","Date","now","Math","random","toString","substring","calculateProgress","currentSection","totalSections","round","InteractiveSurvey","Component","constructor","props","changeLanguage","language","surveyData","setState","sections","startScreenData","resultScreenData","proceedWithLanguage","languageSelected","saveAnswer","questionId","value","prevState","answers","state","missingFields","includes","question","getCurrentQuestionById","validationRules","validation","required","isValid","filter","id","validationError","length","questions","find","q","handleMultiSelect","option","checked","currentSelections","item","handleRankingChange","newOrder","nextSection","validateRequiredFields","progress","window","scrollTo","top","behavior","handleSubmit","prevSection","currentSectionQuestions","requiredQuestions","shouldShowQuestion","forEach","answer","push","saveToJsonBin","data","fetch","method","headers","surveyId","body","JSON","stringify","then","response","json","console","log","localStorage","setItem","metadata","catch","error","saveToLocalStorage","existingData","parse","getItem","timestamp","toISOString","e","submissionData","submittedAt","userAgent","navigator","screenSize","innerWidth","innerHeight","submitted","condition","dependsOn","undefined","Array","isArray","some","v","renderQuestion","isError","QuestionComponent","type","warn","isModified","onChange","fileName","_jsxFileName","lineNumber","columnNumber","renderCurrentSection","children","section","className","title","description","map","renderResults","resultData","bulletPoints","point","index","xmlns","viewBox","fill","fillRule","d","clipRule","contactInfo","ctaText","onClick","close","renderStartScreen","startData","stroke","strokeLinecap","strokeLinejoin","strokeWidth","target","Object","entries","code","name","renderProgressBar","style","width","renderNavigationButtons","disabled","componentDidMount","document","getElementById","createElement","innerHTML","head","appendChild","render"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/InteractiveSurvey.js"],"sourcesContent":["import React from 'react';\nimport { t, languages, defaultLanguage } from '../localization';\nimport { getSurveyData, getStartScreenData, getResultScreenData } from '../data/surveyData';\nimport { getQuestionComponentByType } from './questions';\nimport { validateField } from './questions/BaseQuestion';\n\n// Constants\nconst STORAGE_KEYS = {\n  SURVEY_RESPONSES: 'surveyResponses',\n  LAST_SURVEY_ID: 'lastSurveyId'\n};\n\n// Helper functions\nconst generateSurveyId = () => 'survey_' + Date.now() + '_' + Math.random().toString(36).substring(2, 11);\nconst calculateProgress = (currentSection, totalSections) => Math.round((currentSection / (totalSections - 1)) * 100);\n\nclass InteractiveSurvey extends React.Component {\n  constructor(props) {\n    super(props);\n    const language = props.language || defaultLanguage;\n    const surveyData = getSurveyData(language);\n    \n    this.state = {\n      currentSection: 0,\n      answers: {},\n      progress: 0,\n      submitted: false,\n      validationError: false,\n      missingFields: [],\n      surveyId: generateSurveyId(),\n      language: language,\n      surveyData: surveyData.sections || surveyData,\n      startScreenData: getStartScreenData(language),\n      resultScreenData: getResultScreenData(language),\n      languageSelected: false\n    };\n  }\n\n  // Change language and update survey data\n  changeLanguage = (language) => {\n    if (languages[language]) {\n      const surveyData = getSurveyData(language);\n      this.setState({ \n        language,\n        surveyData: surveyData.sections || surveyData,\n        startScreenData: getStartScreenData(language),\n        resultScreenData: getResultScreenData(language)\n      });\n    }\n  }\n\n  // Proceed after language selection\n  proceedWithLanguage = () => {\n    this.setState({ languageSelected: true });\n  }\n\n  // Save answer and trigger validation\n  saveAnswer = (questionId, value) => {\n    this.setState(prevState => ({\n      answers: {\n        ...prevState.answers,\n        [questionId]: value,\n        [`${questionId}_modified`]: true\n      }\n    }), () => {\n      // Clear validation error for this field if it's now valid\n      if (this.state.missingFields.includes(questionId)) {\n        const question = this.getCurrentQuestionById(questionId);\n        if (question) {\n          const validationRules = {\n            ...(question.validation || {}),\n            required: question.required\n          };\n          const { isValid } = validateField(value, validationRules);\n          \n          if (isValid) {\n            this.setState(prevState => ({\n              missingFields: prevState.missingFields.filter(id => id !== questionId),\n              validationError: prevState.missingFields.filter(id => id !== questionId).length > 0\n            }));\n          }\n        }\n      }\n    });\n  };\n\n  // Helper to get current question by ID\n  getCurrentQuestionById = (questionId) => {\n    const currentSection = this.state.surveyData[this.state.currentSection];\n    return currentSection?.questions.find(q => q.id === questionId);\n  };\n\n  // Handle multiple answers for multiselect questions\n  handleMultiSelect = (questionId, option, checked) => {\n    const currentSelections = this.state.answers[questionId] || [];\n    \n    if (checked) {\n      this.saveAnswer(questionId, [...currentSelections, option]);\n    } else {\n      this.saveAnswer(questionId, currentSelections.filter(item => item !== option));\n    }\n  };\n\n  // Handle ranking updates - always mark as user action\n  handleRankingChange = (questionId, newOrder) => {\n    this.saveAnswer(questionId, newOrder, true);\n  };\n\n  // Navigate to next section or submit if on last section\n  nextSection = () => {\n    // Validate required fields\n    if (!this.validateRequiredFields()) {\n      return;\n    }\n    \n    // If not the last section, go to next section\n    if (this.state.currentSection < this.state.surveyData.length - 1) {\n      // Scroll to top after state update\n      const nextSection = this.state.currentSection + 1;\n      this.setState({\n        currentSection: nextSection,\n        validationError: false,\n        missingFields: [],\n        progress: calculateProgress(nextSection, this.state.surveyData.length)\n      }, () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n    } else {\n      // If last section, submit the form\n      this.handleSubmit();\n    }\n  };\n\n  // Navigate to previous section\n  prevSection = () => {\n    const prevSection = this.state.currentSection - 1;\n    this.setState({\n      currentSection: prevSection,\n      validationError: false,\n      missingFields: [],\n      progress: calculateProgress(prevSection, this.state.surveyData.length)\n    }, () => {\n      // Scroll to top after state update\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    });\n  };\n\n  // Validate required fields in current section\n  validateRequiredFields = () => {\n    const currentSectionQuestions = this.state.surveyData[this.state.currentSection].questions;\n    const missingFields = [];\n    \n    const requiredQuestions = currentSectionQuestions.filter(q => q.required && this.shouldShowQuestion(q));\n    \n    requiredQuestions.forEach(q => {\n      const answer = this.state.answers[q.id];\n      \n      const validationRules = {\n        ...(q.validation || {}),\n        required: q.required\n      };\n      \n      const { isValid } = validateField(answer, validationRules);\n      \n      if (!isValid) {\n        missingFields.push(q.id);\n      }\n    });\n    \n    if (missingFields.length > 0) {\n      this.setState({\n        validationError: true,\n        missingFields\n      });\n      return false;\n    }\n    \n    this.setState({\n      validationError: false,\n      missingFields: []\n    });\n    return true;\n  };\n\n  // Save to JSONBin\n  saveToJsonBin = (data) => {\n    fetch('https://api.jsonbin.io/v3/b', {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json',\n        'X-Master-Key': '$2a$10$d/tjFfo2wRCJsPoPs307DO2097IW8VsfNdz9xmCcuXQ4IscWPYj1a',\n        'X-Bin-Name': this.state.surveyId\n      },\n      body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Saved to JSONBin:', data);\n      localStorage.setItem('lastSurveyId', data.metadata.id);\n    })\n    .catch(error => {\n      console.error('Error saving to JSONBin:', error);\n      this.saveToLocalStorage(data);\n    });\n  };\n  \n  saveToLocalStorage = (data) => {\n    try {\n      const existingData = JSON.parse(localStorage.getItem(STORAGE_KEYS.SURVEY_RESPONSES) || '[]');\n      existingData.push({\n        id: this.state.surveyId,\n        timestamp: new Date().toISOString(),\n        data: data\n      });\n      localStorage.setItem(STORAGE_KEYS.SURVEY_RESPONSES, JSON.stringify(existingData));\n    } catch (e) {\n      console.error('Error saving to localStorage:', e);\n    }\n  };\n\n  // Submit survey\n  handleSubmit = () => {\n    // Prepare data for submission\n    const submissionData = {\n      surveyId: this.state.surveyId,\n      answers: this.state.answers,\n      submittedAt: new Date().toISOString(),\n      userAgent: navigator.userAgent,\n      screenSize: `${window.innerWidth}x${window.innerHeight}`\n    };\n    \n    this.saveToLocalStorage(submissionData);\n    this.setState({ submitted: true });\n  };\n\n  // Check if a question should be displayed based on conditional logic\n  shouldShowQuestion = (question) => {\n    if (!question.condition) return true;\n    \n    const { dependsOn, value } = question.condition;\n    const answer = this.state.answers[dependsOn];\n    \n    // If answer is undefined, the condition is not met\n    if (answer === undefined) return false;\n    \n    // Handle array values (for multiselect)\n    if (Array.isArray(answer)) {\n      // If value is also an array, check if any value matches\n      if (Array.isArray(value)) {\n        return value.some(v => answer.includes(v));\n      }\n      // If value is a string, check if it's included in the answer array\n      return answer.includes(value);\n    }\n    \n    // Handle boolean values (for checkbox)\n    if (typeof answer === 'boolean') {\n      return answer === value;\n    }\n    \n    // Handle function conditions\n    if (typeof value === 'function') {\n      return value(answer);\n    }\n    \n    // Default case: direct comparison\n    return answer === value;\n  };\n\n  // Render function for question types\n  renderQuestion = (question) => {\n    if (!this.shouldShowQuestion(question)) return null;\n    \n    const isError = this.state.validationError && this.state.missingFields.includes(question.id);\n    \n    // Get the component for this question type\n    const QuestionComponent = getQuestionComponentByType(question.type);\n    \n    if (!QuestionComponent) {\n      console.warn(`Unknown question type: ${question.type}`);\n      return null;\n    }\n\n    const value = this.state.answers[question.id];\n    const isModified = this.state.answers[`${question.id}_modified`] === true;\n    \n    return (\n      <QuestionComponent\n        key={question.id}\n        question={question}\n        isError={isError}\n        value={value}\n        onChange={this.saveAnswer}\n        language={this.state.language}\n        isModified={isModified}\n      />\n    );\n  };\n\n  // Render the current section of the survey\n  renderCurrentSection = () => {\n    if (!this.state.surveyData || !Array.isArray(this.state.surveyData) || !this.state.surveyData[this.state.currentSection]) {\n      return <div><p>Loading section data...</p></div>;\n    }\n    \n    const section = this.state.surveyData[this.state.currentSection];\n    \n    return (\n      <div>\n        <h2 className=\"text-xl font-bold mb-2\">{section.title}</h2>\n        <p className=\"text-gray-600 mb-6\">{section.description}</p>\n        \n        {this.state.validationError && (\n          <div className=\"mb-4 p-3 bg-red-50 border border-red-300 rounded text-red-700 text-sm\">\n            {t('validationError', this.state.language)}\n          </div>\n        )}\n        \n        {section.questions.map(question => this.renderQuestion(question))}\n      </div>\n    );\n  };\n\n  // Render the thank you page after submission\n  renderResults = () => {\n    const resultData = this.state.resultScreenData;\n    \n    return (\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold mb-4\">{resultData.title || t('thankYouTitle', this.state.language)}</h2>\n        <p className=\"mb-6\">{resultData.description || t('thankYouMessage', this.state.language)}</p>\n        \n        {resultData.bulletPoints && resultData.bulletPoints.length > 0 && (\n          <ul className=\"mb-6 list-disc list-inside text-left max-w-md mx-auto\">\n            {resultData.bulletPoints.map((point, index) => (\n              <li key={index} className=\"mb-2\">{point}</li>\n            ))}\n          </ul>\n        )}\n        \n        <div className=\"p-6 bg-green-50 border border-green-200 rounded-lg max-w-md mx-auto\">\n          <div className=\"w-16 h-16 mx-auto mb-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"text-green-600\">\n              <path fillRule=\"evenodd\" d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <p className=\"text-green-800\">\n            {resultData.description || t('thankYouMessage', this.state.language)}\n          </p>\n          <p className=\"mt-4 text-sm text-gray-600\">\n            {t('surveyIdLabel', this.state.language)} <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">{this.state.surveyId}</span>\n          </p>\n          \n          {resultData.contactInfo && (\n            <p className=\"mt-4 text-sm text-gray-600\">{resultData.contactInfo}</p>\n          )}\n        </div>\n        \n        {resultData.ctaText && (\n          <button \n            onClick={() => window.close()} \n            className=\"mt-6 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n          >\n            {resultData.ctaText}\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  // Render start screen\n  renderStartScreen = () => {\n    const startData = this.state.startScreenData;\n    \n    return (\n      <div className=\"relative flex flex-col items-center justify-center min-h-[600px] p-3 sm:p-6\">\n          <h1 className=\"text-2xl sm:text-3xl font-bold mb-4 sm:mb-6 text-center text-gray-800\">\n            {startData.title || t('welcomeToSurvey', this.state.language)}\n          </h1>\n          \n          {startData.description && (\n            <p className=\"text-base sm:text-lg mb-6 sm:mb-8 text-center max-w-2xl mx-auto text-gray-600 leading-relaxed\">\n              {startData.description}\n            </p>\n          )}\n          \n          {startData.bulletPoints && startData.bulletPoints.length > 0 && (\n            <ul className=\"mb-6 sm:mb-8 space-y-3 max-w-xl mx-auto px-2\">\n              {startData.bulletPoints.map((point, index) => (\n                <li key={index} className=\"flex items-start space-x-3\">\n                  <svg className=\"w-5 h-5 text-blue-500 flex-shrink-0 mt-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span className=\"text-gray-700\">{point}</span>\n                </li>\n              ))}\n            </ul>\n          )}\n          \n          <div className=\"mb-6 sm:mb-8 text-center\">\n            <p className=\"text-base mb-3 sm:mb-4 text-gray-700\">{t('pleaseSelectLanguage', this.state.language)}</p>\n            \n            <div className=\"relative inline-block w-full sm:w-64 max-w-xs\">\n              <select\n                value={this.state.language}\n                onChange={(e) => this.changeLanguage(e.target.value)}\n                className=\"block w-full appearance-none bg-white border border-gray-300 hover:border-gray-400 px-4 py-2 pr-8 rounded-md shadow-sm text-base text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\n              >\n                {Object.entries(languages).map(([code, name]) => (\n                  <option key={code} value={code} className=\"py-1\">\n                    {name}\n                  </option>\n                ))}\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500\">\n                <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"text-center\">\n            <button\n              onClick={this.proceedWithLanguage}\n              className=\"inline-flex items-center px-4 sm:px-6 py-2 sm:py-3 bg-blue-600 text-white text-sm sm:text-base font-medium rounded-md hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              {startData.ctaText || t('proceedToSurvey', this.state.language)}\n              <svg className=\"ml-2 -mr-1 w-4 h-4 sm:w-5 sm:h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n    );\n  }\n\n  // Render progress bar\n  renderProgressBar = () => (\n    <div className=\"mb-8\">\n      <div className=\"bg-gray-200 rounded-full h-2.5\">\n        <div \n          className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300\" \n          style={{ width: `${this.state.progress}%` }}\n        ></div>\n      </div>\n      <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n        <span>{t('startLabel', this.state.language)}</span>\n        <span>{this.state.progress}{t('progressLabel', this.state.language)}</span>\n      </div>\n    </div>\n  );\n\n  // Render navigation buttons\n  renderNavigationButtons = () => (\n    <div className=\"mt-8 flex justify-between\">\n      <button\n        onClick={this.prevSection}\n        disabled={this.state.currentSection === 0}\n        className={`px-3 sm:px-4 py-2 rounded transition-colors text-sm sm:text-base ${\n          this.state.currentSection === 0 ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-gray-200 hover:bg-gray-300'\n        }`}\n        aria-label={t('prevButton', this.state.language)}\n      >\n        {t('prevButton', this.state.language)}\n      </button>\n      \n      <button\n        onClick={this.nextSection}\n        className=\"bg-blue-600 text-white px-3 sm:px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm sm:text-base\"\n        aria-label={this.state.currentSection === this.state.surveyData.length - 1 ? \n          t('submitButton', this.state.language) : \n          t('nextButton', this.state.language)}\n      >\n        {this.state.currentSection === this.state.surveyData.length - 1 ? \n          t('submitButton', this.state.language) : \n          t('nextButton', this.state.language)}\n      </button>\n    </div>\n  );\n\n  // Add animation keyframes to the head of the document\n  componentDidMount() {\n    if (!document.getElementById('survey-animations')) {\n      const style = document.createElement('style');\n      style.id = 'survey-animations';\n      style.innerHTML = `\n        @keyframes float {\n          0% { transform: translateY(0px); }\n          50% { transform: translateY(-10px); }\n          100% { transform: translateY(0px); }\n        }\n        .animate-float {\n          animation: float 3s ease-in-out infinite;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n\n  render() {\n    if (!this.state.surveyData || !Array.isArray(this.state.surveyData)) {\n      return (\n        <div className=\"max-w-4xl mx-auto p-3 sm:p-6 bg-white rounded-lg shadow\">\n          <p>Loading survey data...</p>\n        </div>\n      );\n    }\n    \n    return (\n      <div className=\"max-w-4xl mx-auto p-3 sm:p-6 bg-white rounded-lg shadow\">\n        {!this.state.languageSelected ? (\n          this.renderStartScreen()\n        ) : !this.state.submitted ? (\n         \n          <>\n            <h1 className=\"text-xl sm:text-2xl font-bold mb-4 sm:mb-6\">{t('surveyTitle', this.state.language)}</h1>\n            {this.renderProgressBar()}\n            {this.renderCurrentSection()}\n            {this.renderNavigationButtons()}\n          </>\n        ) : (\n          this.renderResults()\n        )}\n      </div>\n    );\n  }\n}\n\nexport default InteractiveSurvey;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}