{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/BaseQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { t } from '../../localization';\nimport { validateField, getErrorMessage } from '../../utils/validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const validators = {\n  required: value => {\n    if (value === undefined || value === null) return false;\n    if (typeof value === 'string') return value.trim() !== '';\n    if (Array.isArray(value)) return value.length > 0;\n    return true;\n  },\n  email: value => {\n    if (!value) return true;\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(value);\n  },\n  minLength: (value, minLength) => {\n    if (!value) return true;\n    return String(value).length >= minLength;\n  },\n  maxLength: (value, maxLength) => {\n    if (!value) return true;\n    return String(value).length <= maxLength;\n  },\n  pattern: (value, pattern) => {\n    if (!value) return true;\n    const regex = new RegExp(pattern);\n    return regex.test(value);\n  },\n  min: (value, min) => {\n    if (!value && value !== 0) return true;\n    const num = Number(value);\n    return !isNaN(num) && num >= min;\n  },\n  max: (value, max) => {\n    if (!value) return true;\n    return Number(value) <= max;\n  },\n  minDate: (value, minDate) => {\n    if (!value) return true;\n    return new Date(value) >= new Date(minDate);\n  },\n  maxDate: (value, maxDate) => {\n    if (!value) return true;\n    return new Date(value) <= new Date(maxDate);\n  },\n  numeric: value => {\n    if (!value) return true;\n    return !isNaN(Number(value));\n  }\n};\n\n/**\n * Determines if a question has validation errors\n * @param {Object} question - The question object containing validation rules\n * @param {*} value - The current value of the question\n * @param {boolean} shouldValidate - Whether validation should be performed (e.g., form submitted)\n * @returns {Object} - { hasError: boolean, errorMessage: string }\n */\nexport const isError = (question, value, shouldValidate = false, language) => {\n  if (!shouldValidate || !question) return {\n    hasError: false,\n    errorMessage: null\n  };\n  const validationRules = {\n    ...(question.validation || {}),\n    required: question.required\n  };\n  const validationResult = validateField(value, validationRules);\n  if (!validationResult.isValid) {\n    const errorMessage = getErrorMessage(validationResult.errorType, language, validationResult.param);\n    return {\n      hasError: true,\n      errorMessage\n    };\n  }\n  return {\n    hasError: false,\n    errorMessage: null\n  };\n};\nconst BaseQuestion = ({\n  question,\n  shouldValidate = false,\n  children,\n  language,\n  value,\n  customErrorMessage\n}) => {\n  _s();\n  const {\n    id,\n    label,\n    required,\n    info,\n    hint\n  } = question;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipWidth, setTooltipWidth] = useState(0);\n  const tooltipRef = useRef(null);\n  const textMeasureRef = useRef(null);\n  const {\n    hasError,\n    errorMessage\n  } = isError(question, value, shouldValidate, language);\n  const labelClass = hasError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n  useEffect(() => {\n    if (showTooltip && info && textMeasureRef.current) {\n      const span = document.createElement('span');\n      span.style.visibility = 'hidden';\n      span.style.position = 'absolute';\n      span.style.whiteSpace = 'nowrap';\n      span.style.fontSize = '0.875rem';\n      span.style.padding = '0.5rem';\n      span.textContent = info;\n      document.body.appendChild(span);\n      const textWidth = span.offsetWidth + 16;\n      document.body.removeChild(span);\n      setTooltipWidth(textWidth);\n    }\n  }, [showTooltip, info]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\n        setShowTooltip(false);\n      }\n    };\n    if (showTooltip) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTooltip]);\n  const requiredMark = required ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-red-600 ml-1\",\n    children: \"*\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 35\n  }, this) : null;\n  const infoIcon = info ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"ml-1 inline-block relative\",\n    ref: tooltipRef,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"w-5 h-5 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-pointer hover:bg-gray-300\",\n      onClick: () => setShowTooltip(!showTooltip),\n      \"aria-label\": showTooltip ? t('hideInfo', language) : t('showInfo', language),\n      children: t('infoIconLabel', language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: textMeasureRef,\n      style: {\n        width: `${tooltipWidth}px`\n      },\n      className: \"absolute left-0 top-full mt-1 p-2 bg-gray-800 text-white text-sm rounded shadow-lg z-10 max-w-[calc(50vw-2rem)] whitespace-normal\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this) : null;\n  const hintElement = hint ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-xs text-gray-500 mt-1\",\n    children: hint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this) : null;\n  const errorMessageElement = hasError ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-xs text-red-600 mt-1\",\n    children: customErrorMessage || errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: labelClass,\n      children: [label, requiredMark, infoIcon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), hintElement, errorMessageElement]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseQuestion, \"WUKUE2UsD94cHIsaEcSHqteE/Ww=\");\n_c = BaseQuestion;\nexport default BaseQuestion;\nvar _c;\n$RefreshReg$(_c, \"BaseQuestion\");","map":{"version":3,"names":["React","useState","useRef","useEffect","t","validateField","getErrorMessage","jsxDEV","_jsxDEV","validators","required","value","undefined","trim","Array","isArray","length","email","emailRegex","test","minLength","String","maxLength","pattern","regex","RegExp","min","num","Number","isNaN","max","minDate","Date","maxDate","numeric","isError","question","shouldValidate","language","hasError","errorMessage","validationRules","validation","validationResult","isValid","errorType","param","BaseQuestion","children","customErrorMessage","_s","id","label","info","hint","showTooltip","setShowTooltip","tooltipWidth","setTooltipWidth","tooltipRef","textMeasureRef","labelClass","current","span","document","createElement","style","visibility","position","whiteSpace","fontSize","padding","textContent","body","appendChild","textWidth","offsetWidth","removeChild","handleClickOutside","event","contains","target","addEventListener","removeEventListener","requiredMark","className","fileName","_jsxFileName","lineNumber","columnNumber","infoIcon","ref","onClick","width","hintElement","errorMessageElement","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/BaseQuestion.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { t } from '../../localization';\nimport { validateField, getErrorMessage } from '../../utils/validation';\n\nexport const validators = {\n  required: (value) => {\n    if (value === undefined || value === null) return false;\n    if (typeof value === 'string') return value.trim() !== '';\n    if (Array.isArray(value)) return value.length > 0;\n    return true;\n  },\n  email: (value) => {\n    if (!value) return true; \n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(value);\n  },\n  minLength: (value, minLength) => {\n    if (!value) return true; \n    return String(value).length >= minLength;\n  },\n  maxLength: (value, maxLength) => {\n    if (!value) return true;\n    return String(value).length <= maxLength;\n  },\n  pattern: (value, pattern) => {\n    if (!value) return true;\n    const regex = new RegExp(pattern);\n    return regex.test(value);\n  },\n  min: (value, min) => {\n    if (!value && value !== 0) return true;\n    const num = Number(value);\n    return !isNaN(num) && num >= min;\n  },\n  max: (value, max) => {\n    if (!value) return true;\n    return Number(value) <= max;\n  },\n  minDate: (value, minDate) => {\n    if (!value) return true;\n    return new Date(value) >= new Date(minDate);\n  },\n  maxDate: (value, maxDate) => {\n    if (!value) return true;\n    return new Date(value) <= new Date(maxDate);\n  },\n  numeric: (value) => {\n    if (!value) return true;\n    return !isNaN(Number(value));\n  }\n};\n\n/**\n * Determines if a question has validation errors\n * @param {Object} question - The question object containing validation rules\n * @param {*} value - The current value of the question\n * @param {boolean} shouldValidate - Whether validation should be performed (e.g., form submitted)\n * @returns {Object} - { hasError: boolean, errorMessage: string }\n */\nexport const isError = (question, value, shouldValidate = false, language) => {\n  if (!shouldValidate || !question) return { hasError: false, errorMessage: null };\n  \n  const validationRules = {\n    ...(question.validation || {}),\n    required: question.required\n  };\n  \n  const validationResult = validateField(value, validationRules);\n  \n  if (!validationResult.isValid) {\n    const errorMessage = getErrorMessage(validationResult.errorType, language, validationResult.param);\n    return { hasError: true, errorMessage };\n  }\n  \n  return { hasError: false, errorMessage: null };\n};\n\nconst BaseQuestion = ({ \n  question, \n  shouldValidate = false,\n  children, \n  language,\n  value,\n  customErrorMessage,\n}) => {\n  const { id, label, required, info, hint } = question;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipWidth, setTooltipWidth] = useState(0);\n  const tooltipRef = useRef(null);\n  const textMeasureRef = useRef(null);\n  \n  const { hasError, errorMessage } = isError(question, value, shouldValidate, language);\n  \n  const labelClass = hasError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n  \n  useEffect(() => {\n    if (showTooltip && info && textMeasureRef.current) {\n      const span = document.createElement('span');\n      span.style.visibility = 'hidden';\n      span.style.position = 'absolute';\n      span.style.whiteSpace = 'nowrap';\n      span.style.fontSize = '0.875rem'; \n      span.style.padding = '0.5rem'; \n      span.textContent = info;\n      document.body.appendChild(span);\n      \n      const textWidth = span.offsetWidth + 16;\n      document.body.removeChild(span);\n      \n      setTooltipWidth(textWidth);\n    }\n  }, [showTooltip, info]);\n  \n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\n        setShowTooltip(false);\n      }\n    };\n\n    if (showTooltip) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTooltip]);\n  \n  const requiredMark = required ? <span className=\"text-red-600 ml-1\">*</span> : null;\n  \n  const infoIcon = info ? (\n    <span className=\"ml-1 inline-block relative\" ref={tooltipRef}>\n      <span \n        className=\"w-5 h-5 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-pointer hover:bg-gray-300\"\n        onClick={() => setShowTooltip(!showTooltip)}\n        aria-label={showTooltip ? t('hideInfo', language) : t('showInfo', language)}\n      >\n        {t('infoIconLabel', language)}\n      </span>\n      {showTooltip && (\n        <span \n          ref={textMeasureRef}\n          style={{ width: `${tooltipWidth}px` }}\n          className=\"absolute left-0 top-full mt-1 p-2 bg-gray-800 text-white text-sm rounded shadow-lg z-10 max-w-[calc(50vw-2rem)] whitespace-normal\"\n        >\n          {info}\n        </span>\n      )}\n    </span>\n  ) : null;\n\n  const hintElement = hint ? (\n    <p className=\"text-xs text-gray-500 mt-1\">{hint}</p>\n  ) : null;\n\n  const errorMessageElement = hasError ? (\n    <p className=\"text-xs text-red-600 mt-1\">\n      {customErrorMessage || errorMessage}\n    </p>\n  ) : null;\n\n  return (\n    <div className=\"mb-8\" key={id}>\n      {label && (\n        <label className={labelClass}>\n          {label}\n          {requiredMark}\n          {infoIcon}\n        </label>\n      )}\n      <div className=\"mt-2\">\n        {children}\n      </div>\n      {hintElement}\n      {errorMessageElement}\n    </div>\n  );\n};\n\nexport default BaseQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}