{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  isError,\n  value,\n  onChange,\n  language\n}) => {\n  _s();\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n  const renderMarksAsColumns = () => {\n    const markEntries = Object.entries(question.marks);\n    const minMark = question.min;\n    const maxMark = question.max;\n    const range = maxMark - minMark;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full\",\n      style: {\n        position: 'relative',\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: markEntries.map(([markValue, label], index) => {\n        const positionPercent = (markValue - minMark) / range * 100;\n        let textAlignment = \"text-center\";\n        let transformStyle = '';\n        if (index === 0) {\n          textAlignment = \"text-left\";\n          transformStyle = 'translateX(0)';\n        } else if (index === markEntries.length - 1) {\n          textAlignment = \"text-right\";\n          transformStyle = 'translateX(-100%)';\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute ${textAlignment}`,\n          style: {\n            left: `${positionPercent}%`,\n            transform: transformStyle,\n            maxWidth: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-xs text-gray-600 break-words\",\n            children: markValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-xs text-gray-600 break-words\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, markValue, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-1 pb-4 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: question.min,\n        max: question.max,\n        step: question.step || 1,\n        value: currentValue,\n        onChange: handleSliderChange,\n        className: `w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`,\n        style: {\n          touchAction: 'manipulation'\n        },\n        \"aria-valuemin\": question.min,\n        \"aria-valuemax\": question.max,\n        \"aria-valuenow\": currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), renderMarksAsColumns()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderQuestion, \"tVvdVRJf1SXGV8aKwR0WcKNq9dc=\");\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","BaseQuestion","jsxDEV","_jsxDEV","SliderQuestion","question","isError","value","onChange","language","_s","currentValue","setCurrentValue","undefined","min","handleSliderChange","e","newValue","parseInt","target","id","renderMarksAsColumns","markEntries","Object","entries","marks","minMark","maxMark","max","range","className","style","position","width","overflow","children","map","markValue","label","index","positionPercent","textAlignment","transformStyle","length","left","transform","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","step","touchAction","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  isError, \n  value, \n  onChange, \n  language \n}) => {\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n  \n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  \n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n\n  const renderMarksAsColumns = () => {\n    const markEntries = Object.entries(question.marks);\n    const minMark = question.min;\n    const maxMark = question.max;\n    const range = maxMark - minMark;\n    \n    return (\n      <div className=\"relative w-full\" style={{ position: 'relative', width: '100%', overflow: 'hidden' }}>\n        {markEntries.map(([markValue, label], index) => {\n          const positionPercent = ((markValue - minMark) / range) * 100;\n          let textAlignment = \"text-center\";\n          let transformStyle = '';\n          if (index === 0) {\n            textAlignment = \"text-left\";\n            transformStyle = 'translateX(0)';\n          } else if (index === markEntries.length - 1) {\n            textAlignment = \"text-right\";\n            transformStyle = 'translateX(-100%)';\n          }\n\n          return (\n            <div\n              key={markValue}\n              className={`absolute ${textAlignment}`}\n              style={{ left: `${positionPercent}%`, transform: transformStyle, maxWidth: '100%' }}\n            >\n              <span className=\"block text-xs text-gray-600 break-words\">{markValue}</span>\n              <span className=\"block text-xs text-gray-600 break-words\">{label}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n  \n  return (\n    <BaseQuestion question={question} isError={isError} language={language}>\n      <div className=\"pt-1 pb-4 relative\">\n        <input\n          type=\"range\"\n          min={question.min}\n          max={question.max}\n          step={question.step || 1}\n          value={currentValue}\n          onChange={handleSliderChange}\n          className={`w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`}\n          style={{ touchAction: 'manipulation' }}\n          aria-valuemin={question.min}\n          aria-valuemax={question.max}\n          aria-valuenow={currentValue}\n        />\n        \n        {renderMarksAsColumns()}\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default SliderQuestion; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EACtBC,QAAQ;EACRC,OAAO;EACPC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,KAAK,KAAKM,SAAS,GAAGN,KAAK,GAAGF,QAAQ,CAACS,GAAG,CAAC;EAE5Ff,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,KAAKM,SAAS,EAAE;MACvBD,eAAe,CAACL,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMQ,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACZ,KAAK,EAAE,EAAE,CAAC;IAC7CK,eAAe,CAACK,QAAQ,CAAC;IACzBT,QAAQ,CAACH,QAAQ,CAACe,EAAE,EAAEH,QAAQ,CAAC;EACjC,CAAC;EAED,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACnB,QAAQ,CAACoB,KAAK,CAAC;IAClD,MAAMC,OAAO,GAAGrB,QAAQ,CAACS,GAAG;IAC5B,MAAMa,OAAO,GAAGtB,QAAQ,CAACuB,GAAG;IAC5B,MAAMC,KAAK,GAAGF,OAAO,GAAGD,OAAO;IAE/B,oBACEvB,OAAA;MAAK2B,SAAS,EAAC,iBAAiB;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAC,QAAA,EACjGb,WAAW,CAACc,GAAG,CAAC,CAAC,CAACC,SAAS,EAAEC,KAAK,CAAC,EAAEC,KAAK,KAAK;QAC9C,MAAMC,eAAe,GAAI,CAACH,SAAS,GAAGX,OAAO,IAAIG,KAAK,GAAI,GAAG;QAC7D,IAAIY,aAAa,GAAG,aAAa;QACjC,IAAIC,cAAc,GAAG,EAAE;QACvB,IAAIH,KAAK,KAAK,CAAC,EAAE;UACfE,aAAa,GAAG,WAAW;UAC3BC,cAAc,GAAG,eAAe;QAClC,CAAC,MAAM,IAAIH,KAAK,KAAKjB,WAAW,CAACqB,MAAM,GAAG,CAAC,EAAE;UAC3CF,aAAa,GAAG,YAAY;UAC5BC,cAAc,GAAG,mBAAmB;QACtC;QAEA,oBACEvC,OAAA;UAEE2B,SAAS,EAAE,YAAYW,aAAa,EAAG;UACvCV,KAAK,EAAE;YAAEa,IAAI,EAAE,GAAGJ,eAAe,GAAG;YAAEK,SAAS,EAAEH,cAAc;YAAEI,QAAQ,EAAE;UAAO,CAAE;UAAAX,QAAA,gBAEpFhC,OAAA;YAAM2B,SAAS,EAAC,yCAAyC;YAAAK,QAAA,EAAEE;UAAS;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5E/C,OAAA;YAAM2B,SAAS,EAAC,yCAAyC;YAAAK,QAAA,EAAEG;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GALnEb,SAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACE/C,OAAA,CAACF,YAAY;IAACI,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA,QAAS;IAAA0B,QAAA,eACrEhC,OAAA;MAAK2B,SAAS,EAAC,oBAAoB;MAAAK,QAAA,gBACjChC,OAAA;QACEgD,IAAI,EAAC,OAAO;QACZrC,GAAG,EAAET,QAAQ,CAACS,GAAI;QAClBc,GAAG,EAAEvB,QAAQ,CAACuB,GAAI;QAClBwB,IAAI,EAAE/C,QAAQ,CAAC+C,IAAI,IAAI,CAAE;QACzB7C,KAAK,EAAEI,YAAa;QACpBH,QAAQ,EAAEO,kBAAmB;QAC7Be,SAAS,EAAE,cAAcxB,OAAO,GAAG,gBAAgB,GAAG,iBAAiB,EAAG;QAC1EyB,KAAK,EAAE;UAAEsB,WAAW,EAAE;QAAe,CAAE;QACvC,iBAAehD,QAAQ,CAACS,GAAI;QAC5B,iBAAeT,QAAQ,CAACuB,GAAI;QAC5B,iBAAejB;MAAa;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EAED7B,oBAAoB,CAAC,CAAC;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAACxC,EAAA,CA7EIN,cAAc;AAAAkD,EAAA,GAAdlD,cAAc;AA+EpB,eAAeA,cAAc;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}