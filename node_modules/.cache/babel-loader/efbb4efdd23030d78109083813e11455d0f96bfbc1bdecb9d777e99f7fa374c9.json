{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionElement from './QuestionElement';\nimport { t } from '../../localization';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RankedQuestion = ({\n  question,\n  isError,\n  value = [],\n  onChange,\n  language,\n  isModified = false,\n  dragContextId\n}) => {\n  _s();\n  // Initialize ranking if needed\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n\n  // Update local ranking when value prop changes\n  useEffect(() => {\n    if (value.length) {\n      setRanking(value);\n    } else if (question.options.length && !value.length) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || sourceIndex === targetPosition - 1 && targetPosition > 0) {\n      return false;\n    }\n\n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n\n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    newRanking.splice(targetIndex, 0, movedItem);\n\n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n  const handleDragEnd = result => {\n    // If dropped outside the list, do nothing\n    if (!result.destination) {\n      return;\n    }\n\n    // Reorder the list\n    const items = Array.from(value || question.options);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    // Call the onChange handler to update the parent component\n    onChange(question.id, items, true);\n  };\n  return /*#__PURE__*/_jsxDEV(QuestionElement, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'} relative`,\n      onDragOver: e => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n\n        // Get container dimensions\n        const rect = e.currentTarget.getBoundingClientRect();\n        const mouseY = e.clientY;\n\n        // Get the first item's position if available\n        const firstItem = e.currentTarget.querySelector('li:first-child div');\n        const firstItemTop = firstItem ? firstItem.getBoundingClientRect().top : rect.top + 30;\n\n        // Check if we're at the top of the container (position 0)\n        if (mouseY < firstItemTop - 5) {\n          setDragPosition(0);\n          return;\n        }\n\n        // Check if we're at the bottom of the container\n        if (mouseY > rect.bottom - 20) {\n          setDragPosition(ranking.length);\n          return;\n        }\n      },\n      onDrop: e => {\n        e.preventDefault();\n        const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n        if (isNaN(sourceIndex)) return;\n        if (dragPosition >= 0) {\n          handleReordering(sourceIndex, dragPosition);\n        }\n\n        // Reset drag states\n        setDragPosition(-1);\n        setDraggedItem(-1);\n      },\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `droppable-${dragContextId}`,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            className: \"bg-gray-50 rounded-md p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"space-y-1\",\n              children: ranking.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [dragPosition === 0 && index === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-1 mb-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\",\n                  style: {\n                    zIndex: 10\n                  },\n                  onDragOver: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    e.dataTransfer.dropEffect = 'move';\n                    setDragPosition(0);\n                  },\n                  onDrop: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                    if (isNaN(sourceIndex)) return;\n                    handleReordering(sourceIndex, 0);\n                    setDragPosition(-1);\n                    setDraggedItem(-1);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: `${item.id || item.value}-${dragContextId}`,\n                  index: index,\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    className: `flex items-center p-2 bg-white border rounded cursor-move hover:bg-gray-50 ${dragPosition === index ? 'border-blue-400' : 'border-gray-200'} ${draggedItem === index ? 'opacity-50' : ''}`,\n                    draggable: true,\n                    onDragStart: e => {\n                      e.dataTransfer.setData('sourceIndex', index.toString());\n                      e.dataTransfer.effectAllowed = 'move';\n                      setDraggedItem(index);\n                    },\n                    onDragEnd: () => {\n                      setDragPosition(-1);\n                      setDraggedItem(-1);\n                    },\n                    onDragOver: e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      const rect = e.currentTarget.getBoundingClientRect();\n                      const mouseY = e.clientY;\n                      const midpoint = rect.top + rect.height / 2;\n\n                      // Determine if we should show indicator above or below\n                      if (mouseY < midpoint) {\n                        setDragPosition(index);\n                      } else {\n                        setDragPosition(index + 1);\n                      }\n                    },\n                    onDrop: e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                      if (isNaN(sourceIndex)) return;\n                      const rect = e.currentTarget.getBoundingClientRect();\n                      const mouseY = e.clientY;\n                      const midpoint = rect.top + rect.height / 2;\n\n                      // Determine drop position based on mouse position\n                      const targetPosition = mouseY < midpoint ? index : index + 1;\n\n                      // Perform the reordering\n                      handleReordering(sourceIndex, targetPosition);\n\n                      // Reset drag states\n                      setDragPosition(-1);\n                      setDraggedItem(-1);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-shrink-0 mr-2 text-gray-400\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"h-5 w-5\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M4 6h16M4 12h16M4 18h16\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 29\n                    }, this), isModified && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-2\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow\",\n                      children: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this)\n                }, `${item.id || item.value}-${dragContextId}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this), dragPosition === index + 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-1 mt-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\",\n                  style: {\n                    zIndex: 10\n                  },\n                  onDragOver: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    e.dataTransfer.dropEffect = 'move';\n                    setDragPosition(index + 1);\n                  },\n                  onDrop: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                    if (isNaN(sourceIndex)) return;\n                    handleReordering(sourceIndex, index + 1);\n                    setDragPosition(-1);\n                    setDraggedItem(-1);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this)]\n              }, `${item.id || item.value}-${dragContextId}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), ranking.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 italic\",\n        children: t('emptyRankedList', language) || 'Drag items here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(RankedQuestion, \"sCnRz0qu5P5vaAhzjmW9WgDGTzE=\");\n_c = RankedQuestion;\nexport default RankedQuestion;\nvar _c;\n$RefreshReg$(_c, \"RankedQuestion\");","map":{"version":3,"names":["React","useState","useEffect","QuestionElement","t","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","RankedQuestion","question","isError","value","onChange","language","isModified","dragContextId","_s","ranking","setRanking","length","options","dragPosition","setDragPosition","draggedItem","setDraggedItem","handleReordering","sourceIndex","targetPosition","newRanking","movedItem","splice","targetIndex","id","handleDragEnd","result","destination","items","Array","from","reorderedItem","source","index","children","className","onDragOver","e","preventDefault","dataTransfer","dropEffect","rect","currentTarget","getBoundingClientRect","mouseY","clientY","firstItem","querySelector","firstItemTop","top","bottom","onDrop","parseInt","getData","isNaN","onDragEnd","droppableId","provided","snapshot","droppableProps","ref","innerRef","map","item","style","zIndex","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","draggableId","draggableProps","dragHandleProps","draggable","onDragStart","setData","toString","effectAllowed","midpoint","height","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuestionElement from './QuestionElement';\nimport { t } from '../../localization';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst RankedQuestion = ({ \n  question, \n  isError, \n  value = [], \n  onChange, \n  language, \n  isModified = false, \n  dragContextId\n}) => {\n  // Initialize ranking if needed\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  \n  // Update local ranking when value prop changes\n  useEffect(() => {\n    if (value.length) {\n      setRanking(value);\n    } else if (question.options.length && !value.length) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || \n        (sourceIndex === targetPosition - 1 && targetPosition > 0)) {\n      return false;\n    }\n    \n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n    \n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    \n    newRanking.splice(targetIndex, 0, movedItem);\n    \n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n\n  const handleDragEnd = (result) => {\n    // If dropped outside the list, do nothing\n    if (!result.destination) {\n      return;\n    }\n    \n    // Reorder the list\n    const items = Array.from(value || question.options);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    \n    // Call the onChange handler to update the parent component\n    onChange(question.id, items, true);\n  };\n\n  return (\n    <QuestionElement question={question} isError={isError} language={language}>\n      <div \n        className={`p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'} relative`}\n        onDragOver={(e) => {\n          e.preventDefault();\n          e.dataTransfer.dropEffect = 'move';\n          \n          // Get container dimensions\n          const rect = e.currentTarget.getBoundingClientRect();\n          const mouseY = e.clientY;\n          \n          // Get the first item's position if available\n          const firstItem = e.currentTarget.querySelector('li:first-child div');\n          const firstItemTop = firstItem ? firstItem.getBoundingClientRect().top : rect.top + 30;\n          \n          // Check if we're at the top of the container (position 0)\n          if (mouseY < firstItemTop - 5) {\n            setDragPosition(0);\n            return;\n          }\n          \n          // Check if we're at the bottom of the container\n          if (mouseY > rect.bottom - 20) {\n            setDragPosition(ranking.length);\n            return;\n          }\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          \n          const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n          if (isNaN(sourceIndex)) return;\n          \n          if (dragPosition >= 0) {\n            handleReordering(sourceIndex, dragPosition);\n          }\n          \n          // Reset drag states\n          setDragPosition(-1);\n          setDraggedItem(-1);\n        }}\n      >\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId={`droppable-${dragContextId}`}>\n            {(provided, snapshot) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"bg-gray-50 rounded-md p-2\"\n              >\n                <ul className=\"space-y-1\">\n                  {ranking.map((item, index) => (\n                    <li key={`${item.id || item.value}-${dragContextId}`}>\n                      {/* Add indicator line above first item */}\n                      {dragPosition === 0 && index === 0 && (\n                        <div \n                          className=\"h-1 mb-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\"\n                          style={{ zIndex: 10 }}\n                          onDragOver={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            e.dataTransfer.dropEffect = 'move';\n                            setDragPosition(0);\n                          }}\n                          onDrop={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            \n                            const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                            if (isNaN(sourceIndex)) return;\n                            \n                            handleReordering(sourceIndex, 0);\n                            setDragPosition(-1);\n                            setDraggedItem(-1);\n                          }}\n                        ></div>\n                      )}\n\n                      <Draggable \n                        key={`${item.id || item.value}-${dragContextId}`} \n                        draggableId={`${item.id || item.value}-${dragContextId}`} \n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            className={`flex items-center p-2 bg-white border rounded cursor-move hover:bg-gray-50 ${\n                              dragPosition === index ? 'border-blue-400' : 'border-gray-200'\n                            } ${draggedItem === index ? 'opacity-50' : ''}`}\n                            draggable\n                            onDragStart={(e) => {\n                              e.dataTransfer.setData('sourceIndex', index.toString());\n                              e.dataTransfer.effectAllowed = 'move';\n                              setDraggedItem(index);\n                            }}\n                            onDragEnd={() => {\n                              setDragPosition(-1);\n                              setDraggedItem(-1);\n                            }}\n                            onDragOver={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              \n                              const rect = e.currentTarget.getBoundingClientRect();\n                              const mouseY = e.clientY;\n                              const midpoint = rect.top + rect.height / 2;\n                              \n                              // Determine if we should show indicator above or below\n                              if (mouseY < midpoint) {\n                                setDragPosition(index);\n                              } else {\n                                setDragPosition(index + 1);\n                              }\n                            }}\n                            onDrop={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              \n                              const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                              if (isNaN(sourceIndex)) return;\n                              \n                              const rect = e.currentTarget.getBoundingClientRect();\n                              const mouseY = e.clientY;\n                              const midpoint = rect.top + rect.height / 2;\n                              \n                              // Determine drop position based on mouse position\n                              const targetPosition = mouseY < midpoint ? index : index + 1;\n                              \n                              // Perform the reordering\n                              handleReordering(sourceIndex, targetPosition);\n                              \n                              // Reset drag states\n                              setDragPosition(-1);\n                              setDraggedItem(-1);\n                            }}\n                          >\n                            <div className=\"flex-shrink-0 mr-2 text-gray-400\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                              </svg>\n                            </div>\n                            \n                            {isModified && (\n                              <div className=\"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-2\">\n                                {index + 1}\n                              </div>\n                            )}\n                            \n                            <div className=\"flex-grow\">{item}</div>\n                          </div>\n                        )}\n                      </Draggable>\n                      \n                      {/* Insert indicator line below item */}\n                      {dragPosition === index + 1 && (\n                        <div \n                          className=\"h-1 mt-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\"\n                          style={{ zIndex: 10 }}\n                          onDragOver={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            e.dataTransfer.dropEffect = 'move';\n                            setDragPosition(index + 1);\n                          }}\n                          onDrop={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            \n                            const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                            if (isNaN(sourceIndex)) return;\n                            \n                            handleReordering(sourceIndex, index + 1);\n                            setDragPosition(-1);\n                            setDraggedItem(-1);\n                          }}\n                        ></div>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        \n        {/* Add a special case for empty lists */}\n        {ranking.length === 0 && (\n          <div className=\"p-4 text-center text-gray-500 italic\">\n            {t('emptyRankedList', language) || 'Drag items here'}\n          </div>\n        )}\n      </div>\n    </QuestionElement>\n  );\n};\n\nexport default RankedQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}