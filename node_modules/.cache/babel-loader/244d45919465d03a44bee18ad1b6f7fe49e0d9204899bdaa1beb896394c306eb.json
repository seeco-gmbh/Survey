{"ast":null,"code":"import TextQuestion from './TextQuestion';\nimport TextareaQuestion from './TextareaQuestion';\nimport SelectQuestion from './SelectQuestion';\nimport MultiselectQuestion from './MultiselectQuestion';\nimport SliderQuestion from './SliderQuestion';\nimport NumberQuestion from './NumericQuestion';\nimport DateQuestion from './DateQuestion';\nimport RankedQuestion from './RankedQuestion';\nimport QuestionElement from './BaseQuestion';\nexport { TextQuestion, TextareaQuestion, SelectQuestion, MultiselectQuestion, SliderQuestion, NumberQuestion, DateQuestion, RankedQuestion, QuestionElement };\n\n// Factory function to get the right component by type\nexport const getQuestionComponentByType = type => {\n  switch (type) {\n    case 'text':\n      return TextQuestion;\n    case 'textarea':\n      return TextareaQuestion;\n    case 'select':\n      return SelectQuestion;\n    case 'multiselect':\n      return MultiselectQuestion;\n    case 'range':\n      return SliderQuestion;\n    case 'slider':\n      return SliderQuestion;\n    case 'number':\n      return NumberQuestion;\n    case 'date':\n      return DateQuestion;\n    case 'ranked':\n      return RankedQuestion;\n    default:\n      return null;\n  }\n};","map":{"version":3,"names":["TextQuestion","TextareaQuestion","SelectQuestion","MultiselectQuestion","SliderQuestion","NumberQuestion","DateQuestion","RankedQuestion","QuestionElement","getQuestionComponentByType","type"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/index.js"],"sourcesContent":["import TextQuestion from './TextQuestion';\nimport TextareaQuestion from './TextareaQuestion';\nimport SelectQuestion from './SelectQuestion';\nimport MultiselectQuestion from './MultiselectQuestion';\nimport SliderQuestion from './SliderQuestion';\nimport NumberQuestion from './NumericQuestion';\nimport DateQuestion from './DateQuestion';\nimport RankedQuestion from './RankedQuestion';\nimport QuestionElement from './BaseQuestion';\n\nexport {\n  TextQuestion,\n  TextareaQuestion,\n  SelectQuestion,\n  MultiselectQuestion,\n  SliderQuestion,\n  NumberQuestion,\n  DateQuestion,\n  RankedQuestion,\n  QuestionElement\n};\n\n// Factory function to get the right component by type\nexport const getQuestionComponentByType = (type) => {\n  switch (type) {\n    case 'text': return TextQuestion;\n    case 'textarea': return TextareaQuestion;\n    case 'select': return SelectQuestion;\n    case 'multiselect': return MultiselectQuestion;\n    case 'range': return SliderQuestion;\n    case 'slider': return SliderQuestion;\n    case 'number': return NumberQuestion;\n    case 'date': return DateQuestion;\n    case 'ranked': return RankedQuestion;\n    default: return null;\n  }\n}; "],"mappings":"AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,gBAAgB;AAE5C,SACER,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdC,mBAAmB,EACnBC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,cAAc,EACdC,eAAe;;AAGjB;AACA,OAAO,MAAMC,0BAA0B,GAAIC,IAAI,IAAK;EAClD,QAAQA,IAAI;IACV,KAAK,MAAM;MAAE,OAAOV,YAAY;IAChC,KAAK,UAAU;MAAE,OAAOC,gBAAgB;IACxC,KAAK,QAAQ;MAAE,OAAOC,cAAc;IACpC,KAAK,aAAa;MAAE,OAAOC,mBAAmB;IAC9C,KAAK,OAAO;MAAE,OAAOC,cAAc;IACnC,KAAK,QAAQ;MAAE,OAAOA,cAAc;IACpC,KAAK,QAAQ;MAAE,OAAOC,cAAc;IACpC,KAAK,MAAM;MAAE,OAAOC,YAAY;IAChC,KAAK,QAAQ;MAAE,OAAOC,cAAc;IACpC;MAAS,OAAO,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}