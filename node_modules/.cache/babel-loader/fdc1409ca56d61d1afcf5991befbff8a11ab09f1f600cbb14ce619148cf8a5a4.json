{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport QuestionElement from './BaseQuestion';\nimport { t } from '../../localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragIndicator = ({\n  position,\n  index,\n  isDraggingInComponent,\n  setDragPosition,\n  handleReordering\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"h-1 my-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\",\n  style: {\n    zIndex: 10\n  },\n  onDragOver: e => {\n    if (!isDraggingInComponent) return;\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    setDragPosition(position);\n  },\n  onDrop: e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDraggingInComponent) return;\n    const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n    if (isNaN(sourceIndex)) return;\n    handleReordering(sourceIndex, position);\n    setDragPosition(-1);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = DragIndicator;\nconst RankedQuestion = ({\n  question,\n  isError,\n  value = [],\n  onChange,\n  language,\n  isModified = false\n}) => {\n  _s();\n  const questionId = useRef(`ranked-question-${question.id}`);\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  const containerRef = useRef(null);\n  const [isDraggingInComponent, setIsDraggingInComponent] = useState(false);\n  useEffect(() => {\n    if (value.length && JSON.stringify(value) !== JSON.stringify(ranking)) {\n      setRanking(value);\n    } else if (question.options.length && !value.length && JSON.stringify(question.options) !== JSON.stringify(ranking)) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options, ranking]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || sourceIndex === targetPosition - 1 && targetPosition > 0) {\n      return false;\n    }\n\n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n\n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    newRanking.splice(targetIndex, 0, movedItem);\n\n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n\n  // Reset all drag states\n  const resetDragStates = () => {\n    setDragPosition(-1);\n    setDraggedItem(-1);\n    setIsDraggingInComponent(false);\n  };\n\n  // Add event listeners to document to prevent dragging outside\n  useEffect(() => {\n    const handleDragOver = e => {\n      // Only handle events for our component's dragged items\n      if (!isDraggingInComponent) return;\n\n      // Check if the drag is outside our container\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'none'; // Indicate dropping is not allowed\n      }\n    };\n    document.addEventListener('dragover', handleDragOver);\n    return () => {\n      document.removeEventListener('dragover', handleDragOver);\n    };\n  }, [isDraggingInComponent]);\n  return /*#__PURE__*/_jsxDEV(QuestionElement, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: `p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'} relative`,\n      onDragOver: e => {\n        // Only allow drops if we're dragging within this component\n        if (!isDraggingInComponent) return;\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n\n        // Get container dimensions\n        const rect = e.currentTarget.getBoundingClientRect();\n        const mouseY = e.clientY;\n\n        // Get the first item's position if available\n        const firstItem = e.currentTarget.querySelector('li:first-child div');\n        const firstItemTop = firstItem ? firstItem.getBoundingClientRect().top : rect.top + 30;\n\n        // Check if we're at the top of the container (position 0)\n        if (mouseY < firstItemTop - 5) {\n          setDragPosition(0);\n          return;\n        }\n\n        // Check if we're at the bottom of the container\n        if (mouseY > rect.bottom - 20) {\n          setDragPosition(ranking.length);\n          return;\n        }\n      },\n      onDrop: e => {\n        e.preventDefault();\n\n        // Only process drops from our own component\n        if (!isDraggingInComponent) return;\n        const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n        if (isNaN(sourceIndex)) return;\n        if (dragPosition >= 0) {\n          handleReordering(sourceIndex, dragPosition);\n        }\n\n        // Reset drag states\n        resetDragStates();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1\",\n        children: ranking.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [dragPosition === 0 && index === 0 && /*#__PURE__*/_jsxDEV(DragIndicator, {\n            position: 0,\n            index: index,\n            isDraggingInComponent: isDraggingInComponent,\n            setDragPosition: setDragPosition,\n            handleReordering: (sourceIndex, position) => {\n              handleReordering(sourceIndex, position);\n              resetDragStates();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center p-2 bg-white border rounded cursor-move hover:bg-gray-50 ${dragPosition === index ? 'border-blue-400' : 'border-gray-200'} ${draggedItem === index ? 'opacity-50' : ''}`,\n            draggable: true,\n            onDragStart: e => {\n              // Store both the index and the question ID\n              e.dataTransfer.setData('sourceIndex', index.toString());\n              e.dataTransfer.setData('questionId', questionId.current);\n              e.dataTransfer.effectAllowed = 'move';\n\n              // Set drag image for better visual feedback\n              e.dataTransfer.setDragImage(e.currentTarget, e.currentTarget.offsetWidth / 2, e.currentTarget.offsetHeight / 2);\n\n              // Mark that we're dragging within this component\n              setIsDraggingInComponent(true);\n              setDraggedItem(index);\n            },\n            onDragEnd: resetDragStates,\n            onDragOver: e => {\n              // Only allow drops if we're dragging within this component\n              if (!isDraggingInComponent) return;\n              e.preventDefault();\n              e.stopPropagation();\n              const rect = e.currentTarget.getBoundingClientRect();\n              const mouseY = e.clientY;\n              const midpoint = rect.top + rect.height / 2;\n\n              // Determine if we should show indicator above or below\n              setDragPosition(mouseY < midpoint ? index : index + 1);\n            },\n            onDrop: e => {\n              e.preventDefault();\n              e.stopPropagation();\n\n              // Only process drops from our own component\n              if (!isDraggingInComponent) return;\n              const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n              if (isNaN(sourceIndex)) return;\n              const rect = e.currentTarget.getBoundingClientRect();\n              const mouseY = e.clientY;\n              const midpoint = rect.top + rect.height / 2;\n\n              // Determine drop position based on mouse position\n              const targetPosition = mouseY < midpoint ? index : index + 1;\n\n              // Perform the reordering\n              handleReordering(sourceIndex, targetPosition);\n\n              // Reset drag states\n              resetDragStates();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 mr-2 text-gray-400\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4 6h16M4 12h16M4 18h16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), isModified && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-2\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), dragPosition === index + 1 && /*#__PURE__*/_jsxDEV(DragIndicator, {\n            position: index + 1,\n            index: index,\n            isDraggingInComponent: isDraggingInComponent,\n            setDragPosition: setDragPosition,\n            handleReordering: (sourceIndex, position) => {\n              handleReordering(sourceIndex, position);\n              resetDragStates();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this)]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), ranking.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 italic\",\n        children: t('emptyRankedList', language) || 'Drag items here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(RankedQuestion, \"XsIHFy5vGRmuULxDVVVzFILCvwA=\");\n_c2 = RankedQuestion;\nexport default RankedQuestion;\nvar _c, _c2;\n$RefreshReg$(_c, \"DragIndicator\");\n$RefreshReg$(_c2, \"RankedQuestion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","QuestionElement","t","jsxDEV","_jsxDEV","DragIndicator","position","index","isDraggingInComponent","setDragPosition","handleReordering","className","style","zIndex","onDragOver","e","preventDefault","stopPropagation","dataTransfer","dropEffect","onDrop","sourceIndex","parseInt","getData","isNaN","fileName","_jsxFileName","lineNumber","columnNumber","_c","RankedQuestion","question","isError","value","onChange","language","isModified","_s","questionId","id","ranking","setRanking","length","options","dragPosition","draggedItem","setDraggedItem","containerRef","setIsDraggingInComponent","JSON","stringify","targetPosition","newRanking","movedItem","splice","targetIndex","resetDragStates","handleDragOver","current","contains","target","document","addEventListener","removeEventListener","children","ref","rect","currentTarget","getBoundingClientRect","mouseY","clientY","firstItem","querySelector","firstItemTop","top","bottom","map","item","draggable","onDragStart","setData","toString","effectAllowed","setDragImage","offsetWidth","offsetHeight","onDragEnd","midpoint","height","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c2","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport QuestionElement from './BaseQuestion';\nimport { t } from '../../localization';\n\nconst DragIndicator = ({ position, index, isDraggingInComponent, setDragPosition, handleReordering }) => (\n  <div \n    className=\"h-1 my-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\"\n    style={{ zIndex: 10 }}\n    onDragOver={(e) => {\n      if (!isDraggingInComponent) return;\n      \n      e.preventDefault();\n      e.stopPropagation();\n      e.dataTransfer.dropEffect = 'move';\n      setDragPosition(position);\n    }}\n    onDrop={(e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      if (!isDraggingInComponent) return;\n      \n      const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n      if (isNaN(sourceIndex)) return;\n      \n      handleReordering(sourceIndex, position);\n      setDragPosition(-1);\n    }}\n  />\n);\n\nconst RankedQuestion = ({ \n  question, \n  isError, \n  value = [], \n  onChange, \n  language, \n  isModified = false\n}) => {\n  const questionId = useRef(`ranked-question-${question.id}`);\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  const containerRef = useRef(null);\n  const [isDraggingInComponent, setIsDraggingInComponent] = useState(false);\n  \n  useEffect(() => {\n    if (value.length && JSON.stringify(value) !== JSON.stringify(ranking)) {\n      setRanking(value);\n    } else if (question.options.length && !value.length && JSON.stringify(question.options) !== JSON.stringify(ranking)) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options, ranking]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || \n        (sourceIndex === targetPosition - 1 && targetPosition > 0)) {\n      return false;\n    }\n    \n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n    \n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    \n    newRanking.splice(targetIndex, 0, movedItem);\n    \n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n\n  // Reset all drag states\n  const resetDragStates = () => {\n    setDragPosition(-1);\n    setDraggedItem(-1);\n    setIsDraggingInComponent(false);\n  };\n\n  // Add event listeners to document to prevent dragging outside\n  useEffect(() => {\n    const handleDragOver = (e) => {\n      // Only handle events for our component's dragged items\n      if (!isDraggingInComponent) return;\n      \n      // Check if the drag is outside our container\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'none'; // Indicate dropping is not allowed\n      }\n    };\n    \n    document.addEventListener('dragover', handleDragOver);\n    return () => {\n      document.removeEventListener('dragover', handleDragOver);\n    };\n  }, [isDraggingInComponent]);\n\n  return (\n    <QuestionElement question={question} isError={isError} language={language}>\n      <div \n        ref={containerRef}\n        className={`p-3 border rounded ${isError ? 'border-red-500' : 'border-gray-300'} relative`}\n        onDragOver={(e) => {\n          // Only allow drops if we're dragging within this component\n          if (!isDraggingInComponent) return;\n          \n          e.preventDefault();\n          e.dataTransfer.dropEffect = 'move';\n          \n          // Get container dimensions\n          const rect = e.currentTarget.getBoundingClientRect();\n          const mouseY = e.clientY;\n          \n          // Get the first item's position if available\n          const firstItem = e.currentTarget.querySelector('li:first-child div');\n          const firstItemTop = firstItem ? firstItem.getBoundingClientRect().top : rect.top + 30;\n          \n          // Check if we're at the top of the container (position 0)\n          if (mouseY < firstItemTop - 5) {\n            setDragPosition(0);\n            return;\n          }\n          \n          // Check if we're at the bottom of the container\n          if (mouseY > rect.bottom - 20) {\n            setDragPosition(ranking.length);\n            return;\n          }\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          \n          // Only process drops from our own component\n          if (!isDraggingInComponent) return;\n          \n          const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n          if (isNaN(sourceIndex)) return;\n          \n          if (dragPosition >= 0) {\n            handleReordering(sourceIndex, dragPosition);\n          }\n          \n          // Reset drag states\n          resetDragStates();\n        }}\n      >\n        <ul className=\"space-y-1\">\n          {ranking.map((item, index) => (\n            <li key={item}>\n              {/* Add indicator line above first item */}\n              {dragPosition === 0 && index === 0 && (\n                <DragIndicator \n                  position={0}\n                  index={index}\n                  isDraggingInComponent={isDraggingInComponent}\n                  setDragPosition={setDragPosition}\n                  handleReordering={(sourceIndex, position) => {\n                    handleReordering(sourceIndex, position);\n                    resetDragStates();\n                  }}\n                />\n              )}\n\n              <div \n                className={`flex items-center p-2 bg-white border rounded cursor-move hover:bg-gray-50 ${\n                  dragPosition === index ? 'border-blue-400' : 'border-gray-200'\n                } ${draggedItem === index ? 'opacity-50' : ''}`}\n                draggable\n                onDragStart={(e) => {\n                  // Store both the index and the question ID\n                  e.dataTransfer.setData('sourceIndex', index.toString());\n                  e.dataTransfer.setData('questionId', questionId.current);\n                  e.dataTransfer.effectAllowed = 'move';\n                  \n                  // Set drag image for better visual feedback\n                  e.dataTransfer.setDragImage(\n                    e.currentTarget, \n                    e.currentTarget.offsetWidth / 2, \n                    e.currentTarget.offsetHeight / 2\n                  );\n                  \n                  // Mark that we're dragging within this component\n                  setIsDraggingInComponent(true);\n                  setDraggedItem(index);\n                }}\n                onDragEnd={resetDragStates}\n                onDragOver={(e) => {\n                  // Only allow drops if we're dragging within this component\n                  if (!isDraggingInComponent) return;\n                  \n                  e.preventDefault();\n                  e.stopPropagation();\n                  \n                  const rect = e.currentTarget.getBoundingClientRect();\n                  const mouseY = e.clientY;\n                  const midpoint = rect.top + rect.height / 2;\n                  \n                  // Determine if we should show indicator above or below\n                  setDragPosition(mouseY < midpoint ? index : index + 1);\n                }}\n                onDrop={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  \n                  // Only process drops from our own component\n                  if (!isDraggingInComponent) return;\n                  \n                  const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                  if (isNaN(sourceIndex)) return;\n                  \n                  const rect = e.currentTarget.getBoundingClientRect();\n                  const mouseY = e.clientY;\n                  const midpoint = rect.top + rect.height / 2;\n                  \n                  // Determine drop position based on mouse position\n                  const targetPosition = mouseY < midpoint ? index : index + 1;\n                  \n                  // Perform the reordering\n                  handleReordering(sourceIndex, targetPosition);\n                  \n                  // Reset drag states\n                  resetDragStates();\n                }}\n              >\n                <div className=\"flex-shrink-0 mr-2 text-gray-400\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                  </svg>\n                </div>\n                \n                {isModified && (\n                  <div className=\"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-2\">\n                    {index + 1}\n                  </div>\n                )}\n                \n                <div className=\"flex-grow\">{item}</div>\n              </div>\n              \n              {/* Insert indicator line below item */}\n              {dragPosition === index + 1 && (\n                <DragIndicator \n                  position={index + 1}\n                  index={index}\n                  isDraggingInComponent={isDraggingInComponent}\n                  setDragPosition={setDragPosition}\n                  handleReordering={(sourceIndex, position) => {\n                    handleReordering(sourceIndex, position);\n                    resetDragStates();\n                  }}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n        \n        {/* Add a special case for empty lists */}\n        {ranking.length === 0 && (\n          <div className=\"p-4 text-center text-gray-500 italic\">\n            {t('emptyRankedList', language) || 'Drag items here'}\n          </div>\n        )}\n      </div>\n    </QuestionElement>\n  );\n};\n\nexport default RankedQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}