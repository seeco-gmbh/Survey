{"ast":null,"code":"/**\n * Utility functions and constants for standardized error styling across question components\n */\n\n/**\n * Returns the appropriate input class based on error state\n * @param {boolean} isError - Whether the input has an error\n * @returns {string} - The CSS class string\n */\nexport const getInputClass = isError => {\n  return isError ? \"w-full p-3 border border-red-500 rounded focus:outline-none focus:ring-2 focus:ring-red-200\" : \"w-full p-3 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-200\";\n};\n\n/**\n * Returns the appropriate container class based on error state\n * @param {boolean} isError - Whether the container has an error\n * @param {string} baseClass - Base class to apply\n * @returns {string} - The CSS class string\n */\nexport const getContainerClass = (isError, baseClass = \"\") => {\n  return `${baseClass} border rounded ${isError ? 'border-red-500' : 'border-gray-300'}`;\n};\n\n/**\n * Returns the appropriate text class based on error state\n * @param {boolean} isError - Whether the text has an error\n * @param {string} baseClass - Base class to apply\n * @returns {string} - The CSS class string\n */\nexport const getTextClass = (isError, baseClass = \"\") => {\n  return `${baseClass} ${isError ? 'text-red-600' : ''}`;\n};\n\n/**\n * CSS for styling range input thumbs in error state\n */\nexport const errorThumbStyles = `\n  input[type=range].error-thumb::-webkit-slider-thumb {\n    background-color: #ef4444 !important;\n    border-color: #ef4444 !important;\n  }\n  \n  input[type=range].error-thumb::-moz-range-thumb {\n    background-color: #ef4444 !important;\n    border-color: #ef4444 !important;\n  }\n`;","map":{"version":3,"names":["getInputClass","isError","getContainerClass","baseClass","getTextClass","errorThumbStyles"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/utils/errorStyles.js"],"sourcesContent":["/**\n * Utility functions and constants for standardized error styling across question components\n */\n\n/**\n * Returns the appropriate input class based on error state\n * @param {boolean} isError - Whether the input has an error\n * @returns {string} - The CSS class string\n */\nexport const getInputClass = (isError) => {\n  return isError \n    ? \"w-full p-3 border border-red-500 rounded focus:outline-none focus:ring-2 focus:ring-red-200\" \n    : \"w-full p-3 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-200\";\n};\n\n/**\n * Returns the appropriate container class based on error state\n * @param {boolean} isError - Whether the container has an error\n * @param {string} baseClass - Base class to apply\n * @returns {string} - The CSS class string\n */\nexport const getContainerClass = (isError, baseClass = \"\") => {\n  return `${baseClass} border rounded ${isError ? 'border-red-500' : 'border-gray-300'}`;\n};\n\n/**\n * Returns the appropriate text class based on error state\n * @param {boolean} isError - Whether the text has an error\n * @param {string} baseClass - Base class to apply\n * @returns {string} - The CSS class string\n */\nexport const getTextClass = (isError, baseClass = \"\") => {\n  return `${baseClass} ${isError ? 'text-red-600' : ''}`;\n};\n\n/**\n * CSS for styling range input thumbs in error state\n */\nexport const errorThumbStyles = `\n  input[type=range].error-thumb::-webkit-slider-thumb {\n    background-color: #ef4444 !important;\n    border-color: #ef4444 !important;\n  }\n  \n  input[type=range].error-thumb::-moz-range-thumb {\n    background-color: #ef4444 !important;\n    border-color: #ef4444 !important;\n  }\n`; "],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAIC,OAAO,IAAK;EACxC,OAAOA,OAAO,GACV,6FAA6F,GAC7F,+FAA+F;AACrG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACD,OAAO,EAAEE,SAAS,GAAG,EAAE,KAAK;EAC5D,OAAO,GAAGA,SAAS,mBAAmBF,OAAO,GAAG,gBAAgB,GAAG,iBAAiB,EAAE;AACxF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,YAAY,GAAGA,CAACH,OAAO,EAAEE,SAAS,GAAG,EAAE,KAAK;EACvD,OAAO,GAAGA,SAAS,IAAIF,OAAO,GAAG,cAAc,GAAG,EAAE,EAAE;AACxD,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,gBAAgB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}