{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/BaseQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { t } from '../../localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const validators = {\n  required: value => {\n    if (value === undefined || value === null) return false;\n    if (typeof value === 'string') return value.trim() !== '';\n    if (Array.isArray(value)) return value.length > 0;\n    return true;\n  },\n  email: value => {\n    if (!value) return true;\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(value);\n  },\n  minLength: (value, minLength) => {\n    if (!value) return true;\n    return String(value).length >= minLength;\n  },\n  maxLength: (value, maxLength) => {\n    if (!value) return true;\n    return String(value).length <= maxLength;\n  },\n  pattern: (value, pattern) => {\n    if (!value) return true;\n    const regex = new RegExp(pattern);\n    return regex.test(value);\n  },\n  min: (value, min) => {\n    if (!value && value !== 0) return true;\n    const num = Number(value);\n    return !isNaN(num) && num >= min;\n  },\n  max: (value, max) => {\n    if (!value) return true;\n    return Number(value) <= max;\n  }\n};\nexport const getErrorMessage = (validationType, language, params) => {\n  switch (validationType) {\n    case 'required':\n      return t('validationRequired', language);\n    case 'email':\n      return t('validationEmail', language) || 'Please enter a valid email address';\n    case 'minLength':\n      return t('validationMinLength', language, {\n        length: params\n      }).replace('{length}', params);\n    case 'maxLength':\n      return t('validationMaxLength', language, {\n        length: params\n      }).replace('{length}', params);\n    case 'pattern':\n      return t('validationPattern', language);\n    case 'min':\n      return t('validationMin', language, {\n        min: params\n      }).replace('{min}', params);\n    case 'max':\n      return t('validationMax', language, {\n        max: params\n      }).replace('{max}', params);\n    default:\n      return t('validationGeneric', language) || 'Invalid input';\n  }\n};\nexport const validateField = (value, validationRules = {}) => {\n  if (!validationRules) return {\n    isValid: true\n  };\n  for (const [rule, param] of Object.entries(validationRules)) {\n    if (rule === 'required' && param && !validators.required(value)) {\n      return {\n        isValid: false,\n        errorType: 'required'\n      };\n    }\n    if (rule === 'email' && param && !validators.email(value)) {\n      return {\n        isValid: false,\n        errorType: 'email'\n      };\n    }\n    if (rule === 'minLength' && !validators.minLength(value, param)) {\n      return {\n        isValid: false,\n        errorType: 'minLength',\n        param\n      };\n    }\n    if (rule === 'maxLength' && !validators.maxLength(value, param)) {\n      return {\n        isValid: false,\n        errorType: 'maxLength',\n        param\n      };\n    }\n    if (rule === 'pattern' && !validators.pattern(value, param)) {\n      return {\n        isValid: false,\n        errorType: 'pattern'\n      };\n    }\n    if (rule === 'min' && !validators.min(value, param)) {\n      return {\n        isValid: false,\n        errorType: 'min',\n        param\n      };\n    }\n    if (rule === 'max' && !validators.max(value, param)) {\n      return {\n        isValid: false,\n        errorType: 'max',\n        param\n      };\n    }\n  }\n  return {\n    isValid: true\n  };\n};\nconst BaseQuestion = ({\n  question,\n  isError,\n  children,\n  language,\n  value,\n  validationMessage\n}) => {\n  _s();\n  const {\n    id,\n    label,\n    required,\n    info,\n    hint,\n    validation\n  } = question;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipWidth, setTooltipWidth] = useState(0);\n  const tooltipRef = useRef(null);\n  const textMeasureRef = useRef(null);\n  const validationRules = {\n    ...(validation || {}),\n    required: required\n  };\n  const validationResult = value !== undefined ? validateField(value, validationRules) : {\n    isValid: true\n  };\n  const showError = isError && !validationResult.isValid;\n  const labelClass = showError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n  useEffect(() => {\n    if (showTooltip && info && textMeasureRef.current) {\n      const span = document.createElement('span');\n      span.style.visibility = 'hidden';\n      span.style.position = 'absolute';\n      span.style.whiteSpace = 'nowrap';\n      span.style.fontSize = '0.875rem';\n      span.style.padding = '0.5rem';\n      span.textContent = info;\n      document.body.appendChild(span);\n      const textWidth = span.offsetWidth + 16; // Add 16px padding\n      document.body.removeChild(span);\n\n      // Set width with max constraint handled by CSS\n      setTooltipWidth(textWidth);\n    }\n  }, [showTooltip, info]);\n\n  // Handle clicks outside the tooltip\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\n        setShowTooltip(false);\n      }\n    };\n    if (showTooltip) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTooltip]);\n\n  // Required field asterisk\n  const requiredMark = required ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-red-600 ml-1\",\n    children: \"*\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 35\n  }, this) : null;\n  const infoIcon = info ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"ml-1 inline-block relative\",\n    ref: tooltipRef,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"w-5 h-5 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-pointer hover:bg-gray-300\",\n      onClick: () => setShowTooltip(!showTooltip),\n      \"aria-label\": showTooltip ? t('hideInfo', language) : t('showInfo', language),\n      children: t('infoIconLabel', language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: textMeasureRef,\n      style: {\n        width: `${tooltipWidth}px`\n      },\n      className: \"absolute left-0 top-full mt-1 p-2 bg-gray-800 text-white text-sm rounded shadow-lg z-10 max-w-[calc(50vw-2rem)] whitespace-normal\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this) : null;\n\n  // Hint element to be rendered below each question\n  const hintElement = hint ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-xs text-gray-500 mt-1\",\n    children: hint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this) : null;\n\n  // Error message\n  const errorMessage = showError ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-xs text-red-600 mt-1\",\n    children: validationMessage || getErrorMessage(validationResult.errorType, language, validationResult.param)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: labelClass,\n      children: [label, requiredMark, infoIcon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), hintElement, errorMessage]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseQuestion, \"WUKUE2UsD94cHIsaEcSHqteE/Ww=\");\n_c = BaseQuestion;\nexport default BaseQuestion;\nvar _c;\n$RefreshReg$(_c, \"BaseQuestion\");","map":{"version":3,"names":["React","useState","useRef","useEffect","t","jsxDEV","_jsxDEV","validators","required","value","undefined","trim","Array","isArray","length","email","emailRegex","test","minLength","String","maxLength","pattern","regex","RegExp","min","num","Number","isNaN","max","getErrorMessage","validationType","language","params","replace","validateField","validationRules","isValid","rule","param","Object","entries","errorType","BaseQuestion","question","isError","children","validationMessage","_s","id","label","info","hint","validation","showTooltip","setShowTooltip","tooltipWidth","setTooltipWidth","tooltipRef","textMeasureRef","validationResult","showError","labelClass","current","span","document","createElement","style","visibility","position","whiteSpace","fontSize","padding","textContent","body","appendChild","textWidth","offsetWidth","removeChild","handleClickOutside","event","contains","target","addEventListener","removeEventListener","requiredMark","className","fileName","_jsxFileName","lineNumber","columnNumber","infoIcon","ref","onClick","width","hintElement","errorMessage","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/BaseQuestion.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { t } from '../../localization';\n\n\nexport const validators = {\n  required: (value) => {\n    if (value === undefined || value === null) return false;\n    if (typeof value === 'string') return value.trim() !== '';\n    if (Array.isArray(value)) return value.length > 0;\n    return true;\n  },\n  email: (value) => {\n    if (!value) return true; \n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(value);\n  },\n  minLength: (value, minLength) => {\n    if (!value) return true; \n    return String(value).length >= minLength;\n  },\n  maxLength: (value, maxLength) => {\n    if (!value) return true;\n    return String(value).length <= maxLength;\n  },\n  pattern: (value, pattern) => {\n    if (!value) return true;\n    const regex = new RegExp(pattern);\n    return regex.test(value);\n  },\n  min: (value, min) => {\n    if (!value && value !== 0) return true;\n    const num = Number(value);\n    return !isNaN(num) && num >= min;\n  },\n  max: (value, max) => {\n    if (!value) return true;\n    return Number(value) <= max;\n  }\n};\n\nexport const getErrorMessage = (validationType, language, params) => {\n  switch (validationType) {\n    case 'required':\n      return t('validationRequired', language);\n    case 'email':\n      return t('validationEmail', language) || 'Please enter a valid email address';\n    case 'minLength':\n      return t('validationMinLength', language, { length: params }).replace('{length}', params);\n    case 'maxLength':\n      return t('validationMaxLength', language, { length: params }).replace('{length}', params);\n    case 'pattern':\n      return t('validationPattern', language);\n    case 'min':\n      return t('validationMin', language, { min: params }).replace('{min}', params);\n    case 'max':\n      return t('validationMax', language, { max: params }).replace('{max}', params);\n    default:\n      return t('validationGeneric', language) || 'Invalid input';\n  }\n};\n\nexport const validateField = (value, validationRules = {}) => {\n  if (!validationRules) return { isValid: true };\n  \n  for (const [rule, param] of Object.entries(validationRules)) {\n    if (rule === 'required' && param && !validators.required(value)) {\n      return { isValid: false, errorType: 'required' };\n    }\n    if (rule === 'email' && param && !validators.email(value)) {\n      return { isValid: false, errorType: 'email' };\n    }\n    if (rule === 'minLength' && !validators.minLength(value, param)) {\n      return { isValid: false, errorType: 'minLength', param };\n    }\n    if (rule === 'maxLength' && !validators.maxLength(value, param)) {\n      return { isValid: false, errorType: 'maxLength', param };\n    }\n    if (rule === 'pattern' && !validators.pattern(value, param)) {\n      return { isValid: false, errorType: 'pattern' };\n    }\n    if (rule === 'min' && !validators.min(value, param)) {\n      return { isValid: false, errorType: 'min', param };\n    }\n    if (rule === 'max' && !validators.max(value, param)) {\n      return { isValid: false, errorType: 'max', param };\n    }\n  }\n  \n  return { isValid: true };\n};\n\nconst BaseQuestion = ({ \n  question, \n  isError, \n  children, \n  language,\n  value,\n  validationMessage,\n}) => {\n  const { id, label, required, info, hint, validation } = question;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipWidth, setTooltipWidth] = useState(0);\n  const tooltipRef = useRef(null);\n  const textMeasureRef = useRef(null);\n  \n  const validationRules = {\n    ...(validation || {}),\n    required: required\n  };\n  \n  const validationResult = value !== undefined ? validateField(value, validationRules) : { isValid: true };\n  const showError = isError && !validationResult.isValid;\n  \n  const labelClass = showError ? \"block text-sm font-medium mb-1 text-red-600\" : \"block text-sm font-medium mb-1\";\n  \n  useEffect(() => {\n    if (showTooltip && info && textMeasureRef.current) {\n      const span = document.createElement('span');\n      span.style.visibility = 'hidden';\n      span.style.position = 'absolute';\n      span.style.whiteSpace = 'nowrap';\n      span.style.fontSize = '0.875rem'; \n      span.style.padding = '0.5rem'; \n      span.textContent = info;\n      document.body.appendChild(span);\n      \n      const textWidth = span.offsetWidth + 16; // Add 16px padding\n      document.body.removeChild(span);\n      \n      // Set width with max constraint handled by CSS\n      setTooltipWidth(textWidth);\n    }\n  }, [showTooltip, info]);\n  \n  // Handle clicks outside the tooltip\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\n        setShowTooltip(false);\n      }\n    };\n\n    if (showTooltip) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTooltip]);\n  \n  // Required field asterisk\n  const requiredMark = required ? <span className=\"text-red-600 ml-1\">*</span> : null;\n  \n  const infoIcon = info ? (\n    <span className=\"ml-1 inline-block relative\" ref={tooltipRef}>\n      <span \n        className=\"w-5 h-5 inline-flex items-center justify-center bg-gray-200 text-gray-700 rounded-full text-xs font-bold cursor-pointer hover:bg-gray-300\"\n        onClick={() => setShowTooltip(!showTooltip)}\n        aria-label={showTooltip ? t('hideInfo', language) : t('showInfo', language)}\n      >\n        {t('infoIconLabel', language)}\n      </span>\n      {showTooltip && (\n        <span \n          ref={textMeasureRef}\n          style={{ width: `${tooltipWidth}px` }}\n          className=\"absolute left-0 top-full mt-1 p-2 bg-gray-800 text-white text-sm rounded shadow-lg z-10 max-w-[calc(50vw-2rem)] whitespace-normal\"\n        >\n          {info}\n        </span>\n      )}\n    </span>\n  ) : null;\n\n  // Hint element to be rendered below each question\n  const hintElement = hint ? (\n    <p className=\"text-xs text-gray-500 mt-1\">{hint}</p>\n  ) : null;\n\n  // Error message\n  const errorMessage = showError ? (\n    <p className=\"text-xs text-red-600 mt-1\">\n      {validationMessage || getErrorMessage(validationResult.errorType, language, validationResult.param)}\n    </p>\n  ) : null;\n\n  return (\n    <div className=\"mb-8\" key={id}>\n      {label && (\n        <label className={labelClass}>\n          {label}\n          {requiredMark}\n          {infoIcon}\n        </label>\n      )}\n      <div className=\"mt-2\">\n        {children}\n      </div>\n      {hintElement}\n      {errorMessage}\n    </div>\n  );\n};\n\nexport default BaseQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}