{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/EmailQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { validators } from './BaseQuestion';\nimport { t } from '../../localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailQuestion = ({\n  question,\n  isError,\n  value = '',\n  onChange,\n  language\n}) => {\n  _s();\n  const [customValidationMessage, setCustomValidationMessage] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  // Add email validation by default for email questions\n  const questionWithValidation = {\n    ...question,\n    validation: {\n      ...(question.validation || {}),\n      email: true\n    }\n  };\n\n  // Validate email and update state\n  const validateEmail = email => {\n    if (!email) {\n      setCustomValidationMessage('');\n      setIsValid(true);\n      return true;\n    }\n\n    // Check specific email validation criteria to provide better error messages\n    const basicEmailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!basicEmailRegex.test(email)) {\n      setCustomValidationMessage(t('validationEmailFormat', language));\n      setIsValid(false);\n      return false;\n    }\n    const localPart = email.split('@')[0];\n    const domainPart = email.split('@')[1];\n    if (localPart.length > 64) {\n      setCustomValidationMessage(t('validationEmailLocalLength', language));\n      setIsValid(false);\n      return false;\n    } else if (/^[.]|[.]$/.test(localPart)) {\n      setCustomValidationMessage(t('validationEmailLocalDot', language));\n      setIsValid(false);\n      return false;\n    } else if (/[.]{2,}/.test(localPart)) {\n      setCustomValidationMessage(t('validationEmailConsecutiveDots', language));\n      setIsValid(false);\n      return false;\n    } else if (domainPart.length > 255) {\n      setCustomValidationMessage(t('validationEmailDomainLength', language));\n      setIsValid(false);\n      return false;\n    } else if (!/^[a-zA-Z0-9.-]+$/.test(domainPart)) {\n      setCustomValidationMessage(t('validationEmailDomainChars', language));\n      setIsValid(false);\n      return false;\n    } else if (/^[-.]|[-.]$/.test(domainPart)) {\n      setCustomValidationMessage(t('validationEmailDomainHyphen', language));\n      setIsValid(false);\n      return false;\n    } else {\n      const tld = domainPart.split('.').pop();\n      if (!tld || tld.length < 2) {\n        setCustomValidationMessage(t('validationEmailTld', language));\n        setIsValid(false);\n        return false;\n      }\n    }\n    setCustomValidationMessage('');\n    setIsValid(true);\n    return true;\n  };\n  const handleChange = e => {\n    const newValue = e.target.value;\n    validateEmail(newValue);\n\n    // Pass both the value and validation state to parent component\n    onChange(question.id, newValue, !isValid);\n  };\n\n  // Validate on mount and when value changes from outside\n  useEffect(() => {\n    validateEmail(value);\n  }, [value, language]);\n  const inputClass = isError ? \"w-full p-2 border border-red-500 rounded\" : \"w-full p-2 border rounded\";\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: questionWithValidation,\n    isError: isError,\n    language: language,\n    value: value,\n    validationMessage: customValidationMessage,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: inputClass,\n      value: value,\n      onChange: handleChange,\n      placeholder: question.placeholder || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailQuestion, \"nDstwuPZ/9+0ng7ewyP2MH8IKig=\");\n_c = EmailQuestion;\nexport default EmailQuestion;\nvar _c;\n$RefreshReg$(_c, \"EmailQuestion\");","map":{"version":3,"names":["React","useState","useEffect","BaseQuestion","validators","t","jsxDEV","_jsxDEV","EmailQuestion","question","isError","value","onChange","language","_s","customValidationMessage","setCustomValidationMessage","isValid","setIsValid","questionWithValidation","validation","email","validateEmail","basicEmailRegex","test","localPart","split","domainPart","length","tld","pop","handleChange","e","newValue","target","id","inputClass","validationMessage","children","type","className","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/EmailQuestion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { validators } from './BaseQuestion';\nimport { t } from '../../localization';\n\nconst EmailQuestion = ({ \n  question, \n  isError, \n  value = '', \n  onChange, \n  language \n}) => {\n  const [customValidationMessage, setCustomValidationMessage] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  \n  // Add email validation by default for email questions\n  const questionWithValidation = {\n    ...question,\n    validation: {\n      ...(question.validation || {}),\n      email: true\n    }\n  };\n  \n  // Validate email and update state\n  const validateEmail = (email) => {\n    if (!email) {\n      setCustomValidationMessage('');\n      setIsValid(true);\n      return true;\n    }\n    \n    // Check specific email validation criteria to provide better error messages\n    const basicEmailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    \n    if (!basicEmailRegex.test(email)) {\n      setCustomValidationMessage(t('validationEmailFormat', language));\n      setIsValid(false);\n      return false;\n    }\n    \n    const localPart = email.split('@')[0];\n    const domainPart = email.split('@')[1];\n    \n    if (localPart.length > 64) {\n      setCustomValidationMessage(t('validationEmailLocalLength', language));\n      setIsValid(false);\n      return false;\n    } else if (/^[.]|[.]$/.test(localPart)) {\n      setCustomValidationMessage(t('validationEmailLocalDot', language));\n      setIsValid(false);\n      return false;\n    } else if (/[.]{2,}/.test(localPart)) {\n      setCustomValidationMessage(t('validationEmailConsecutiveDots', language));\n      setIsValid(false);\n      return false;\n    } else if (domainPart.length > 255) {\n      setCustomValidationMessage(t('validationEmailDomainLength', language));\n      setIsValid(false);\n      return false;\n    } else if (!/^[a-zA-Z0-9.-]+$/.test(domainPart)) {\n      setCustomValidationMessage(t('validationEmailDomainChars', language));\n      setIsValid(false);\n      return false;\n    } else if (/^[-.]|[-.]$/.test(domainPart)) {\n      setCustomValidationMessage(t('validationEmailDomainHyphen', language));\n      setIsValid(false);\n      return false;\n    } else {\n      const tld = domainPart.split('.').pop();\n      if (!tld || tld.length < 2) {\n        setCustomValidationMessage(t('validationEmailTld', language));\n        setIsValid(false);\n        return false;\n      }\n    }\n    \n    setCustomValidationMessage('');\n    setIsValid(true);\n    return true;\n  };\n  \n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    validateEmail(newValue);\n    \n    // Pass both the value and validation state to parent component\n    onChange(question.id, newValue, !isValid);\n  };\n  \n  // Validate on mount and when value changes from outside\n  useEffect(() => {\n    validateEmail(value);\n  }, [value, language]);\n  \n  const inputClass = isError ? \"w-full p-2 border border-red-500 rounded\" : \"w-full p-2 border rounded\";\n  \n  return (\n    <BaseQuestion \n      question={questionWithValidation} \n      isError={isError} \n      language={language}\n      value={value}\n      validationMessage={customValidationMessage}\n    >\n      <input\n        type=\"email\"\n        className={inputClass}\n        value={value}\n        onChange={handleChange}\n        placeholder={question.placeholder || ''}\n      />\n    </BaseQuestion>\n  );\n};\n\nexport default EmailQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}