{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport BaseQuestion, { isError } from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragIndicator = ({\n  position,\n  isDragging,\n  dragPosition,\n  setDragPosition,\n  handleReordering\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `drag-indicator ${isDragging && dragPosition === position ? 'drag-indicator-active' : ''}`,\n  style: {\n    opacity: isDragging && dragPosition === position ? 1 : 0,\n    visibility: isDragging && dragPosition === position ? 'visible' : 'hidden'\n  },\n  onDragOver: e => {\n    if (!isDragging) return;\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    setDragPosition(position);\n  },\n  onDrop: e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDragging) return;\n    const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n    if (isNaN(sourceIndex)) return;\n    handleReordering(sourceIndex, position);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = DragIndicator;\nconst DragHandle = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"ranked-handle\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-4 h-0.5 bg-current mb-1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-4 h-0.5 bg-current mb-1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-4 h-0.5 bg-current\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n_c2 = DragHandle;\nconst RankedQuestion = ({\n  question,\n  shouldValidate = false,\n  value = [],\n  onChange,\n  language,\n  isModified = false\n}) => {\n  _s();\n  // Create a modified question object that includes custom validation for ranked questions\n  const questionWithValidation = {\n    ...question,\n    validation: {\n      ...(question.validation || {})\n    }\n  };\n\n  // Add custom validation for required ranked questions that haven't been modified\n  if (question.required && !isModified) {\n    questionWithValidation.validation.customRanked = true;\n  }\n  const {\n    hasError\n  } = isError(questionWithValidation, value, shouldValidate, language);\n  const questionId = useRef(`ranked-question-${question.id}`);\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  const containerRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hasBeenModified, setHasBeenModified] = useState(isModified);\n  useEffect(() => {\n    if (value.length && JSON.stringify(value) !== JSON.stringify(ranking)) {\n      setRanking(value);\n    } else if (question.options.length && !value.length && JSON.stringify(question.options) !== JSON.stringify(ranking)) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options, ranking]);\n  const handleReordering = (sourceIndex, targetPosition) => {\n    if (sourceIndex === targetPosition || sourceIndex === targetPosition - 1 && targetPosition > 0) {\n      return false;\n    }\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    newRanking.splice(targetIndex, 0, movedItem);\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    setHasBeenModified(true);\n    resetDragStates();\n    return true;\n  };\n  const resetDragStates = () => {\n    setDragPosition(-1);\n    setDraggedItem(-1);\n    setIsDragging(false);\n  };\n  const checkItemHoverPosition = (e, index) => {\n    if (!isDragging || draggedItem === index) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mouseY = e.clientY;\n    const middleY = rect.top + rect.height / 2;\n    if (mouseY < middleY) {\n      setDragPosition(index);\n    } else {\n      setDragPosition(index + 1);\n    }\n  };\n  useEffect(() => {\n    const handleDragOver = e => {\n      if (!isDragging) return;\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'none';\n      }\n    };\n    const handleDrop = () => {\n      resetDragStates();\n    };\n    document.addEventListener('dragover', handleDragOver);\n    document.addEventListener('drop', handleDrop);\n    return () => {\n      document.removeEventListener('dragover', handleDragOver);\n      document.removeEventListener('drop', handleDrop);\n    };\n  }, [isDragging]);\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: questionWithValidation,\n    shouldValidate: shouldValidate,\n    language: language,\n    value: ranking,\n    customErrorMessage: hasError && question.required && !hasBeenModified ? \"Please arrange the items in your preferred order\" : null,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: `question-group-container ${hasError ? 'question-group-container-error' : ''}`,\n      onDragOver: e => {\n        if (!isDragging) return;\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const firstItemTop = containerRect.top + 20;\n        if (e.clientY < firstItemTop) {\n          setDragPosition(0);\n        }\n      },\n      onDrop: e => {\n        e.preventDefault();\n        if (!isDragging) return;\n        const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n        if (!isNaN(sourceIndex) && dragPosition >= 0) {\n          handleReordering(sourceIndex, dragPosition);\n        }\n        resetDragStates();\n      },\n      \"aria-invalid\": hasError,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ranked-list\",\n        children: [/*#__PURE__*/_jsxDEV(DragIndicator, {\n          position: 0,\n          isDragging: isDragging,\n          dragPosition: dragPosition,\n          setDragPosition: setDragPosition,\n          handleReordering: handleReordering\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), ranking.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `ranked-item ${draggedItem === index ? 'opacity-50' : ''} ${dragPosition === index ? 'border-blue-400' : ''} ${isDragging ? 'ranked-item-dragging' : ''}`,\n            draggable: true,\n            onDragStart: e => {\n              e.dataTransfer.setData('sourceIndex', index.toString());\n              e.dataTransfer.setData('questionId', questionId.current);\n              e.dataTransfer.effectAllowed = 'move';\n              e.dataTransfer.setDragImage(e.currentTarget, e.currentTarget.offsetWidth / 2, e.currentTarget.offsetHeight / 2);\n              setIsDragging(true);\n              setDraggedItem(index);\n              if (!hasBeenModified) {\n                setHasBeenModified(true);\n                onChange(question.id, ranking, true);\n              }\n            },\n            onDragEnd: resetDragStates,\n            onDragOver: e => {\n              if (!isDragging || draggedItem === index) return;\n              e.preventDefault();\n              e.stopPropagation();\n              checkItemHoverPosition(e, index);\n            },\n            onDrop: e => {\n              e.preventDefault();\n              e.stopPropagation();\n              if (!isDragging) return;\n              const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n              if (!isNaN(sourceIndex)) {\n                const targetPosition = e.clientY < e.currentTarget.getBoundingClientRect().top + e.currentTarget.getBoundingClientRect().height / 2 ? index : index + 1;\n                handleReordering(sourceIndex, targetPosition);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ranked-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DragHandle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex-grow\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragIndicator, {\n            position: index + 1,\n            isDragging: isDragging,\n            dragPosition: dragPosition,\n            setDragPosition: setDragPosition,\n            handleReordering: handleReordering\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(RankedQuestion, \"qKuLS0PiWnm90KQ2uy4JS4T48eY=\");\n_c3 = RankedQuestion;\nexport default RankedQuestion;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DragIndicator\");\n$RefreshReg$(_c2, \"DragHandle\");\n$RefreshReg$(_c3, \"RankedQuestion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BaseQuestion","isError","jsxDEV","_jsxDEV","DragIndicator","position","isDragging","dragPosition","setDragPosition","handleReordering","className","style","opacity","visibility","onDragOver","e","preventDefault","stopPropagation","dataTransfer","dropEffect","onDrop","sourceIndex","parseInt","getData","isNaN","fileName","_jsxFileName","lineNumber","columnNumber","_c","DragHandle","children","_c2","RankedQuestion","question","shouldValidate","value","onChange","language","isModified","_s","questionWithValidation","validation","required","customRanked","hasError","questionId","id","ranking","setRanking","length","options","draggedItem","setDraggedItem","containerRef","setIsDragging","hasBeenModified","setHasBeenModified","JSON","stringify","targetPosition","newRanking","movedItem","splice","targetIndex","resetDragStates","checkItemHoverPosition","index","rect","currentTarget","getBoundingClientRect","mouseY","clientY","middleY","top","height","handleDragOver","current","contains","target","handleDrop","document","addEventListener","removeEventListener","customErrorMessage","ref","containerRect","firstItemTop","map","item","draggable","onDragStart","setData","toString","effectAllowed","setDragImage","offsetWidth","offsetHeight","onDragEnd","_c3","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport BaseQuestion, { isError } from './BaseQuestion';\n\nconst DragIndicator = ({ position, isDragging, dragPosition, setDragPosition, handleReordering }) => (\n  <div \n    className={`drag-indicator ${isDragging && dragPosition === position ? 'drag-indicator-active' : ''}`}\n    style={{ \n      opacity: isDragging && dragPosition === position ? 1 : 0,\n      visibility: isDragging && dragPosition === position ? 'visible' : 'hidden',\n    }}\n    onDragOver={(e) => {\n      if (!isDragging) return;\n      e.preventDefault();\n      e.stopPropagation();\n      e.dataTransfer.dropEffect = 'move';\n      setDragPosition(position);\n    }}\n    onDrop={(e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      if (!isDragging) return;\n      \n      const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n      if (isNaN(sourceIndex)) return;\n      \n      handleReordering(sourceIndex, position);\n    }}\n  />\n);\n\nconst DragHandle = () => (\n  <div className=\"ranked-handle\">\n    <div className=\"w-4 h-0.5 bg-current mb-1\"></div>\n    <div className=\"w-4 h-0.5 bg-current mb-1\"></div>\n    <div className=\"w-4 h-0.5 bg-current\"></div>\n  </div>\n);\n\nconst RankedQuestion = ({ \n  question, \n  shouldValidate = false, \n  value = [], \n  onChange, \n  language, \n  isModified = false\n}) => {\n  // Create a modified question object that includes custom validation for ranked questions\n  const questionWithValidation = {\n    ...question,\n    validation: {\n      ...(question.validation || {}),\n    }\n  };\n  \n  // Add custom validation for required ranked questions that haven't been modified\n  if (question.required && !isModified) {\n    questionWithValidation.validation.customRanked = true;\n  }\n  \n  const { hasError } = isError(questionWithValidation, value, shouldValidate, language);\n  const questionId = useRef(`ranked-question-${question.id}`);\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  const containerRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hasBeenModified, setHasBeenModified] = useState(isModified);\n  \n  useEffect(() => {\n    if (value.length && JSON.stringify(value) !== JSON.stringify(ranking)) {\n      setRanking(value);\n    } else if (question.options.length && !value.length && JSON.stringify(question.options) !== JSON.stringify(ranking)) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options, ranking]);\n\n  const handleReordering = (sourceIndex, targetPosition) => {\n    if (sourceIndex === targetPosition || \n        (sourceIndex === targetPosition - 1 && targetPosition > 0)) {\n      return false;\n    }\n    \n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n    \n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    \n    newRanking.splice(targetIndex, 0, movedItem);\n    \n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    setHasBeenModified(true);\n    resetDragStates();\n    return true;\n  };\n\n  const resetDragStates = () => {\n    setDragPosition(-1);\n    setDraggedItem(-1);\n    setIsDragging(false);\n  };\n\n  const checkItemHoverPosition = (e, index) => {\n    if (!isDragging || draggedItem === index) return;\n\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mouseY = e.clientY;\n    const middleY = rect.top + rect.height / 2;\n    \n    if (mouseY < middleY) {\n      setDragPosition(index);\n    } else {\n      setDragPosition(index + 1);\n    }\n  };\n\n  useEffect(() => {\n    const handleDragOver = (e) => {\n      if (!isDragging) return;\n      \n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'none';\n      }\n    };\n    \n    const handleDrop = () => {\n      resetDragStates();\n    };\n    \n    document.addEventListener('dragover', handleDragOver);\n    document.addEventListener('drop', handleDrop);\n    return () => {\n      document.removeEventListener('dragover', handleDragOver);\n      document.removeEventListener('drop', handleDrop);\n    };\n  }, [isDragging]);\n\n  return (\n    <BaseQuestion \n      question={questionWithValidation} \n      shouldValidate={shouldValidate} \n      language={language}\n      value={ranking}\n      customErrorMessage={hasError && question.required && !hasBeenModified ? \n        \"Please arrange the items in your preferred order\" : null}\n    >\n      <div \n        ref={containerRef}\n        className={`question-group-container ${hasError ? 'question-group-container-error' : ''}`}\n        onDragOver={(e) => {\n          if (!isDragging) return;\n          e.preventDefault();\n          e.dataTransfer.dropEffect = 'move';\n          \n          const containerRect = containerRef.current.getBoundingClientRect();\n          const firstItemTop = containerRect.top + 20;\n          \n          if (e.clientY < firstItemTop) {\n            setDragPosition(0);\n          }\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          \n          if (!isDragging) return;\n          \n          const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n          if (!isNaN(sourceIndex) && dragPosition >= 0) {\n            handleReordering(sourceIndex, dragPosition);\n          }\n          \n          resetDragStates();\n        }}\n        aria-invalid={hasError}\n      >\n        <ul className=\"ranked-list\">\n          <DragIndicator \n            position={0}\n            isDragging={isDragging}\n            dragPosition={dragPosition}\n            setDragPosition={setDragPosition}\n            handleReordering={handleReordering}\n          />\n          \n          {ranking.map((item, index) => (\n            <li key={item}>\n              <div \n                className={`ranked-item ${\n                  draggedItem === index ? 'opacity-50' : ''\n                } ${dragPosition === index ? 'border-blue-400' : ''} ${\n                  isDragging ? 'ranked-item-dragging' : ''\n                }`}\n                draggable\n                onDragStart={(e) => {\n                  e.dataTransfer.setData('sourceIndex', index.toString());\n                  e.dataTransfer.setData('questionId', questionId.current);\n                  e.dataTransfer.effectAllowed = 'move';                 \n                  e.dataTransfer.setDragImage(\n                    e.currentTarget, \n                    e.currentTarget.offsetWidth / 2, \n                    e.currentTarget.offsetHeight / 2\n                  );\n                  \n                  setIsDragging(true);\n                  setDraggedItem(index);\n                  if (!hasBeenModified) {\n                    setHasBeenModified(true);\n                    onChange(question.id, ranking, true);\n                  }\n                }}\n                onDragEnd={resetDragStates}\n                onDragOver={(e) => {\n                  if (!isDragging || draggedItem === index) return;\n                  e.preventDefault();\n                  e.stopPropagation();\n                  checkItemHoverPosition(e, index);\n                }}\n                onDrop={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  \n                  if (!isDragging) return;\n                  \n                  const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                  if (!isNaN(sourceIndex)) {\n                    const targetPosition = e.clientY < e.currentTarget.getBoundingClientRect().top + e.currentTarget.getBoundingClientRect().height / 2\n                      ? index\n                      : index + 1;\n                    handleReordering(sourceIndex, targetPosition);\n                  }\n                }}\n              >\n                <div className=\"ranked-number\">{index + 1}</div>\n                <DragHandle />\n                <span className=\"flex-grow\">{item}</span>\n              </div>\n              \n              <DragIndicator \n                position={index + 1}\n                isDragging={isDragging}\n                dragPosition={dragPosition}\n                setDragPosition={setDragPosition}\n                handleReordering={handleReordering}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default RankedQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}