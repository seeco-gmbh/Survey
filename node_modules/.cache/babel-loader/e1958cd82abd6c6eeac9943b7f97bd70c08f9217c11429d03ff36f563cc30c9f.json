{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { t } from '../../localization';\n\n// Reusable drag indicator component to eliminate duplicate code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragIndicator = ({\n  position,\n  index,\n  isDraggingInComponent,\n  setDragPosition,\n  handleReordering\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"h-1 my-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\",\n  style: {\n    zIndex: 10\n  },\n  onDragOver: e => {\n    if (!isDraggingInComponent) return;\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    setDragPosition(position);\n  },\n  onDrop: e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDraggingInComponent) return;\n    const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n    if (isNaN(sourceIndex)) return;\n    handleReordering(sourceIndex, position);\n    setDragPosition(-1);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = DragIndicator;\nconst RankedQuestion = ({\n  question,\n  isError,\n  value = [],\n  onChange,\n  language,\n  isModified = false\n}) => {\n  _s();\n  // Create a unique identifier for this question instance\n  const questionId = useRef(`ranked-question-${question.id}`);\n  // Initialize ranking if needed\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  const containerRef = useRef(null);\n  // Track if we're currently dragging within this component\n  const [isDraggingInComponent, setIsDraggingInComponent] = useState(false);\n  // Detect if we're on a touch device\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n\n  // Check if we're on a touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Update local ranking when value prop changes\n  useEffect(() => {\n    // Only update if the arrays are actually different\n    if (value.length && JSON.stringify(value) !== JSON.stringify(ranking)) {\n      setRanking(value);\n    } else if (question.options.length && !value.length && JSON.stringify(question.options) !== JSON.stringify(ranking)) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options, ranking]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || sourceIndex === targetPosition - 1 && targetPosition > 0) {\n      return false;\n    }\n\n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n\n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    newRanking.splice(targetIndex, 0, movedItem);\n\n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n\n  // Move item up in the ranking\n  const moveItemUp = index => {\n    if (index > 0) {\n      handleReordering(index, index - 1);\n    }\n  };\n\n  // Move item down in the ranking\n  const moveItemDown = index => {\n    if (index < ranking.length - 1) {\n      handleReordering(index, index + 2);\n    }\n  };\n\n  // Reset all drag states\n  const resetDragStates = () => {\n    setDragPosition(-1);\n    setDraggedItem(-1);\n    setIsDraggingInComponent(false);\n  };\n\n  // Add event listeners to document to prevent dragging outside\n  useEffect(() => {\n    const handleDragOver = e => {\n      // Only handle events for our component's dragged items\n      if (!isDraggingInComponent) return;\n\n      // Check if the drag is outside our container\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'none'; // Indicate dropping is not allowed\n      }\n    };\n    document.addEventListener('dragover', handleDragOver);\n    return () => {\n      document.removeEventListener('dragover', handleDragOver);\n    };\n  }, [isDraggingInComponent]);\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 border rounded ${isError ? 'border-red-500' : 'border-gray-300'}`,\n      ref: containerRef,\n      onDragOver: handleDragOver,\n      onDrop: e => {\n        e.preventDefault();\n\n        // Only process drops from our own component\n        if (!isDraggingInComponent) return;\n        const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n        if (isNaN(sourceIndex)) return;\n        if (dragPosition >= 0) {\n          handleReordering(sourceIndex, dragPosition);\n        }\n\n        // Reset drag states\n        resetDragStates();\n      },\n      onDragLeave: resetDragStates,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-4\",\n        children: isTouchDevice ? t('rankingInstructionsMobile', language) || 'Use the arrows to arrange items in order of preference.' : t('rankingInstructions', language) || 'Drag and drop items to arrange them in order of preference.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [isDraggingInComponent && dragPosition === 0 && /*#__PURE__*/_jsxDEV(DragIndicator, {\n          position: 0,\n          isDraggingInComponent: isDraggingInComponent,\n          setDragPosition: setDragPosition,\n          handleReordering: handleReordering\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), ranking.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [isDraggingInComponent && dragPosition === index && index > 0 && /*#__PURE__*/_jsxDEV(DragIndicator, {\n            position: index,\n            isDraggingInComponent: isDraggingInComponent,\n            setDragPosition: setDragPosition,\n            handleReordering: handleReordering\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center p-3 bg-white border rounded hover:bg-gray-50 ${dragPosition === index ? 'border-blue-400' : 'border-gray-200'} ${draggedItem === index ? 'opacity-50' : ''}`,\n            draggable: !isTouchDevice,\n            onDragStart: e => {\n              if (isTouchDevice) return;\n\n              // Store both the index and the question ID\n              e.dataTransfer.setData('sourceIndex', index.toString());\n              e.dataTransfer.setData('questionId', questionId.current);\n              e.dataTransfer.effectAllowed = 'move';\n\n              // Set drag image for better visual feedback\n              e.dataTransfer.setDragImage(e.currentTarget, e.currentTarget.offsetWidth / 2, e.currentTarget.offsetHeight / 2);\n\n              // Mark that we're dragging within this component\n              setIsDraggingInComponent(true);\n              setDraggedItem(index);\n            },\n            onDragEnd: resetDragStates,\n            onDragOver: e => {\n              // Only allow drops if we're dragging within this component\n              if (!isDraggingInComponent) return;\n              e.preventDefault();\n              e.stopPropagation();\n              const rect = e.currentTarget.getBoundingClientRect();\n              const mouseY = e.clientY;\n              const midpoint = rect.top + rect.height / 2;\n\n              // Determine if we should show indicator above or below\n              setDragPosition(mouseY < midpoint ? index : index + 1);\n            },\n            onDrop: e => {\n              e.preventDefault();\n              e.stopPropagation();\n\n              // Only process drops from our own component\n              if (!isDraggingInComponent) return;\n              const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n              if (isNaN(sourceIndex)) return;\n              const rect = e.currentTarget.getBoundingClientRect();\n              const mouseY = e.clientY;\n              const midpoint = rect.top + rect.height / 2;\n\n              // Determine drop position based on mouse position\n              const targetPosition = mouseY < midpoint ? index : index + 1;\n\n              // Perform the reordering\n              handleReordering(sourceIndex, targetPosition);\n\n              // Reset drag states\n              resetDragStates();\n            },\n            children: [!isTouchDevice && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 mr-3 text-gray-400\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4 6h16M4 12h16M4 18h16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), isModified && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-3\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex-grow\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), isTouchDevice && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => moveItemUp(index),\n                disabled: index === 0,\n                className: `p-1 rounded-full ${index === 0 ? 'text-gray-300' : 'text-blue-600'}`,\n                \"aria-label\": \"Move up\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-6 w-6\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M5 15l7-7 7 7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => moveItemDown(index),\n                disabled: index === ranking.length - 1,\n                className: `p-1 rounded-full ${index === ranking.length - 1 ? 'text-gray-300' : 'text-blue-600'}`,\n                \"aria-label\": \"Move down\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-6 w-6\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M19 9l-7 7-7-7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), isDraggingInComponent && dragPosition === index + 1 && /*#__PURE__*/_jsxDEV(DragIndicator, {\n            position: index + 1,\n            isDraggingInComponent: isDraggingInComponent,\n            setDragPosition: setDragPosition,\n            handleReordering: handleReordering\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, `${item}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(RankedQuestion, \"g3AS7j+2n7P/LpFXHy391Ie0Ypk=\");\n_c2 = RankedQuestion;\nexport default RankedQuestion;\nvar _c, _c2;\n$RefreshReg$(_c, \"DragIndicator\");\n$RefreshReg$(_c2, \"RankedQuestion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BaseQuestion","t","jsxDEV","_jsxDEV","DragIndicator","position","index","isDraggingInComponent","setDragPosition","handleReordering","className","style","zIndex","onDragOver","e","preventDefault","stopPropagation","dataTransfer","dropEffect","onDrop","sourceIndex","parseInt","getData","isNaN","fileName","_jsxFileName","lineNumber","columnNumber","_c","RankedQuestion","question","isError","value","onChange","language","isModified","_s","questionId","id","ranking","setRanking","length","options","dragPosition","draggedItem","setDraggedItem","containerRef","setIsDraggingInComponent","isTouchDevice","setIsTouchDevice","window","navigator","maxTouchPoints","JSON","stringify","targetPosition","newRanking","movedItem","splice","targetIndex","moveItemUp","moveItemDown","resetDragStates","handleDragOver","current","contains","target","document","addEventListener","removeEventListener","children","ref","onDragLeave","map","item","draggable","onDragStart","setData","toString","effectAllowed","setDragImage","currentTarget","offsetWidth","offsetHeight","onDragEnd","rect","getBoundingClientRect","mouseY","clientY","midpoint","top","height","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","onClick","disabled","_c2","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { t } from '../../localization';\n\n// Reusable drag indicator component to eliminate duplicate code\nconst DragIndicator = ({ position, index, isDraggingInComponent, setDragPosition, handleReordering }) => (\n  <div \n    className=\"h-1 my-1 bg-blue-600 rounded-full shadow-md animate-pulse cursor-pointer\"\n    style={{ zIndex: 10 }}\n    onDragOver={(e) => {\n      if (!isDraggingInComponent) return;\n      \n      e.preventDefault();\n      e.stopPropagation();\n      e.dataTransfer.dropEffect = 'move';\n      setDragPosition(position);\n    }}\n    onDrop={(e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      if (!isDraggingInComponent) return;\n      \n      const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n      if (isNaN(sourceIndex)) return;\n      \n      handleReordering(sourceIndex, position);\n      setDragPosition(-1);\n    }}\n  />\n);\n\nconst RankedQuestion = ({ \n  question, \n  isError, \n  value = [], \n  onChange, \n  language, \n  isModified = false\n}) => {\n  // Create a unique identifier for this question instance\n  const questionId = useRef(`ranked-question-${question.id}`);\n  // Initialize ranking if needed\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  const containerRef = useRef(null);\n  // Track if we're currently dragging within this component\n  const [isDraggingInComponent, setIsDraggingInComponent] = useState(false);\n  // Detect if we're on a touch device\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  \n  // Check if we're on a touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n  \n  // Update local ranking when value prop changes\n  useEffect(() => {\n    // Only update if the arrays are actually different\n    if (value.length && JSON.stringify(value) !== JSON.stringify(ranking)) {\n      setRanking(value);\n    } else if (question.options.length && !value.length && JSON.stringify(question.options) !== JSON.stringify(ranking)) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options, ranking]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || \n        (sourceIndex === targetPosition - 1 && targetPosition > 0)) {\n      return false;\n    }\n    \n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n    \n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    \n    newRanking.splice(targetIndex, 0, movedItem);\n    \n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n\n  // Move item up in the ranking\n  const moveItemUp = (index) => {\n    if (index > 0) {\n      handleReordering(index, index - 1);\n    }\n  };\n  \n  // Move item down in the ranking\n  const moveItemDown = (index) => {\n    if (index < ranking.length - 1) {\n      handleReordering(index, index + 2);\n    }\n  };\n\n  // Reset all drag states\n  const resetDragStates = () => {\n    setDragPosition(-1);\n    setDraggedItem(-1);\n    setIsDraggingInComponent(false);\n  };\n\n  // Add event listeners to document to prevent dragging outside\n  useEffect(() => {\n    const handleDragOver = (e) => {\n      // Only handle events for our component's dragged items\n      if (!isDraggingInComponent) return;\n      \n      // Check if the drag is outside our container\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'none'; // Indicate dropping is not allowed\n      }\n    };\n    \n    document.addEventListener('dragover', handleDragOver);\n    return () => {\n      document.removeEventListener('dragover', handleDragOver);\n    };\n  }, [isDraggingInComponent]);\n\n  return (\n    <BaseQuestion question={question} isError={isError} language={language} value={value}>\n      <div \n        className={`p-4 border rounded ${isError ? 'border-red-500' : 'border-gray-300'}`}\n        ref={containerRef}\n        onDragOver={handleDragOver}\n        onDrop={(e) => {\n          e.preventDefault();\n          \n          // Only process drops from our own component\n          if (!isDraggingInComponent) return;\n          \n          const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n          if (isNaN(sourceIndex)) return;\n          \n          if (dragPosition >= 0) {\n            handleReordering(sourceIndex, dragPosition);\n          }\n          \n          // Reset drag states\n          resetDragStates();\n        }}\n        onDragLeave={resetDragStates}\n      >\n        {/* Instructions */}\n        <p className=\"text-sm text-gray-600 mb-4\">\n          {isTouchDevice \n            ? t('rankingInstructionsMobile', language) || 'Use the arrows to arrange items in order of preference.'\n            : t('rankingInstructions', language) || 'Drag and drop items to arrange them in order of preference.'}\n        </p>\n        \n        {/* Ranking list */}\n        <div className=\"space-y-3\">\n          {/* First drag indicator */}\n          {isDraggingInComponent && dragPosition === 0 && (\n            <DragIndicator \n              position={0} \n              isDraggingInComponent={isDraggingInComponent}\n              setDragPosition={setDragPosition}\n              handleReordering={handleReordering}\n            />\n          )}\n          \n          {/* Ranked items */}\n          {ranking.map((item, index) => (\n            <div key={`${item}-${index}`} className=\"relative\">\n              {/* Show drag indicator if needed */}\n              {isDraggingInComponent && dragPosition === index && index > 0 && (\n                <DragIndicator \n                  position={index} \n                  isDraggingInComponent={isDraggingInComponent}\n                  setDragPosition={setDragPosition}\n                  handleReordering={handleReordering}\n                />\n              )}\n              \n              {/* Item container */}\n              <div \n                className={`flex items-center p-3 bg-white border rounded hover:bg-gray-50 ${\n                  dragPosition === index ? 'border-blue-400' : 'border-gray-200'\n                } ${draggedItem === index ? 'opacity-50' : ''}`}\n                draggable={!isTouchDevice}\n                onDragStart={(e) => {\n                  if (isTouchDevice) return;\n                  \n                  // Store both the index and the question ID\n                  e.dataTransfer.setData('sourceIndex', index.toString());\n                  e.dataTransfer.setData('questionId', questionId.current);\n                  e.dataTransfer.effectAllowed = 'move';\n                  \n                  // Set drag image for better visual feedback\n                  e.dataTransfer.setDragImage(\n                    e.currentTarget, \n                    e.currentTarget.offsetWidth / 2, \n                    e.currentTarget.offsetHeight / 2\n                  );\n                  \n                  // Mark that we're dragging within this component\n                  setIsDraggingInComponent(true);\n                  setDraggedItem(index);\n                }}\n                onDragEnd={resetDragStates}\n                onDragOver={(e) => {\n                  // Only allow drops if we're dragging within this component\n                  if (!isDraggingInComponent) return;\n                  \n                  e.preventDefault();\n                  e.stopPropagation();\n                  \n                  const rect = e.currentTarget.getBoundingClientRect();\n                  const mouseY = e.clientY;\n                  const midpoint = rect.top + rect.height / 2;\n                  \n                  // Determine if we should show indicator above or below\n                  setDragPosition(mouseY < midpoint ? index : index + 1);\n                }}\n                onDrop={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  \n                  // Only process drops from our own component\n                  if (!isDraggingInComponent) return;\n                  \n                  const sourceIndex = parseInt(e.dataTransfer.getData('sourceIndex'));\n                  if (isNaN(sourceIndex)) return;\n                  \n                  const rect = e.currentTarget.getBoundingClientRect();\n                  const mouseY = e.clientY;\n                  const midpoint = rect.top + rect.height / 2;\n                  \n                  // Determine drop position based on mouse position\n                  const targetPosition = mouseY < midpoint ? index : index + 1;\n                  \n                  // Perform the reordering\n                  handleReordering(sourceIndex, targetPosition);\n                  \n                  // Reset drag states\n                  resetDragStates();\n                }}\n              >\n                {!isTouchDevice && (\n                  <div className=\"flex-shrink-0 mr-3 text-gray-400\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                    </svg>\n                  </div>\n                )}\n                \n                {isModified && (\n                  <div className=\"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-gray-200 rounded-full mr-3\">\n                    {index + 1}\n                  </div>\n                )}\n                \n                <span className=\"flex-grow\">{item}</span>\n                \n                {/* Touch-friendly buttons for mobile */}\n                {isTouchDevice && (\n                  <div className=\"flex items-center ml-3\">\n                    <button \n                      type=\"button\"\n                      onClick={() => moveItemUp(index)}\n                      disabled={index === 0}\n                      className={`p-1 rounded-full ${index === 0 ? 'text-gray-300' : 'text-blue-600'}`}\n                      aria-label=\"Move up\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n                      </svg>\n                    </button>\n                    <button \n                      type=\"button\"\n                      onClick={() => moveItemDown(index)}\n                      disabled={index === ranking.length - 1}\n                      className={`p-1 rounded-full ${index === ranking.length - 1 ? 'text-gray-300' : 'text-blue-600'}`}\n                      aria-label=\"Move down\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </button>\n                  </div>\n                )}\n              </div>\n              \n              {/* Show drag indicator after item if needed */}\n              {isDraggingInComponent && dragPosition === index + 1 && (\n                <DragIndicator \n                  position={index + 1} \n                  isDraggingInComponent={isDraggingInComponent}\n                  setDragPosition={setDragPosition}\n                  handleReordering={handleReordering}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default RankedQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}