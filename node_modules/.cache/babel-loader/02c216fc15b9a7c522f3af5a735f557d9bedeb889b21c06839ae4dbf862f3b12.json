{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionElement from './QuestionElement';\nimport { t } from '../../localization';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RankedQuestion = ({\n  question,\n  isError,\n  value = [],\n  onChange,\n  language,\n  isModified = false,\n  dragContextId\n}) => {\n  _s();\n  // Initialize ranking if needed\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n\n  // Update local ranking when value prop changes\n  useEffect(() => {\n    if (value.length) {\n      setRanking(value);\n    } else if (question.options.length && !value.length) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || sourceIndex === targetPosition - 1 && targetPosition > 0) {\n      return false;\n    }\n\n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n\n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    newRanking.splice(targetIndex, 0, movedItem);\n\n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ranked-question-container\",\n    \"data-context-id\": dragContextId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-sm font-medium text-gray-700 mb-2\",\n      children: question.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => {\n        // Only process the result if the drag completed successfully\n        if (!result.destination) return;\n        const items = [...(value || question.defaultValue || [])];\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        // Update the parent component\n        onChange(question.id, items, true);\n      },\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `${dragContextId}-droppable`,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: `ranked-list ${snapshot.isDraggingOver ? 'dragging-over' : ''}`,\n          children: [(value || question.defaultValue || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `${dragContextId}-${item.id}`,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `ranked-item ${snapshot.isDragging ? 'dragging' : ''}`,\n              children: item.label || item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)\n          }, `${item.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-sm mt-1\",\n      children: t('requiredField', language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(RankedQuestion, \"sCnRz0qu5P5vaAhzjmW9WgDGTzE=\");\n_c = RankedQuestion;\nexport default RankedQuestion;\nvar _c;\n$RefreshReg$(_c, \"RankedQuestion\");","map":{"version":3,"names":["React","useState","useEffect","QuestionElement","t","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","RankedQuestion","question","isError","value","onChange","language","isModified","dragContextId","_s","ranking","setRanking","length","options","dragPosition","setDragPosition","draggedItem","setDraggedItem","handleReordering","sourceIndex","targetPosition","newRanking","movedItem","splice","targetIndex","id","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","result","destination","items","defaultValue","reorderedItem","source","index","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","map","item","draggableId","draggableProps","dragHandleProps","isDragging","text","placeholder","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/RankedQuestion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuestionElement from './QuestionElement';\nimport { t } from '../../localization';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst RankedQuestion = ({ \n  question, \n  isError, \n  value = [], \n  onChange, \n  language, \n  isModified = false,\n  dragContextId\n}) => {\n  // Initialize ranking if needed\n  const [ranking, setRanking] = useState(value.length ? value : [...question.options]);\n  const [dragPosition, setDragPosition] = useState(-1);\n  const [draggedItem, setDraggedItem] = useState(-1);\n  \n  // Update local ranking when value prop changes\n  useEffect(() => {\n    if (value.length) {\n      setRanking(value);\n    } else if (question.options.length && !value.length) {\n      setRanking([...question.options]);\n    }\n  }, [value, question.options]);\n\n  // Handle the actual reordering\n  const handleReordering = (sourceIndex, targetPosition) => {\n    // Skip if dropping onto self or adjacent position\n    if (sourceIndex === targetPosition || \n        (sourceIndex === targetPosition - 1 && targetPosition > 0)) {\n      return false;\n    }\n    \n    // Reorder the items based on the indicator position\n    const newRanking = [...ranking];\n    const [movedItem] = newRanking.splice(sourceIndex, 1);\n    \n    // Adjust target index if needed\n    let targetIndex = targetPosition;\n    if (sourceIndex < targetPosition) {\n      targetIndex--;\n    }\n    \n    newRanking.splice(targetIndex, 0, movedItem);\n    \n    // Update local state and notify parent\n    setRanking(newRanking);\n    onChange(question.id, newRanking, true);\n    return true;\n  };\n\n  return (\n    <div className=\"ranked-question-container\" data-context-id={dragContextId}>\n      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n        {question.label}\n      </label>\n      \n      <DragDropContext onDragEnd={(result) => {\n        // Only process the result if the drag completed successfully\n        if (!result.destination) return;\n        \n        const items = [...(value || question.defaultValue || [])];\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n        \n        // Update the parent component\n        onChange(question.id, items, true);\n      }}>\n        <Droppable droppableId={`${dragContextId}-droppable`}>\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={`ranked-list ${snapshot.isDraggingOver ? 'dragging-over' : ''}`}\n            >\n              {(value || question.defaultValue || []).map((item, index) => (\n                <Draggable \n                  key={`${item.id}`} \n                  draggableId={`${dragContextId}-${item.id}`} \n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className={`ranked-item ${snapshot.isDragging ? 'dragging' : ''}`}\n                    >\n                      {item.label || item.text}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      \n      {isError && (\n        <p className=\"text-red-500 text-sm mt-1\">{t('requiredField', language)}</p>\n      )}\n    </div>\n  );\n};\n\nexport default RankedQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}