{"ast":null,"code":"var _jsxFileName = \"/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderQuestion = ({\n  question,\n  isError,\n  value,\n  onChange,\n  language\n}) => {\n  _s();\n  // Default to min value if no value is provided, or use the provided value\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n\n  // Update local state when prop value changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n\n  // Handle slider change\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n\n  // Calculate mark positions correctly\n  const renderMarks = () => {\n    const markEntries = Object.entries(question.marks);\n    const min = question.min;\n    const max = question.max;\n    const range = max - min;\n    return markEntries.map(([markValue, label]) => {\n      // Calculate the position as a percentage of the slider range\n      const numericValue = parseInt(markValue, 10);\n      const position = (numericValue - min) / range * 100;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute transform -translate-x-1/2 text-xs text-center\",\n        style: {\n          left: `${position}%`,\n          top: '20px',\n          width: '40px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block truncate\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, markValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(BaseQuestion, {\n    question: question,\n    isError: isError,\n    language: language,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-1 pb-8 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg font-medium\",\n          children: currentValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), question.unit && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          children: question.unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: question.min,\n        max: question.max,\n        step: question.step || 1,\n        value: currentValue,\n        onChange: handleSliderChange,\n        className: `w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`,\n        style: {\n          touchAction: 'manipulation'\n        },\n        \"aria-valuemin\": question.min,\n        \"aria-valuemax\": question.max,\n        \"aria-valuenow\": currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [question.min, question.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [question.max, question.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative  h-6 m-2\",\n        children: renderMarks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderQuestion, \"tVvdVRJf1SXGV8aKwR0WcKNq9dc=\");\n_c = SliderQuestion;\nexport default SliderQuestion;\nvar _c;\n$RefreshReg$(_c, \"SliderQuestion\");","map":{"version":3,"names":["React","useEffect","useState","BaseQuestion","jsxDEV","_jsxDEV","SliderQuestion","question","isError","value","onChange","language","_s","currentValue","setCurrentValue","undefined","min","handleSliderChange","e","newValue","parseInt","target","id","renderMarks","markEntries","Object","entries","marks","max","range","map","markValue","label","numericValue","position","className","style","left","top","width","children","fileName","_jsxFileName","lineNumber","columnNumber","unit","type","step","touchAction","_c","$RefreshReg$"],"sources":["/Users/pascalseeber/Desktop/survey-process-intelligence-main/src/components/questions/SliderQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BaseQuestion from './BaseQuestion';\n\nconst SliderQuestion = ({ \n  question, \n  isError, \n  value, \n  onChange, \n  language \n}) => {\n  // Default to min value if no value is provided, or use the provided value\n  const [currentValue, setCurrentValue] = useState(value !== undefined ? value : question.min);\n  \n  // Update local state when prop value changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setCurrentValue(value);\n    }\n  }, [value]);\n  \n  // Handle slider change\n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setCurrentValue(newValue);\n    onChange(question.id, newValue);\n  };\n  \n  // Calculate mark positions correctly\n  const renderMarks = () => {\n    const markEntries = Object.entries(question.marks);\n    const min = question.min;\n    const max = question.max;\n    const range = max - min;\n    \n    return markEntries.map(([markValue, label]) => {\n      // Calculate the position as a percentage of the slider range\n      const numericValue = parseInt(markValue, 10);\n      const position = ((numericValue - min) / range) * 100;\n      \n      return (\n        <div \n          key={markValue} \n          className=\"absolute transform -translate-x-1/2 text-xs text-center\"\n          style={{ \n            left: `${position}%`,\n            top: '20px',\n            width: '40px'\n          }}\n        >\n          <span className=\"block truncate\">{label}</span>\n        </div>\n      );\n    });\n  };\n  \n  return (\n    <BaseQuestion question={question} isError={isError} language={language}>\n      <div className=\"pt-1 pb-8 relative\">\n        {/* Current value display */}\n        <div className=\"flex justify-between mb-2\">\n          <span className=\"text-lg font-medium\">{currentValue}</span>\n          {question.unit && <span className=\"text-sm text-gray-500\">{question.unit}</span>}\n        </div>\n        \n        {/* Slider input */}\n        <input\n          type=\"range\"\n          min={question.min}\n          max={question.max}\n          step={question.step || 1}\n          value={currentValue}\n          onChange={handleSliderChange}\n          className={`w-full h-6 ${isError ? 'accent-red-500' : 'accent-blue-600'}`}\n          style={{ touchAction: 'manipulation' }}\n          aria-valuemin={question.min}\n          aria-valuemax={question.max}\n          aria-valuenow={currentValue}\n        />\n        \n        {/* Min/Max labels */}\n        <div className=\"flex justify-between text-xs mt-1\">\n          <span>{question.min}{question.unit}</span>\n          <span>{question.max}{question.unit}</span>\n        </div>\n        \n        {/* Marks with correct positioning */}\n        <div className=\"relative  h-6 m-2\">\n          {renderMarks()}\n        </div>\n      </div>\n    </BaseQuestion>\n  );\n};\n\nexport default SliderQuestion; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EACtBC,QAAQ;EACRC,OAAO;EACPC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,KAAK,KAAKM,SAAS,GAAGN,KAAK,GAAGF,QAAQ,CAACS,GAAG,CAAC;;EAE5F;EACAf,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,KAAKM,SAAS,EAAE;MACvBD,eAAe,CAACL,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMQ,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACZ,KAAK,EAAE,EAAE,CAAC;IAC7CK,eAAe,CAACK,QAAQ,CAAC;IACzBT,QAAQ,CAACH,QAAQ,CAACe,EAAE,EAAEH,QAAQ,CAAC;EACjC,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACnB,QAAQ,CAACoB,KAAK,CAAC;IAClD,MAAMX,GAAG,GAAGT,QAAQ,CAACS,GAAG;IACxB,MAAMY,GAAG,GAAGrB,QAAQ,CAACqB,GAAG;IACxB,MAAMC,KAAK,GAAGD,GAAG,GAAGZ,GAAG;IAEvB,OAAOQ,WAAW,CAACM,GAAG,CAAC,CAAC,CAACC,SAAS,EAAEC,KAAK,CAAC,KAAK;MAC7C;MACA,MAAMC,YAAY,GAAGb,QAAQ,CAACW,SAAS,EAAE,EAAE,CAAC;MAC5C,MAAMG,QAAQ,GAAI,CAACD,YAAY,GAAGjB,GAAG,IAAIa,KAAK,GAAI,GAAG;MAErD,oBACExB,OAAA;QAEE8B,SAAS,EAAC,yDAAyD;QACnEC,KAAK,EAAE;UACLC,IAAI,EAAE,GAAGH,QAAQ,GAAG;UACpBI,GAAG,EAAE,MAAM;UACXC,KAAK,EAAE;QACT,CAAE;QAAAC,QAAA,eAEFnC,OAAA;UAAM8B,SAAS,EAAC,gBAAgB;UAAAK,QAAA,EAAER;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAR1Cb,SAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASX,CAAC;IAEV,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvC,OAAA,CAACF,YAAY;IAACI,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA,QAAS;IAAA6B,QAAA,eACrEnC,OAAA;MAAK8B,SAAS,EAAC,oBAAoB;MAAAK,QAAA,gBAEjCnC,OAAA;QAAK8B,SAAS,EAAC,2BAA2B;QAAAK,QAAA,gBACxCnC,OAAA;UAAM8B,SAAS,EAAC,qBAAqB;UAAAK,QAAA,EAAE3B;QAAY;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC1DrC,QAAQ,CAACsC,IAAI,iBAAIxC,OAAA;UAAM8B,SAAS,EAAC,uBAAuB;UAAAK,QAAA,EAAEjC,QAAQ,CAACsC;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eAGNvC,OAAA;QACEyC,IAAI,EAAC,OAAO;QACZ9B,GAAG,EAAET,QAAQ,CAACS,GAAI;QAClBY,GAAG,EAAErB,QAAQ,CAACqB,GAAI;QAClBmB,IAAI,EAAExC,QAAQ,CAACwC,IAAI,IAAI,CAAE;QACzBtC,KAAK,EAAEI,YAAa;QACpBH,QAAQ,EAAEO,kBAAmB;QAC7BkB,SAAS,EAAE,cAAc3B,OAAO,GAAG,gBAAgB,GAAG,iBAAiB,EAAG;QAC1E4B,KAAK,EAAE;UAAEY,WAAW,EAAE;QAAe,CAAE;QACvC,iBAAezC,QAAQ,CAACS,GAAI;QAC5B,iBAAeT,QAAQ,CAACqB,GAAI;QAC5B,iBAAef;MAAa;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGFvC,OAAA;QAAK8B,SAAS,EAAC,mCAAmC;QAAAK,QAAA,gBAChDnC,OAAA;UAAAmC,QAAA,GAAOjC,QAAQ,CAACS,GAAG,EAAET,QAAQ,CAACsC,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CvC,OAAA;UAAAmC,QAAA,GAAOjC,QAAQ,CAACqB,GAAG,EAAErB,QAAQ,CAACsC,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAGNvC,OAAA;QAAK8B,SAAS,EAAC,mBAAmB;QAAAK,QAAA,EAC/BjB,WAAW,CAAC;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAAChC,EAAA,CAzFIN,cAAc;AAAA2C,EAAA,GAAd3C,cAAc;AA2FpB,eAAeA,cAAc;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}